{"uid":"fd3801f21b32d9fe","name":"test_updateUserBySuperUser_withValidData_returns200AndData[User.SUPERUSER]","fullName":"tests.user.test_users.TestUpdateUser#test_updateUserBySuperUser_withValidData_returns200AndData","historyId":"45c86c8eb9c7e2dd745d22848da2e2e7","time":{"start":1698633040551,"stop":1698633040710,"duration":159},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'id'","statusTrace":"self = <test_users.TestUpdateUser object at 0x7f21207750d0>\nclient = <core.http_client.HTTPClient object at 0x7f2120778b90>\nuser = <User.SUPERUSER: 'superuser'>\nrequest = <FixtureRequest for <Function test_updateUserBySuperUser_withValidData_returns200AndData[User.SUPERUSER]>>\n\n    @users(User.SUPERUSER)\n    def test_updateUserBySuperUser_withValidData_returns200AndData(self, client, user, request):\n        # Arrange\n>       payload, response, model = request.getfixturevalue('create_fake_user_superuser')()\n\ntests/user/test_users.py:82: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nfixtures/users.py:21: in _fixture\n    facility_payload, facility_response, facility_model = create_fake_facility(no_of_customers=1)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nno_of_customers = 1, kwargs = {}, _ = 0\npayload = {'address_line1': '31332 Gonzalez Lane Suite 498\\nNorth Melissabury, ME 95480', 'address_line2': '6239 Morrison Meadows\\nGeorgetown, CT 16106', 'city': 'Port Robert', 'country': 'Yemen', ...}\nresponse = <Response [400]>\nmodel = ErrorResponse(status=False, message='Error', data=None, error={'name': ['facility with this name already exists.']})\n\n    def _fixture(no_of_customers: int = 0, **kwargs):\n        # Create customers\n        for _ in range(no_of_customers):\n            payload = data.fake.model.customer()  # Request body_str JSON\n            response, model = CustomerAPI(client).create_customer(data=payload)\n            customers.append(model.data.id)\n    \n        # Create facility\n        payload = data.fake.model.facility(customers=customers, **kwargs)  # Request body_str JSON\n        response, model = FacilityAPI(client).create_facility(data=payload)\n        nonlocal facility_id\n>       facility_id = model.data.id\nE       AttributeError: 'NoneType' object has no attribute 'id'\n\nfixtures/facility.py:24: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":3,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1698632451006,"stop":1698632451022,"duration":16},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"client","time":{"start":1698632451022,"stop":1698632451023,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"users","time":{"start":1698633040550,"stop":1698633040551,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"create_fake_role","time":{"start":1698633040552,"stop":1698633040552,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"create_fake_facility","time":{"start":1698633040552,"stop":1698633040552,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"create_fake_user_superuser","time":{"start":1698633040552,"stop":1698633040552,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"afterStages":[{"name":"create_fake_user_superuser::0","time":{"start":1698633040719,"stop":1698633040788,"duration":69},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"create_fake_role::0","time":{"start":1698633040789,"stop":1698633040856,"duration":67},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"create_fake_facility::0","time":{"start":1698633040857,"stop":1698633041034,"duration":177},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"client::0","time":{"start":1698633043062,"stop":1698633043064,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"parentSuite","value":"tests.user"},{"name":"suite","value":"test_users"},{"name":"subSuite","value":"TestUpdateUser"},{"name":"host","value":"fv-az450-480"},{"name":"thread","value":"2260-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.user.test_users"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"user","value":"<User.SUPERUSER: 'superuser'>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"f7d943d3b1e6ad8","status":"broken","statusDetails":"pydantic.error_wrappers.ValidationError: 1 validation error for ErrorResponse\nmessage\n  message must be \"Error\" (type=value_error)","time":{"start":1698633038229,"stop":1698633040164,"duration":1935}},{"uid":"9e90d0b21343b773","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'id'","time":{"start":1698633037896,"stop":1698633037985,"duration":89}},{"uid":"d1d9cdf7149a01bd","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'id'","time":{"start":1698633037586,"stop":1698633037663,"duration":77}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":12,"unknown":0,"total":13},"items":[{"uid":"7eb51a7a7193d49f","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/170//#testresult/7eb51a7a7193d49f","status":"passed","time":{"start":1698546605132,"stop":1698546607080,"duration":1948}},{"uid":"314b7621536501b4","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/169//#testresult/314b7621536501b4","status":"passed","time":{"start":1698459951938,"stop":1698459954038,"duration":2100}},{"uid":"69374c95a986ce34","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/168//#testresult/69374c95a986ce34","status":"passed","time":{"start":1698373611925,"stop":1698373613957,"duration":2032}},{"uid":"3928d745376fdb1e","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/167//#testresult/3928d745376fdb1e","status":"passed","time":{"start":1698287148483,"stop":1698287150210,"duration":1727}},{"uid":"6905ee2570797cc","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/166//#testresult/6905ee2570797cc","status":"passed","time":{"start":1698200901578,"stop":1698200903675,"duration":2097}},{"uid":"e72784e86d2a77c6","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/165//#testresult/e72784e86d2a77c6","status":"passed","time":{"start":1698114522126,"stop":1698114524257,"duration":2131}},{"uid":"ce4c5f65247215a1","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/164//#testresult/ce4c5f65247215a1","status":"passed","time":{"start":1698028090445,"stop":1698028092146,"duration":1701}},{"uid":"e5d91006a9c9afe4","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/163//#testresult/e5d91006a9c9afe4","status":"passed","time":{"start":1697941862274,"stop":1697941864378,"duration":2104}},{"uid":"d16bdc4da30074f6","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/162//#testresult/d16bdc4da30074f6","status":"passed","time":{"start":1697855065278,"stop":1697855066996,"duration":1718}},{"uid":"4c6ccd283a7ba4c3","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/161//#testresult/4c6ccd283a7ba4c3","status":"passed","time":{"start":1697768796855,"stop":1697768798605,"duration":1750}},{"uid":"687173e8eba233d0","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/160//#testresult/687173e8eba233d0","status":"passed","time":{"start":1697682420425,"stop":1697682422256,"duration":1831}},{"uid":"238d44beaabc1c8c","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/159//#testresult/238d44beaabc1c8c","status":"passed","time":{"start":1697596051770,"stop":1697596053628,"duration":1858}}]},"tags":[]},"source":"fd3801f21b32d9fe.json","parameterValues":["<User.SUPERUSER: 'superuser'>"]}