{"uid":"171bc9f5a2591193","name":"test_updateCustomer_withValidID_returns200AndData[User.SUPERUSER]","fullName":"tests.customer.test_customer.TestUpdateCustomer#test_updateCustomer_withValidID_returns200AndData","historyId":"ab3ab4c1e517bc7a74b3067746fbd247","time":{"start":1695003520225,"stop":1695003520336,"duration":111},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'id'","statusTrace":"self = <test_customer.TestUpdateCustomer object at 0x7f40674c6510>\nclient = <core.http_client.HTTPClient object at 0x7f4065fae210>\nuser = <User.SUPERUSER: 'superuser'>\ncreate_fake_customer = <function create_fake_customer.<locals>._fixture at 0x7f40672945e0>\n\n    @users(User.SUPERUSER)\n    def test_updateCustomer_withValidID_returns200AndData(self, client, user, create_fake_customer):\n        # Arrange\n>       setup_payload, setup_response, setup_model = create_fake_customer()\n\ntests/customer/test_customer.py:136: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nkwargs = {}\nrequest_payload = {'address_line1': '202 Brandy Ports Suite 215\\nSouth Tonyaborough, CO 21010', 'address_line2': '856 Gary Station Apt. 831\\nNew April, PR 36556', 'barcode': '7199387759700', 'city': 'Jerrymouth', ...}\nresponse = <Response [400]>\nmodel = ErrorResponse(status=False, message='Error', data=None, error={'name': ['customer with this name already exists.']})\n\n    def _fixture(**kwargs):\n        # Create customer\n        request_payload = data.fake.model.customer(**kwargs)\n        response, model = CustomerAPI(client).create_customer(data=request_payload)\n        nonlocal customer_id\n>       customer_id = model.data.id\nE       AttributeError: 'NoneType' object has no attribute 'id'\n\nfixtures/customer.py:27: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1695003515587,"stop":1695003515607,"duration":20},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"client","time":{"start":1695003515607,"stop":1695003515607,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"users","time":{"start":1695003520224,"stop":1695003520224,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"create_fake_customer","time":{"start":1695003520225,"stop":1695003520225,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"afterStages":[{"name":"create_fake_customer::0","time":{"start":1695003520391,"stop":1695003520523,"duration":132},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"client::0","time":{"start":1695003897100,"stop":1695003897102,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"parentSuite","value":"tests.customer"},{"name":"suite","value":"test_customer"},{"name":"subSuite","value":"TestUpdateCustomer"},{"name":"host","value":"fv-az256-726"},{"name":"thread","value":"2237-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.customer.test_customer"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"user","value":"<User.SUPERUSER: 'superuser'>"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"171bc9f5a2591193.json","parameterValues":["<User.SUPERUSER: 'superuser'>"]}