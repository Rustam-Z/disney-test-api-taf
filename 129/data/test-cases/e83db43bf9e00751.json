{"uid":"e83db43bf9e00751","name":"test_updateCustomer_withValidID_returns200AndData[User.SUPERUSER]","fullName":"tests.customer.test_customer.TestUpdateCustomer#test_updateCustomer_withValidID_returns200AndData","historyId":"ab3ab4c1e517bc7a74b3067746fbd247","time":{"start":1695003520526,"stop":1695003520781,"duration":255},"status":"failed","statusMessage":"AssertionError: Status code is different than expected. Actual: 400, expected: 200. Response payload: {\"status\":false,\"message\":\"Error\",\"data\":null,\"error\":{\"name\":[\"customer with this name already exists.\"]}}","statusTrace":"self = <test_customer.TestUpdateCustomer object at 0x7f40674c6510>\nclient = <core.http_client.HTTPClient object at 0x7f4065fae210>\nuser = <User.SUPERUSER: 'superuser'>\ncreate_fake_customer = <function create_fake_customer.<locals>._fixture at 0x7f4067294540>\n\n    @users(User.SUPERUSER)\n    def test_updateCustomer_withValidID_returns200AndData(self, client, user, create_fake_customer):\n        # Arrange\n        setup_payload, setup_response, setup_model = create_fake_customer()\n        customer_id = setup_model.data.id\n    \n        # Act\n        request_payload = data.fake.model.customer()\n        response, model = CustomerAPI(client).update_customer(id=customer_id, data=request_payload)\n    \n        # Assert\n>       APIResponse(response).assert_status(200)\n\ntests/customer/test_customer.py:144: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <core.asserters.APIResponse object at 0x7f406728aa90>, status_code = 200\n\n    def assert_status(self, status_code: int):\n>       assert self.response.status_code == status_code, \\\n            f'{AssertionMessage.WRONG_STATUS_CODE.value} ' \\\n            f'Actual: {self.response.status_code}, ' \\\n            f'expected: {status_code}. ' \\\n            f'Response payload: {self.body_str()}'\nE       AssertionError: Status code is different than expected. Actual: 400, expected: 200. Response payload: {\"status\":false,\"message\":\"Error\",\"data\":null,\"error\":{\"name\":[\"customer with this name already exists.\"]}}\n\ncore/asserters.py:25: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1695003515587,"stop":1695003515607,"duration":20},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"client","time":{"start":1695003515607,"stop":1695003515607,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"users","time":{"start":1695003520525,"stop":1695003520526,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"create_fake_customer","time":{"start":1695003520526,"stop":1695003520526,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"afterStages":[{"name":"create_fake_customer::0","time":{"start":1695003520791,"stop":1695003520924,"duration":133},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"client::0","time":{"start":1695003897100,"stop":1695003897102,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"parentSuite","value":"tests.customer"},{"name":"suite","value":"test_customer"},{"name":"subSuite","value":"TestUpdateCustomer"},{"name":"host","value":"fv-az256-726"},{"name":"thread","value":"2237-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.customer.test_customer"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"user","value":"<User.SUPERUSER: 'superuser'>"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"e83db43bf9e00751.json","parameterValues":["<User.SUPERUSER: 'superuser'>"]}