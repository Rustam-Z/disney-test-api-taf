{"uid":"dc906f67590d1aba","name":"test_getDailyInventory_withEmptyInventory_returns200AndData[User.SUPERUSER-monthly-metro_config-cart_build]","fullName":"tests.dashboards.test_inventory.TestGetDailyInventory#test_getDailyInventory_withEmptyInventory_returns200AndData","historyId":"53905050cc80cc2ba760e54a0bde152e","time":{"start":1696299719708,"stop":1696299719796,"duration":88},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'id'","statusTrace":"self = <test_inventory.TestGetDailyInventory object at 0x7fa58c3197d0>\nclient = <core.http_client.HTTPClient object at 0x7fa58bd02150>\nuser = <User.SUPERUSER: 'superuser'>\ncreate_fake_facility = <function create_fake_facility.<locals>._fixture at 0x7fa58bc48540>\ndaily_inventory_type = 'cart_build', inventory_base_filter = 'metro_config'\nfrequency = 'monthly'\n\n    @pytest.mark.parametrize('daily_inventory_type', ['cart_build', 'delivered'])\n    @pytest.mark.parametrize('inventory_base_filter', ['metro_config', 'item_type'])\n    @pytest.mark.parametrize('frequency', ['daily', 'weekly', 'monthly'])\n    @users(User.SUPERUSER)\n    def test_getDailyInventory_withEmptyInventory_returns200AndData(\n        self, client, user,\n        create_fake_facility,\n        daily_inventory_type, inventory_base_filter, frequency\n    ):\n        # Arrange\n>       facility_payload, facility_response, facility_model = create_fake_facility()\n\ntests/dashboards/test_inventory.py:97: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nno_of_customers = 0, kwargs = {}\npayload = {'address_line1': '0740 Lori Mountain\\nMaynardland, WV 01696', 'address_line2': 'Unit 9947 Box 9308\\nDPO AP 54998', 'city': 'Andrewfurt', 'country': 'Belarus', ...}\nresponse = <Response [400]>\nmodel = ErrorResponse(status=False, message='Error', data=None, error={'name': ['facility with this name already exists.']})\n\n    def _fixture(no_of_customers: int = 0, **kwargs):\n        # Create customers\n        for _ in range(no_of_customers):\n            payload = data.fake.model.customer()  # Request body_str JSON\n            response, model = CustomerAPI(client).create_customer(data=payload)\n            customers.append(model.data.id)\n    \n        # Create facility\n        payload = data.fake.model.facility(customers=customers, **kwargs)  # Request body_str JSON\n        response, model = FacilityAPI(client).create_facility(data=payload)\n        nonlocal facility_id\n>       facility_id = model.data.id\nE       AttributeError: 'NoneType' object has no attribute 'id'\n\nfixtures/facility.py:24: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1696299563332,"stop":1696299563346,"duration":14},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"client","time":{"start":1696299563346,"stop":1696299563346,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"users","time":{"start":1696299719707,"stop":1696299719708,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"create_fake_facility","time":{"start":1696299719708,"stop":1696299719708,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"afterStages":[{"name":"create_fake_facility::0","time":{"start":1696299719803,"stop":1696299719900,"duration":97},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"client::0","time":{"start":1696299955887,"stop":1696299955888,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"parentSuite","value":"tests.dashboards"},{"name":"suite","value":"test_inventory"},{"name":"subSuite","value":"TestGetDailyInventory"},{"name":"host","value":"fv-az218-818"},{"name":"thread","value":"2302-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.dashboards.test_inventory"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"daily_inventory_type","value":"'cart_build'"},{"name":"frequency","value":"'monthly'"},{"name":"inventory_base_filter","value":"'metro_config'"},{"name":"user","value":"<User.SUPERUSER: 'superuser'>"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"dc906f67590d1aba.json","parameterValues":["'cart_build'","'monthly'","'metro_config'","<User.SUPERUSER: 'superuser'>"]}