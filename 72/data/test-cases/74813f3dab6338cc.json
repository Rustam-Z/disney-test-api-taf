{"uid":"74813f3dab6338cc","name":"test_getUnassignedOrders_withNoOrders_returns200AndData[User.SUPERUSER]","fullName":"tests.order.test_driver_assignment.TestGetUnassignedOrders#test_getUnassignedOrders_withNoOrders_returns200AndData","historyId":"5cb40a3004f44633e6f1039e809c7e80","time":{"start":1683896704091,"stop":1683896704170,"duration":79},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'id'","statusTrace":"self = <order.test_driver_assignment.TestGetUnassignedOrders object at 0x7f27824d0b10>\nclient = <core.http_client.HTTPClient object at 0x7f27823b51d0>\nuser = <User.SUPERUSER: 'superuser'>\nrequest = <FixtureRequest for <Function test_getUnassignedOrders_withNoOrders_returns200AndData[User.SUPERUSER]>>\n\n    @users(User.SUPERUSER)\n    def test_getUnassignedOrders_withNoOrders_returns200AndData(self, client, user, request):\n        # Arrange\n>       payload, response, model = request.getfixturevalue('create_fake_facility')(no_of_customers=1)\n\ntests/order/test_driver_assignment.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nno_of_customers = 1, kwargs = {}, _ = 0\npayload = {'address_line1': '250 Danielle Plaza Suite 786\\nLake Lisa, PA 19286', 'address_line2': '51812 Carl Drive\\nNorth Cherylbury, MS 22438', 'barcode': '6730049344790', 'city': 'Johnsonside', ...}\nresponse = <Response [400]>\nmodel = ErrorResponse(status=False, message='Error', data=None, error={'name': ['customer with this name already exists.']})\n\n    def _fixture(no_of_customers: int = 0, **kwargs):\n        # Create customers\n        for _ in range(no_of_customers):\n            payload = data.fake.model.customer()  # Request body_str JSON\n            response, model = CustomerAPI(client).create_customer(data=payload)\n>           customers.append(model.data.id)\nE           AttributeError: 'NoneType' object has no attribute 'id'\n\nfixtures/facility.py:18: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1683896660939,"stop":1683896660953,"duration":14},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"client","time":{"start":1683896660953,"stop":1683896660953,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"users","time":{"start":1683896704090,"stop":1683896704091,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"create_fake_facility","time":{"start":1683896704091,"stop":1683896704091,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"afterStages":[{"name":"create_fake_facility::0","time":{"start":1683896704211,"stop":1683896704295,"duration":84},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"client::0","time":{"start":1683896761304,"stop":1683896761305,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"parentSuite","value":"tests.order"},{"name":"suite","value":"test_driver_assignment"},{"name":"subSuite","value":"TestGetUnassignedOrders"},{"name":"host","value":"fv-az162-227"},{"name":"thread","value":"2345-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.order.test_driver_assignment"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"user","value":"<User.SUPERUSER: 'superuser'>"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"74813f3dab6338cc.json","parameterValues":["<User.SUPERUSER: 'superuser'>"]}