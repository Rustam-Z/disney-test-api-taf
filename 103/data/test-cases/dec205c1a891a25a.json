{"uid":"dec205c1a891a25a","name":"test_submitAction_withLongDisneyOrderID_returns400AndError[User.SUPERUSER]","fullName":"tests.staging.test_staging.TestSubmitAction#test_submitAction_withLongDisneyOrderID_returns400AndError","historyId":"06949b58073337402cf0c0d9bde5c945","time":{"start":1686287788378,"stop":1686287789989,"duration":1611},"status":"broken","statusMessage":"pydantic.error_wrappers.ValidationError: 1 validation error for ErrorResponse\nmessage\n  message must be \"Error\" (type=value_error)","statusTrace":"self = <test_staging.TestSubmitAction object at 0x7fbde41ea210>\nclient = <core.http_client.HTTPClient object at 0x7fbde4188b50>\nuser = <User.SUPERUSER: 'superuser'>\nrequest = <FixtureRequest for <Function test_submitAction_withLongDisneyOrderID_returns400AndError[User.SUPERUSER]>>\n\n    @users(User.SUPERUSER)\n    def test_submitAction_withLongDisneyOrderID_returns400AndError(self, client, user, request):\n        # Arrange\n        setup = request.getfixturevalue('assign_metro')()\n        customer_id = setup.get('customer_id')\n        order_id = setup.get('order_id')\n        customer_response, customer_model = CustomerAPI(client).get_customer(customer_id)\n        customer_barcode = customer_model.data.barcode\n    \n        # Act\n        payload = {\n            \"order_id\": order_id,\n            \"disney_order_id\": data.fake.ean(),\n            \"customer_barcode\": customer_barcode\n        }\n>       response, model = StagingAPI(client).submit_action(payload)\n\ntests/staging/test_staging.py:301: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi/endpoints/staging/staging_api.py:106: in submit_action\n    response_payload = ErrorResponse(**response.json())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n>   ???\nE   pydantic.error_wrappers.ValidationError: 1 validation error for ErrorResponse\nE   message\nE     message must be \"Error\" (type=value_error)\n\npydantic/main.py:341: ValidationError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":3,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1686287670005,"stop":1686287670022,"duration":17},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"client","time":{"start":1686287670022,"stop":1686287670022,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"users","time":{"start":1686287788377,"stop":1686287788377,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"create_fake_order_superuser","time":{"start":1686287788378,"stop":1686287788378,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"assign_metro","time":{"start":1686287788378,"stop":1686287788378,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"create_fake_cart_superuser","time":{"start":1686287788378,"stop":1686287788378,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"create_fake_facility","time":{"start":1686287788378,"stop":1686287788378,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"afterStages":[{"name":"assign_metro::0","time":{"start":1686287790000,"stop":1686287790000,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"create_fake_cart_superuser::0","time":{"start":1686287790000,"stop":1686287790423,"duration":423},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"create_fake_order_superuser::0","time":{"start":1686287790424,"stop":1686287790568,"duration":144},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"create_fake_facility::0","time":{"start":1686287790569,"stop":1686287790729,"duration":160},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"client::0","time":{"start":1686287817912,"stop":1686287817914,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"parentSuite","value":"tests.staging"},{"name":"suite","value":"test_staging"},{"name":"subSuite","value":"TestSubmitAction"},{"name":"host","value":"fv-az507-224"},{"name":"thread","value":"2374-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.staging.test_staging"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"user","value":"<User.SUPERUSER: 'superuser'>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"b8140bc80179921b","status":"broken","statusDetails":"pydantic.error_wrappers.ValidationError: 1 validation error for ErrorResponse\nmessage\n  message must be \"Error\" (type=value_error)","time":{"start":1686287778470,"stop":1686287787663,"duration":9193}},{"uid":"90836822d7917c24","status":"broken","statusDetails":"pydantic.error_wrappers.ValidationError: 1 validation error for ErrorResponse\nmessage\n  message must be \"Error\" (type=value_error)","time":{"start":1686287776192,"stop":1686287777762,"duration":1570}},{"uid":"b50bbb02ad921741","status":"broken","statusDetails":"pydantic.error_wrappers.ValidationError: 1 validation error for ErrorResponse\nmessage\n  message must be \"Error\" (type=value_error)","time":{"start":1686287773912,"stop":1686287775444,"duration":1532}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":3,"skipped":0,"passed":0,"unknown":0,"total":3},"items":[{"uid":"daf7f493e745f9a7","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/102//#testresult/daf7f493e745f9a7","status":"broken","statusDetails":"pydantic.error_wrappers.ValidationError: 1 validation error for ErrorResponse\nmessage\n  message must be \"Error\" (type=value_error)","time":{"start":1686284191792,"stop":1686284192620,"duration":828}},{"uid":"d233ef1f0bf3747e","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/28//#testresult/d233ef1f0bf3747e","status":"broken","statusDetails":"pydantic.error_wrappers.ValidationError: 1 validation error for ErrorResponse\nmessage\n  message must be \"Error\" (type=value_error)","time":{"start":1686279703962,"stop":1686279704797,"duration":835}}]},"tags":[]},"source":"dec205c1a891a25a.json","parameterValues":["<User.SUPERUSER: 'superuser'>"]}