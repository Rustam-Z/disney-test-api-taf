{"uid":"e22fb86b76ed56ef","name":"test_submitAction_withLongDisneyOrderID_returns400AndError[User.SUPERUSER]","fullName":"tests.staging.test_staging.TestSubmitAction#test_submitAction_withLongDisneyOrderID_returns400AndError","historyId":"06949b58073337402cf0c0d9bde5c945","time":{"start":1683893470785,"stop":1683893471944,"duration":1159},"status":"broken","statusMessage":"pydantic.error_wrappers.ValidationError: 1 validation error for ErrorResponse\nmessage\n  message must be \"Error\" (type=value_error)","statusTrace":"self = <test_staging.TestSubmitAction object at 0x7ff0cc007810>\nclient = <core.http_client.HTTPClient object at 0x7ff0cbf9aa50>\nuser = <User.SUPERUSER: 'superuser'>\nrequest = <FixtureRequest for <Function test_submitAction_withLongDisneyOrderID_returns400AndError[User.SUPERUSER]>>\n\n    @users(User.SUPERUSER)\n    def test_submitAction_withLongDisneyOrderID_returns400AndError(self, client, user, request):\n        # Arrange\n        setup = request.getfixturevalue('assign_metro')()\n        customer_id = setup.get('customer_id')\n        order_id = setup.get('order_id')\n        customer_response, customer_model = CustomerAPI(client).get_customer(customer_id)\n        customer_barcode = customer_model.data.barcode\n    \n        # Act\n        payload = {\n            \"order_id\": order_id,\n            \"disney_order_id\": data.fake.ean(),\n            \"customer_barcode\": customer_barcode\n        }\n>       response, model = StagingAPI(client).submit_action(payload)\n\ntests/staging/test_staging.py:282: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi/endpoints/staging/staging_api.py:105: in submit_action\n    response_payload = ErrorResponse(**response.json())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n>   ???\nE   pydantic.error_wrappers.ValidationError: 1 validation error for ErrorResponse\nE   message\nE     message must be \"Error\" (type=value_error)\n\npydantic/main.py:341: ValidationError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":3,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1683893398086,"stop":1683893398100,"duration":14},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"client","time":{"start":1683893398100,"stop":1683893398100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"users","time":{"start":1683893470785,"stop":1683893470785,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"create_fake_order_superuser","time":{"start":1683893470786,"stop":1683893470786,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"assign_metro","time":{"start":1683893470786,"stop":1683893470786,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"create_fake_cart_superuser","time":{"start":1683893470786,"stop":1683893470786,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"create_fake_facility","time":{"start":1683893470786,"stop":1683893470786,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"afterStages":[{"name":"assign_metro::0","time":{"start":1683893471953,"stop":1683893471953,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"create_fake_cart_superuser::0","time":{"start":1683893471953,"stop":1683893472304,"duration":351},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"create_fake_order_superuser::0","time":{"start":1683893472305,"stop":1683893472401,"duration":96},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"create_fake_facility::0","time":{"start":1683893472402,"stop":1683893472539,"duration":137},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"client::0","time":{"start":1683893495642,"stop":1683893495643,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"parentSuite","value":"tests.staging"},{"name":"suite","value":"test_staging"},{"name":"subSuite","value":"TestSubmitAction"},{"name":"host","value":"fv-az448-180"},{"name":"thread","value":"2431-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.staging.test_staging"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"user","value":"<User.SUPERUSER: 'superuser'>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"f705551e5eac0f50","status":"broken","statusDetails":"pydantic.error_wrappers.ValidationError: 1 validation error for ErrorResponse\nmessage\n  message must be \"Error\" (type=value_error)","time":{"start":1683893468908,"stop":1683893470198,"duration":1290}},{"uid":"eb3473e65ec8dfe4","status":"broken","statusDetails":"pydantic.error_wrappers.ValidationError: 1 validation error for ErrorResponse\nmessage\n  message must be \"Error\" (type=value_error)","time":{"start":1683893467055,"stop":1683893468312,"duration":1257}},{"uid":"fd609776bb71008f","status":"broken","statusDetails":"pydantic.error_wrappers.ValidationError: 1 validation error for ErrorResponse\nmessage\n  message must be \"Error\" (type=value_error)","time":{"start":1683893465267,"stop":1683893466444,"duration":1177}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":7,"skipped":0,"passed":0,"unknown":0,"total":7},"items":[{"uid":"8c97b7c69fe60dac","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/2//#testresult/8c97b7c69fe60dac","status":"broken","statusDetails":"pydantic.error_wrappers.ValidationError: 1 validation error for ErrorResponse\nmessage\n  message must be \"Error\" (type=value_error)","time":{"start":1683893029098,"stop":1683893030388,"duration":1290}},{"uid":"47f0915e2a5b1a9e","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/64//#testresult/47f0915e2a5b1a9e","status":"broken","statusDetails":"pydantic.error_wrappers.ValidationError: 1 validation error for ErrorResponse\nmessage\n  message must be \"Error\" (type=value_error)","time":{"start":1683892321768,"stop":1683892323043,"duration":1275}},{"uid":"b9f64465f36ee97a","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/63//#testresult/b9f64465f36ee97a","status":"broken","statusDetails":"pydantic.error_wrappers.ValidationError: 1 validation error for ErrorResponse\nmessage\n  message must be \"Error\" (type=value_error)","time":{"start":1683891329822,"stop":1683891330821,"duration":999}},{"uid":"2c74d705c5544f95","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/62//#testresult/2c74d705c5544f95","status":"broken","statusDetails":"pydantic.error_wrappers.ValidationError: 1 validation error for ErrorResponse\nmessage\n  message must be \"Error\" (type=value_error)","time":{"start":1683891101113,"stop":1683891102389,"duration":1276}},{"uid":"27139829d1b9d59e","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/61//#testresult/27139829d1b9d59e","status":"broken","statusDetails":"pydantic.error_wrappers.ValidationError: 1 validation error for ErrorResponse\nmessage\n  message must be \"Error\" (type=value_error)","time":{"start":1683890727348,"stop":1683890729048,"duration":1700}},{"uid":"d871f27e28630dca","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/56//#testresult/d871f27e28630dca","status":"broken","statusDetails":"pydantic.error_wrappers.ValidationError: 1 validation error for ErrorResponse\nmessage\n  message must be \"Error\" (type=value_error)","time":{"start":1683887840393,"stop":1683887841554,"duration":1161}}]},"tags":[]},"source":"e22fb86b76ed56ef.json","parameterValues":["<User.SUPERUSER: 'superuser'>"]}