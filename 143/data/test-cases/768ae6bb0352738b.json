{"uid":"768ae6bb0352738b","name":"test_createCustomerContact_withValidData_returns201AndData[User.SUPERUSER]","fullName":"tests.customer.test_customer_contact.TestCreateCustomerContact#test_createCustomerContact_withValidData_returns201AndData","historyId":"a42c4eb31247b9283257c7f4ed00fc93","time":{"start":1696213185871,"stop":1696213185920,"duration":49},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'id'","statusTrace":"self = <test_customer_contact.TestCreateCustomerContact object at 0x7fc9a2364110>\nclient = <core.http_client.HTTPClient object at 0x7fc9a234f350>\nuser = <User.SUPERUSER: 'superuser'>\ncreate_fake_facility = <function create_fake_facility.<locals>._fixture at 0x7fc9a210c180>\n\n    @users(User.SUPERUSER)\n    def test_createCustomerContact_withValidData_returns201AndData(self, client, user, create_fake_facility):\n        # Arrange\n>       facility_payload, facility_response, facility_model = create_fake_facility(no_of_customers=1)\n\ntests/customer/test_customer_contact.py:15: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nno_of_customers = 1, kwargs = {}, _ = 0\npayload = {'address_line1': '0181 Jennifer Lane Apt. 521\\nOlsonfort, MO 98202', 'address_line2': '804 Stewart Falls Suite 296\\nAlexanderberg, ME 52642', 'barcode': '7056362728239', 'city': 'New Austinshire', ...}\nresponse = <Response [400]>\nmodel = ErrorResponse(status=False, message='Error', data=None, error={'name': ['customer with this name already exists.']})\n\n    def _fixture(no_of_customers: int = 0, **kwargs):\n        # Create customers\n        for _ in range(no_of_customers):\n            payload = data.fake.model.customer()  # Request body_str JSON\n            response, model = CustomerAPI(client).create_customer(data=payload)\n>           customers.append(model.data.id)\nE           AttributeError: 'NoneType' object has no attribute 'id'\n\nfixtures/facility.py:18: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1696213181275,"stop":1696213181289,"duration":14},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"client","time":{"start":1696213181289,"stop":1696213181289,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"users","time":{"start":1696213185870,"stop":1696213185870,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"create_fake_facility","time":{"start":1696213185871,"stop":1696213185871,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"afterStages":[{"name":"create_fake_facility::0","time":{"start":1696213185926,"stop":1696213185976,"duration":50},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"client::0","time":{"start":1696213536826,"stop":1696213536828,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"parentSuite","value":"tests.customer"},{"name":"suite","value":"test_customer_contact"},{"name":"subSuite","value":"TestCreateCustomerContact"},{"name":"host","value":"fv-az1025-732"},{"name":"thread","value":"2210-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.customer.test_customer_contact"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"user","value":"<User.SUPERUSER: 'superuser'>"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"768ae6bb0352738b.json","parameterValues":["<User.SUPERUSER: 'superuser'>"]}