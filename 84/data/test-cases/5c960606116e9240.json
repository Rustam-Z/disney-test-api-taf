{"uid":"5c960606116e9240","name":"test_getDailyInventory_withCartBuildMetroConfig_returns200AndData[User.SUPERUSER]","fullName":"tests.dashboards.test_inventory.TestGetDailyInventory#test_getDailyInventory_withCartBuildMetroConfig_returns200AndData","historyId":"1c07719ba95a9a0e83c4b76350b82469","time":{"start":1691116063283,"stop":1691116063631,"duration":348},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'id'","statusTrace":"self = <test_inventory.TestGetDailyInventory object at 0x7efcad17cf90>\nclient = <core.http_client.HTTPClient object at 0x7efcae3e4990>\nuser = <User.SUPERUSER: 'superuser'>\ncreate_fake_facility = <function create_fake_facility.<locals>._fixture at 0x7efcadefa980>\ncreate_fake_cart_superuser = <function create_fake_cart_superuser.<locals>._fixture at 0x7efcadef8360>\n\n    @users(User.SUPERUSER)\n    def test_getDailyInventory_withCartBuildMetroConfig_returns200AndData(\n        self, client, user,\n        create_fake_facility,\n        create_fake_cart_superuser\n    ):\n        # Arrange\n        facility_payload, facility_response, facility_model = create_fake_facility()\n        facility_id = facility_model.data.id\n>       create_fake_cart_superuser(facility_id=facility_id)\n\ntests/dashboards/test_inventory.py:122: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nkwargs = {'facility_id': 756}, facility_id = 756\ncategory_payload = {'name': 'James Howard'}\ncategory_response = <Response [201]>\ncategory_model = CreateInventoryCategorySuccessResponse(status=True, message='Successfully', data=_InventoryCategory(id=245, name='Jame...ated_by=_UserField(id=1, email='admin@disney.com'), updated_by=_UserField(id=1, email='admin@disney.com')), error=None)\n\n    def _fixture(**kwargs):\n        # Arrange\n    \n        # Create facility\n        if 'facility_id' not in kwargs:\n            facility_payload, facility_response, facility_model = create_fake_facility(no_of_customers=1)\n            kwargs['facility_id'] = facility_model.data.id\n        facility_id = kwargs['facility_id']\n    \n        # Create inventory category\n        category_payload = data.fake.model.inventory_category()\n        category_response, category_model = InventoryCategoryAPI(client).create_category(data=category_payload)\n        nonlocal category_id\n        category_id = category_model.data.id\n    \n        # Create inventory item type\n        inventory_item_type_payload = data.fake.model.inventory_item_type(category_id=category_id)\n        inventory_item_type_response, inventory_item_type_model = InventoryItemTypeAPI(client).create_item_type(\n            data=inventory_item_type_payload\n        )\n        nonlocal inventory_item_type_id\n        inventory_item_type_id = inventory_item_type_model.data.id\n    \n        # Create facility item type\n        payload = data.fake.model.facility_item_type(item_type_id=inventory_item_type_id, facility_id=facility_id)\n        response, model = FacilityItemTypeAPI(client).create_item_type(data=payload)\n        nonlocal facility_item_type_id\n        facility_item_type_id = model.data.id\n    \n        # Create metro item configuration\n        payload = data.fake.model.metro_item_configuration(\n            facility_id=facility_id,\n            facility_item_type_ids=[facility_item_type_id],\n        )\n        response, conf_model = MetroItemConfigurationAPI(client).create_config(data=payload)\n        nonlocal metro_item_config_id\n>       metro_item_config_id = conf_model.data.id\nE       AttributeError: 'NoneType' object has no attribute 'id'\n\nfixtures/cart_build.py:56: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":3,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1691115984544,"stop":1691115984557,"duration":13},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"client","time":{"start":1691115984557,"stop":1691115984558,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"users","time":{"start":1691116063282,"stop":1691116063282,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"create_fake_cart_superuser","time":{"start":1691116063283,"stop":1691116063283,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"create_fake_facility","time":{"start":1691116063283,"stop":1691116063283,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"afterStages":[{"name":"create_fake_cart_superuser::0","time":{"start":1691116063637,"stop":1691116063997,"duration":360},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"create_fake_facility::0","time":{"start":1691116063998,"stop":1691116064120,"duration":122},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"client::0","time":{"start":1691116219422,"stop":1691116219423,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"parentSuite","value":"tests.dashboards"},{"name":"suite","value":"test_inventory"},{"name":"subSuite","value":"TestGetDailyInventory"},{"name":"host","value":"fv-az735-234"},{"name":"thread","value":"2268-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.dashboards.test_inventory"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"user","value":"<User.SUPERUSER: 'superuser'>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"d86b093b1f8a3213","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'id'","time":{"start":1691116062522,"stop":1691116062850,"duration":328}},{"uid":"a993036b522ebb22","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'id'","time":{"start":1691116061687,"stop":1691116062068,"duration":381}},{"uid":"bb2e497cdb0d2219","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'id'","time":{"start":1691116060808,"stop":1691116061213,"duration":405}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":45,"unknown":0,"total":46},"items":[{"uid":"a2490f63d31512a3","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/83//#testresult/a2490f63d31512a3","status":"passed","time":{"start":1691029588505,"stop":1691029589172,"duration":667}},{"uid":"8c4e1dbde7481669","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/82//#testresult/8c4e1dbde7481669","status":"passed","time":{"start":1690943113973,"stop":1690943115158,"duration":1185}},{"uid":"88b2881d36ec2aa6","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/81//#testresult/88b2881d36ec2aa6","status":"passed","time":{"start":1690857343972,"stop":1690857344948,"duration":976}},{"uid":"96b0512bd36b46d9","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/80//#testresult/96b0512bd36b46d9","status":"passed","time":{"start":1690770625509,"stop":1690770626603,"duration":1094}},{"uid":"2e1fb14581f923cd","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/79//#testresult/2e1fb14581f923cd","status":"passed","time":{"start":1690684015052,"stop":1690684016127,"duration":1075}},{"uid":"bb5a8a584d2443df","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/78//#testresult/bb5a8a584d2443df","status":"passed","time":{"start":1690597473537,"stop":1690597474318,"duration":781}},{"uid":"a03b8d19c3c37dd3","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/77//#testresult/a03b8d19c3c37dd3","status":"passed","time":{"start":1690511255145,"stop":1690511255941,"duration":796}},{"uid":"9bc04c6f5b1b0e07","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/76//#testresult/9bc04c6f5b1b0e07","status":"passed","time":{"start":1690424716817,"stop":1690424717828,"duration":1011}},{"uid":"8f1689d39bf408ad","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/75//#testresult/8f1689d39bf408ad","status":"passed","time":{"start":1690338908044,"stop":1690338909220,"duration":1176}},{"uid":"26a9b288c73b8f05","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/74//#testresult/26a9b288c73b8f05","status":"passed","time":{"start":1690253076329,"stop":1690253076963,"duration":634}},{"uid":"b3f0adea7bc9740b","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/73//#testresult/b3f0adea7bc9740b","status":"passed","time":{"start":1690165985137,"stop":1690165985680,"duration":543}},{"uid":"687e73d7cd4a364c","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/72//#testresult/687e73d7cd4a364c","status":"passed","time":{"start":1690079771095,"stop":1690079771873,"duration":778}},{"uid":"a7b6a44a0f6507bd","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/71//#testresult/a7b6a44a0f6507bd","status":"passed","time":{"start":1689993002783,"stop":1689993003840,"duration":1057}},{"uid":"8f0c5f6cef9b4a82","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/70//#testresult/8f0c5f6cef9b4a82","status":"passed","time":{"start":1689907114768,"stop":1689907115446,"duration":678}},{"uid":"ef37173a7231bbb4","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/69//#testresult/ef37173a7231bbb4","status":"passed","time":{"start":1689820578137,"stop":1689820578826,"duration":689}},{"uid":"dd2458d1066bb721","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/68//#testresult/dd2458d1066bb721","status":"passed","time":{"start":1689738469546,"stop":1689738470456,"duration":910}},{"uid":"af91e3f20feffd3","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/67//#testresult/af91e3f20feffd3","status":"passed","time":{"start":1689649407846,"stop":1689649408833,"duration":987}},{"uid":"71832d7178f15d4e","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/66//#testresult/71832d7178f15d4e","status":"passed","time":{"start":1689563203357,"stop":1689563204145,"duration":788}},{"uid":"c12cb0935c8ed50b","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/65//#testresult/c12cb0935c8ed50b","status":"passed","time":{"start":1689477155539,"stop":1689477156208,"duration":669}},{"uid":"5ba08f1f1875b361","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/64//#testresult/5ba08f1f1875b361","status":"passed","time":{"start":1689390242710,"stop":1689390243416,"duration":706}}]},"tags":[]},"source":"5c960606116e9240.json","parameterValues":["<User.SUPERUSER: 'superuser'>"]}