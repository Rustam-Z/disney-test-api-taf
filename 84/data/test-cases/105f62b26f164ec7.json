{"uid":"105f62b26f164ec7","name":"test_getCurrentInventory_withMetroConfig_returns200AndData[User.SUPERUSER]","fullName":"tests.dashboards.test_inventory.TestGetCurrentInventory#test_getCurrentInventory_withMetroConfig_returns200AndData","historyId":"f1dc1eec77e822f64bb5eef52ecb53c9","time":{"start":1691115998690,"stop":1691115999015,"duration":325},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'id'","statusTrace":"self = <test_inventory.TestGetCurrentInventory object at 0x7efcad111510>\nclient = <core.http_client.HTTPClient object at 0x7efcae3e4990>\nuser = <User.SUPERUSER: 'superuser'>\ncreate_fake_facility = <function create_fake_facility.<locals>._fixture at 0x7efcae4153a0>\ncreate_fake_cart_superuser = <function create_fake_cart_superuser.<locals>._fixture at 0x7efcae416160>\n\n    @users(User.SUPERUSER)\n    def test_getCurrentInventory_withMetroConfig_returns200AndData(\n        self, client, user,\n        create_fake_facility,\n        create_fake_cart_superuser\n    ):\n        # Arrange\n        facility_payload, facility_response, facility_model = create_fake_facility()\n        facility_id = facility_model.data.id\n>       create_fake_cart_superuser(facility_id=facility_id)\n\ntests/dashboards/test_inventory.py:48: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nkwargs = {'facility_id': 736}, facility_id = 736\ncategory_payload = {'name': 'Jessica Harris'}\ncategory_response = <Response [201]>\ncategory_model = CreateInventoryCategorySuccessResponse(status=True, message='Successfully', data=_InventoryCategory(id=237, name='Jess...ated_by=_UserField(id=1, email='admin@disney.com'), updated_by=_UserField(id=1, email='admin@disney.com')), error=None)\n\n    def _fixture(**kwargs):\n        # Arrange\n    \n        # Create facility\n        if 'facility_id' not in kwargs:\n            facility_payload, facility_response, facility_model = create_fake_facility(no_of_customers=1)\n            kwargs['facility_id'] = facility_model.data.id\n        facility_id = kwargs['facility_id']\n    \n        # Create inventory category\n        category_payload = data.fake.model.inventory_category()\n        category_response, category_model = InventoryCategoryAPI(client).create_category(data=category_payload)\n        nonlocal category_id\n        category_id = category_model.data.id\n    \n        # Create inventory item type\n        inventory_item_type_payload = data.fake.model.inventory_item_type(category_id=category_id)\n        inventory_item_type_response, inventory_item_type_model = InventoryItemTypeAPI(client).create_item_type(\n            data=inventory_item_type_payload\n        )\n        nonlocal inventory_item_type_id\n        inventory_item_type_id = inventory_item_type_model.data.id\n    \n        # Create facility item type\n        payload = data.fake.model.facility_item_type(item_type_id=inventory_item_type_id, facility_id=facility_id)\n        response, model = FacilityItemTypeAPI(client).create_item_type(data=payload)\n        nonlocal facility_item_type_id\n        facility_item_type_id = model.data.id\n    \n        # Create metro item configuration\n        payload = data.fake.model.metro_item_configuration(\n            facility_id=facility_id,\n            facility_item_type_ids=[facility_item_type_id],\n        )\n        response, conf_model = MetroItemConfigurationAPI(client).create_config(data=payload)\n        nonlocal metro_item_config_id\n>       metro_item_config_id = conf_model.data.id\nE       AttributeError: 'NoneType' object has no attribute 'id'\n\nfixtures/cart_build.py:56: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":3,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1691115984544,"stop":1691115984557,"duration":13},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"client","time":{"start":1691115984557,"stop":1691115984558,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"create_fake_cart_superuser","time":{"start":1691115998689,"stop":1691115998689,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"create_fake_facility","time":{"start":1691115998689,"stop":1691115998689,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"users","time":{"start":1691115998689,"stop":1691115998689,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"afterStages":[{"name":"create_fake_cart_superuser::0","time":{"start":1691115999021,"stop":1691115999325,"duration":304},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"create_fake_facility::0","time":{"start":1691115999325,"stop":1691115999430,"duration":105},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"client::0","time":{"start":1691116219422,"stop":1691116219423,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"parentSuite","value":"tests.dashboards"},{"name":"suite","value":"test_inventory"},{"name":"subSuite","value":"TestGetCurrentInventory"},{"name":"host","value":"fv-az735-234"},{"name":"thread","value":"2268-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.dashboards.test_inventory"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"user","value":"<User.SUPERUSER: 'superuser'>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"1106694ebcfa079c","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'id'","time":{"start":1691115997972,"stop":1691115998280,"duration":308}},{"uid":"69253f71b9987347","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'id'","time":{"start":1691115997257,"stop":1691115997570,"duration":313}},{"uid":"5ed076d0a1288926","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'id'","time":{"start":1691115996508,"stop":1691115996825,"duration":317}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":45,"unknown":0,"total":46},"items":[{"uid":"3d512c2e04e68f9b","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/83//#testresult/3d512c2e04e68f9b","status":"passed","time":{"start":1691029536585,"stop":1691029537253,"duration":668}},{"uid":"1c28d4ef5d66a764","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/82//#testresult/1c28d4ef5d66a764","status":"passed","time":{"start":1690943066786,"stop":1690943067808,"duration":1022}},{"uid":"4cd0f641472d613e","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/81//#testresult/4cd0f641472d613e","status":"passed","time":{"start":1690857306042,"stop":1690857306988,"duration":946}},{"uid":"6fe8a2088e9ad346","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/80//#testresult/6fe8a2088e9ad346","status":"passed","time":{"start":1690770593645,"stop":1690770594706,"duration":1061}},{"uid":"2cf52a09db3cfb46","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/79//#testresult/2cf52a09db3cfb46","status":"passed","time":{"start":1690683991031,"stop":1690683992060,"duration":1029}},{"uid":"fabc4a53e457e155","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/78//#testresult/fabc4a53e457e155","status":"passed","time":{"start":1690597458841,"stop":1690597459556,"duration":715}},{"uid":"b8ec16b608b76718","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/77//#testresult/b8ec16b608b76718","status":"passed","time":{"start":1690511247492,"stop":1690511248309,"duration":817}},{"uid":"266434ce8c3c04f7","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/76//#testresult/266434ce8c3c04f7","status":"passed","time":{"start":1690424671253,"stop":1690424672199,"duration":946}},{"uid":"709fd75734de76f5","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/75//#testresult/709fd75734de76f5","status":"passed","time":{"start":1690338870222,"stop":1690338871258,"duration":1036}},{"uid":"59417681c3469689","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/74//#testresult/59417681c3469689","status":"passed","time":{"start":1690253048858,"stop":1690253049429,"duration":571}},{"uid":"933f9fadc6a4ca9","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/73//#testresult/933f9fadc6a4ca9","status":"passed","time":{"start":1690165965041,"stop":1690165965555,"duration":514}},{"uid":"97d932e04d16254","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/72//#testresult/97d932e04d16254","status":"passed","time":{"start":1690079756735,"stop":1690079757497,"duration":762}},{"uid":"bafeb299363e1fd9","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/71//#testresult/bafeb299363e1fd9","status":"passed","time":{"start":1689992993267,"stop":1689992994405,"duration":1138}},{"uid":"8507ab49a5aeefc","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/70//#testresult/8507ab49a5aeefc","status":"passed","time":{"start":1689906777060,"stop":1689906777619,"duration":559}},{"uid":"ab66890da3d6fff6","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/69//#testresult/ab66890da3d6fff6","status":"passed","time":{"start":1689820247321,"stop":1689820247890,"duration":569}},{"uid":"e44897b2f4feb447","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/68//#testresult/e44897b2f4feb447","status":"passed","time":{"start":1689738148174,"stop":1689738148946,"duration":772}},{"uid":"7ca8852b817490f6","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/67//#testresult/7ca8852b817490f6","status":"passed","time":{"start":1689649093712,"stop":1689649094523,"duration":811}},{"uid":"580ed838c7c50bb2","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/66//#testresult/580ed838c7c50bb2","status":"passed","time":{"start":1689562896199,"stop":1689562896890,"duration":691}},{"uid":"135c10b0d057b522","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/65//#testresult/135c10b0d057b522","status":"passed","time":{"start":1689476855031,"stop":1689476855572,"duration":541}},{"uid":"4bcdab3534f92b3","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/64//#testresult/4bcdab3534f92b3","status":"passed","time":{"start":1689389950721,"stop":1689389951288,"duration":567}}]},"tags":[]},"source":"105f62b26f164ec7.json","parameterValues":["<User.SUPERUSER: 'superuser'>"]}