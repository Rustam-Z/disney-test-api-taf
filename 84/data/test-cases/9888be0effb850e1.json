{"uid":"9888be0effb850e1","name":"test_getOrderMetros_withValidData_returns200AndData[User.SUPERUSER]","fullName":"tests.dashboards.test_order_history.TestGetOrderMetros#test_getOrderMetros_withValidData_returns200AndData","historyId":"323660825aa13f089fb4ced2678fc345","time":{"start":1691116081286,"stop":1691116081737,"duration":451},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'id'","statusTrace":"self = <test_order_history.TestGetOrderMetros object at 0x7efcad10c790>\nclient = <core.http_client.HTTPClient object at 0x7efcae3e4990>\nuser = <User.SUPERUSER: 'superuser'>\nassign_metro = <function assign_metro.<locals>._fixture at 0x7efcadf35a80>\n\n    @users(User.SUPERUSER)\n    def test_getOrderMetros_withValidData_returns200AndData(self, client, user, assign_metro):\n        # Arrange\n>       setup = assign_metro()\n\ntests/dashboards/test_order_history.py:78: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nfixtures/staging.py:37: in _fixture\n    cart_payload, cart_response, cart_model = create_fake_cart_superuser(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nkwargs = {'facility_id': 774}, facility_id = 774\ncategory_payload = {'name': 'Monica Morris'}\ncategory_response = <Response [201]>\ncategory_model = CreateInventoryCategorySuccessResponse(status=True, message='Successfully', data=_InventoryCategory(id=261, name='Moni...ated_by=_UserField(id=1, email='admin@disney.com'), updated_by=_UserField(id=1, email='admin@disney.com')), error=None)\n\n    def _fixture(**kwargs):\n        # Arrange\n    \n        # Create facility\n        if 'facility_id' not in kwargs:\n            facility_payload, facility_response, facility_model = create_fake_facility(no_of_customers=1)\n            kwargs['facility_id'] = facility_model.data.id\n        facility_id = kwargs['facility_id']\n    \n        # Create inventory category\n        category_payload = data.fake.model.inventory_category()\n        category_response, category_model = InventoryCategoryAPI(client).create_category(data=category_payload)\n        nonlocal category_id\n        category_id = category_model.data.id\n    \n        # Create inventory item type\n        inventory_item_type_payload = data.fake.model.inventory_item_type(category_id=category_id)\n        inventory_item_type_response, inventory_item_type_model = InventoryItemTypeAPI(client).create_item_type(\n            data=inventory_item_type_payload\n        )\n        nonlocal inventory_item_type_id\n        inventory_item_type_id = inventory_item_type_model.data.id\n    \n        # Create facility item type\n        payload = data.fake.model.facility_item_type(item_type_id=inventory_item_type_id, facility_id=facility_id)\n        response, model = FacilityItemTypeAPI(client).create_item_type(data=payload)\n        nonlocal facility_item_type_id\n        facility_item_type_id = model.data.id\n    \n        # Create metro item configuration\n        payload = data.fake.model.metro_item_configuration(\n            facility_id=facility_id,\n            facility_item_type_ids=[facility_item_type_id],\n        )\n        response, conf_model = MetroItemConfigurationAPI(client).create_config(data=payload)\n        nonlocal metro_item_config_id\n>       metro_item_config_id = conf_model.data.id\nE       AttributeError: 'NoneType' object has no attribute 'id'\n\nfixtures/cart_build.py:56: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":3,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1691115984544,"stop":1691115984557,"duration":13},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"client","time":{"start":1691115984557,"stop":1691115984558,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"create_fake_facility","time":{"start":1691116081285,"stop":1691116081285,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"create_fake_order_superuser","time":{"start":1691116081285,"stop":1691116081285,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"create_fake_cart_superuser","time":{"start":1691116081285,"stop":1691116081286,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"users","time":{"start":1691116081285,"stop":1691116081285,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"assign_metro","time":{"start":1691116081286,"stop":1691116081286,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"afterStages":[{"name":"create_fake_cart_superuser::0","time":{"start":1691116081745,"stop":1691116082053,"duration":308},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"assign_metro::0","time":{"start":1691116081745,"stop":1691116081745,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"create_fake_order_superuser::0","time":{"start":1691116082054,"stop":1691116082153,"duration":99},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"create_fake_facility::0","time":{"start":1691116082154,"stop":1691116082358,"duration":204},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"client::0","time":{"start":1691116219422,"stop":1691116219423,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"parentSuite","value":"tests.dashboards"},{"name":"suite","value":"test_order_history"},{"name":"subSuite","value":"TestGetOrderMetros"},{"name":"host","value":"fv-az735-234"},{"name":"thread","value":"2268-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.dashboards.test_order_history"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"user","value":"<User.SUPERUSER: 'superuser'>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"d5a5a31ece468de7","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'id'","time":{"start":1691116080226,"stop":1691116080690,"duration":464}},{"uid":"4167ce2aa372bc0f","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'id'","time":{"start":1691116079126,"stop":1691116079599,"duration":473}},{"uid":"37c8da5a2ae8049c","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'id'","time":{"start":1691116078063,"stop":1691116078518,"duration":455}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":3,"skipped":0,"passed":59,"unknown":0,"total":62},"items":[{"uid":"a242a158ce66fc2f","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/83//#testresult/a242a158ce66fc2f","status":"passed","time":{"start":1691029595764,"stop":1691029596556,"duration":792}},{"uid":"3553c99847cdf3f5","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/82//#testresult/3553c99847cdf3f5","status":"passed","time":{"start":1690943126187,"stop":1690943127612,"duration":1425}},{"uid":"7c31e5fe28dd82d2","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/81//#testresult/7c31e5fe28dd82d2","status":"passed","time":{"start":1690857354703,"stop":1690857356021,"duration":1318}},{"uid":"e0dcdb748bdcb859","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/80//#testresult/e0dcdb748bdcb859","status":"passed","time":{"start":1690770637784,"stop":1690770639269,"duration":1485}},{"uid":"aba16fab49909284","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/79//#testresult/aba16fab49909284","status":"passed","time":{"start":1690684026777,"stop":1690684028200,"duration":1423}},{"uid":"55b0ce927484bdff","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/78//#testresult/55b0ce927484bdff","status":"passed","time":{"start":1690597481940,"stop":1690597482941,"duration":1001}},{"uid":"7019b65773ec23b5","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/77//#testresult/7019b65773ec23b5","status":"passed","time":{"start":1690511264201,"stop":1690511265268,"duration":1067}},{"uid":"1a435afe201cda2b","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/76//#testresult/1a435afe201cda2b","status":"passed","time":{"start":1690424727688,"stop":1690424729012,"duration":1324}},{"uid":"d389e7ed684bf7be","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/75//#testresult/d389e7ed684bf7be","status":"passed","time":{"start":1690338919952,"stop":1690338921372,"duration":1420}},{"uid":"e84f83a33d732f0e","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/74//#testresult/e84f83a33d732f0e","status":"passed","time":{"start":1690253082941,"stop":1690253083754,"duration":813}},{"uid":"e7a8c5c24a118c28","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/73//#testresult/e7a8c5c24a118c28","status":"passed","time":{"start":1690165991534,"stop":1690165992234,"duration":700}},{"uid":"7dbf14ebee42a445","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/72//#testresult/7dbf14ebee42a445","status":"passed","time":{"start":1690079779701,"stop":1690079780708,"duration":1007}},{"uid":"2260271a39016cce","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/71//#testresult/2260271a39016cce","status":"passed","time":{"start":1689993014361,"stop":1689993015734,"duration":1373}},{"uid":"286551bc181b6daa","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/70//#testresult/286551bc181b6daa","status":"passed","time":{"start":1689907123547,"stop":1689907124358,"duration":811}},{"uid":"46e07fb8298ca9ee","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/69//#testresult/46e07fb8298ca9ee","status":"passed","time":{"start":1689820584991,"stop":1689820585770,"duration":779}},{"uid":"e486906c05ec03d2","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/68//#testresult/e486906c05ec03d2","status":"passed","time":{"start":1689738478609,"stop":1689738479652,"duration":1043}},{"uid":"b3d87b1a21be8b2f","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/67//#testresult/b3d87b1a21be8b2f","status":"passed","time":{"start":1689649417296,"stop":1689649418367,"duration":1071}},{"uid":"d32cabcb1ce89752","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/66//#testresult/d32cabcb1ce89752","status":"passed","time":{"start":1689563211595,"stop":1689563212540,"duration":945}},{"uid":"a58ed66b56ece6f4","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/65//#testresult/a58ed66b56ece6f4","status":"passed","time":{"start":1689477162062,"stop":1689477162760,"duration":698}},{"uid":"497bf8d195baf91c","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/64//#testresult/497bf8d195baf91c","status":"passed","time":{"start":1689390249505,"stop":1689390250294,"duration":789}}]},"tags":[]},"source":"9888be0effb850e1.json","parameterValues":["<User.SUPERUSER: 'superuser'>"]}