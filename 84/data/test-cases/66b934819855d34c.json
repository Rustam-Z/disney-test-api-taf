{"uid":"66b934819855d34c","name":"test_getCartBySuperuser_returns200AndData[User.SUPERUSER]","fullName":"tests.metro.test_cart_build.TestGetCart#test_getCartBySuperuser_returns200AndData","historyId":"03e22c157fcd0a3b05bc42bcd989b687","time":{"start":1691116137988,"stop":1691116138385,"duration":397},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'id'","statusTrace":"self = <test_cart_build.TestGetCart object at 0x7efcae3b3c10>\nclient = <core.http_client.HTTPClient object at 0x7efcae3e4990>\nuser = <User.SUPERUSER: 'superuser'>\nrequest = <FixtureRequest for <Function test_getCartBySuperuser_returns200AndData[User.SUPERUSER]>>\n\n    @users(User.SUPERUSER)\n    def test_getCartBySuperuser_returns200AndData(self, client, user, request):\n        # Arrange\n>       request.getfixturevalue('create_fake_cart_superuser')()\n\ntests/metro/test_cart_build.py:86: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nkwargs = {'facility_id': 841}\nfacility_payload = {'address_line1': '86165 Johnson Cliffs\\nHallborough, FM 70305', 'address_line2': '581 Kelley Loaf\\nDanielshire, NY 78880', 'city': 'Port Angela', 'country': 'South Georgia and the South Sandwich Islands', ...}\nfacility_response = <Response [201]>\nfacility_model = CreateFacilitySuccessResponse(status=True, message='Successfully', data=_Facility(id=841, name='Darren Watts', phone_n... zip_code='33658', customers=[729], threshold=2804.0, warning_threshold=2180.0, critical_threshold=3256.0), error=None)\nfacility_id = 841, category_payload = {'name': 'Walter Cox'}\ncategory_response = <Response [201]>\ncategory_model = CreateInventoryCategorySuccessResponse(status=True, message='Successfully', data=_InventoryCategory(id=307, name='Walt...ated_by=_UserField(id=1, email='admin@disney.com'), updated_by=_UserField(id=1, email='admin@disney.com')), error=None)\n\n    def _fixture(**kwargs):\n        # Arrange\n    \n        # Create facility\n        if 'facility_id' not in kwargs:\n            facility_payload, facility_response, facility_model = create_fake_facility(no_of_customers=1)\n            kwargs['facility_id'] = facility_model.data.id\n        facility_id = kwargs['facility_id']\n    \n        # Create inventory category\n        category_payload = data.fake.model.inventory_category()\n        category_response, category_model = InventoryCategoryAPI(client).create_category(data=category_payload)\n        nonlocal category_id\n        category_id = category_model.data.id\n    \n        # Create inventory item type\n        inventory_item_type_payload = data.fake.model.inventory_item_type(category_id=category_id)\n        inventory_item_type_response, inventory_item_type_model = InventoryItemTypeAPI(client).create_item_type(\n            data=inventory_item_type_payload\n        )\n        nonlocal inventory_item_type_id\n        inventory_item_type_id = inventory_item_type_model.data.id\n    \n        # Create facility item type\n        payload = data.fake.model.facility_item_type(item_type_id=inventory_item_type_id, facility_id=facility_id)\n        response, model = FacilityItemTypeAPI(client).create_item_type(data=payload)\n        nonlocal facility_item_type_id\n        facility_item_type_id = model.data.id\n    \n        # Create metro item configuration\n        payload = data.fake.model.metro_item_configuration(\n            facility_id=facility_id,\n            facility_item_type_ids=[facility_item_type_id],\n        )\n        response, conf_model = MetroItemConfigurationAPI(client).create_config(data=payload)\n        nonlocal metro_item_config_id\n>       metro_item_config_id = conf_model.data.id\nE       AttributeError: 'NoneType' object has no attribute 'id'\n\nfixtures/cart_build.py:56: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":3,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1691115984544,"stop":1691115984557,"duration":13},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"client","time":{"start":1691115984557,"stop":1691115984558,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"users","time":{"start":1691116137988,"stop":1691116137988,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"create_fake_cart_superuser","time":{"start":1691116137989,"stop":1691116137989,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"create_fake_facility","time":{"start":1691116137989,"stop":1691116137989,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"afterStages":[{"name":"create_fake_cart_superuser::0","time":{"start":1691116138391,"stop":1691116138705,"duration":314},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"create_fake_facility::0","time":{"start":1691116138706,"stop":1691116138913,"duration":207},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"client::0","time":{"start":1691116219422,"stop":1691116219423,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"parentSuite","value":"tests.metro"},{"name":"suite","value":"test_cart_build"},{"name":"subSuite","value":"TestGetCart"},{"name":"host","value":"fv-az735-234"},{"name":"thread","value":"2268-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.metro.test_cart_build"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"user","value":"<User.SUPERUSER: 'superuser'>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"66e2c4709983ed84","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'id'","time":{"start":1691116137099,"stop":1691116137473,"duration":374}},{"uid":"73bdff31ffe467c5","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'id'","time":{"start":1691116136244,"stop":1691116136621,"duration":377}},{"uid":"3639131eea9c5a","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'id'","time":{"start":1691116135351,"stop":1691116135734,"duration":383}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":69,"unknown":0,"total":70},"items":[{"uid":"9d656ff65a30de02","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/83//#testresult/9d656ff65a30de02","status":"passed","time":{"start":1691029626902,"stop":1691029627549,"duration":647}},{"uid":"ad1e27dba8f7dfb1","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/82//#testresult/ad1e27dba8f7dfb1","status":"passed","time":{"start":1690943180710,"stop":1690943181947,"duration":1237}},{"uid":"36495c3e83c28b73","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/81//#testresult/36495c3e83c28b73","status":"passed","time":{"start":1690857403042,"stop":1690857404092,"duration":1050}},{"uid":"4c2cd26e818c2415","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/80//#testresult/4c2cd26e818c2415","status":"passed","time":{"start":1690770692735,"stop":1690770693954,"duration":1219}},{"uid":"ad02914d2f78b6f2","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/79//#testresult/ad02914d2f78b6f2","status":"passed","time":{"start":1690684080935,"stop":1690684082095,"duration":1160}},{"uid":"860c49a1375476a5","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/78//#testresult/860c49a1375476a5","status":"passed","time":{"start":1690597519740,"stop":1690597520510,"duration":770}},{"uid":"531cec63b72a9f17","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/77//#testresult/531cec63b72a9f17","status":"passed","time":{"start":1690511305202,"stop":1690511306040,"duration":838}},{"uid":"147a83548a379ca2","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/76//#testresult/147a83548a379ca2","status":"passed","time":{"start":1690424776044,"stop":1690424777120,"duration":1076}},{"uid":"ab0f6180d2f07707","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/75//#testresult/ab0f6180d2f07707","status":"passed","time":{"start":1690338973392,"stop":1690338974571,"duration":1179}},{"uid":"787ea93b09591385","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/74//#testresult/787ea93b09591385","status":"passed","time":{"start":1690253113106,"stop":1690253113696,"duration":590}},{"uid":"556f5e5394d5a4b9","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/73//#testresult/556f5e5394d5a4b9","status":"passed","time":{"start":1690166020166,"stop":1690166020754,"duration":588}},{"uid":"ff16be716658a1aa","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/72//#testresult/ff16be716658a1aa","status":"passed","time":{"start":1690079818415,"stop":1690079819221,"duration":806}},{"uid":"4693302924e8da7c","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/71//#testresult/4693302924e8da7c","status":"passed","time":{"start":1689993066672,"stop":1689993067796,"duration":1124}},{"uid":"296cd69550442120","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/70//#testresult/296cd69550442120","status":"passed","time":{"start":1689907154752,"stop":1689907155439,"duration":687}},{"uid":"d42eff0a95f8eb07","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/69//#testresult/d42eff0a95f8eb07","status":"passed","time":{"start":1689820614306,"stop":1689820614930,"duration":624}},{"uid":"7f9e95bdbe7a5a70","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/68//#testresult/7f9e95bdbe7a5a70","status":"passed","time":{"start":1689738521346,"stop":1689738522237,"duration":891}},{"uid":"e285d723c3aa5def","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/67//#testresult/e285d723c3aa5def","status":"passed","time":{"start":1689649460099,"stop":1689649460994,"duration":895}},{"uid":"32e5ece3e55f887b","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/66//#testresult/32e5ece3e55f887b","status":"passed","time":{"start":1689563249988,"stop":1689563250793,"duration":805}},{"uid":"5f084604f9350070","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/65//#testresult/5f084604f9350070","status":"passed","time":{"start":1689477190866,"stop":1689477191478,"duration":612}},{"uid":"217228ba139d259b","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/64//#testresult/217228ba139d259b","status":"passed","time":{"start":1689390279692,"stop":1689390280329,"duration":637}}]},"tags":[]},"source":"66b934819855d34c.json","parameterValues":["<User.SUPERUSER: 'superuser'>"]}