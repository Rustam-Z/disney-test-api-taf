{"uid":"47e65e524035aad4","name":"test_driverMetroScan_withValidData_returns200AndData[User.SUPERUSER]","fullName":"tests.driver_process.test_driver_process.TestDriverMetroScan#test_driverMetroScan_withValidData_returns200AndData","historyId":"f2c125a842343766cb8046a26ac9997a","time":{"start":1707446542258,"stop":1707446543113,"duration":855},"status":"failed","statusMessage":"AssertionError: Status code is different than expected. Actual: 400, expected: 200. Response payload: {\"status\": false, \"message\": \"Error\", \"data\": null, \"error\": {\"detail\": \"Improper order!\"}}","statusTrace":"self = <test_driver_process.TestDriverMetroScan object at 0x7f1fa8d2bb10>\nclient = <core.http_client.HTTPClient object at 0x7f1fa8bb7610>\nuser = <User.SUPERUSER: 'superuser'>\nrequest = <FixtureRequest for <Function test_driverMetroScan_withValidData_returns200AndData[User.SUPERUSER]>>\n\n    @users(User.SUPERUSER)\n    def test_driverMetroScan_withValidData_returns200AndData(self, client, user, request):\n        # Arrange\n        setup = request.getfixturevalue('staging')\n        order_id = setup.get('order_id')\n        metro_qr_code = setup.get('metro_qr_code')\n        metro_id = setup.get('metro_id')\n    \n        payload = {\n            \"order_id\": order_id,\n            \"qr_code\": metro_qr_code\n        }\n    \n        # Act\n        response, model = DriverProcessAPI(client).driver_metro_scan(payload)\n    \n        # Assert\n>       APIResponse(response).assert_status(200)\n\ntests/driver_process/test_driver_process.py:166: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <core.asserters.APIResponse object at 0x7f1fa8a69350>, status_code = 200\n\n    def assert_status(self, status_code: int):\n>       assert self.response.status_code == status_code, \\\n            f'{AssertionMessage.WRONG_STATUS_CODE.value} ' \\\n            f'Actual: {self.response.status_code}, ' \\\n            f'expected: {status_code}. ' \\\n            f'Response payload: {self.body_str()}'\nE       AssertionError: Status code is different than expected. Actual: 400, expected: 200. Response payload: {\"status\": false, \"message\": \"Error\", \"data\": null, \"error\": {\"detail\": \"Improper order!\"}}\n\ncore/asserters.py:25: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1707445040033,"stop":1707445040049,"duration":16},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"client","time":{"start":1707445040050,"stop":1707445040050,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"users","time":{"start":1707446542257,"stop":1707446542257,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"create_fake_order_superuser","time":{"start":1707446542258,"stop":1707446542258,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"staging","time":{"start":1707446542258,"stop":1707446543052,"duration":794},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"assign_metro","time":{"start":1707446542258,"stop":1707446542258,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"create_fake_facility","time":{"start":1707446542258,"stop":1707446542258,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"create_fake_cart_superuser","time":{"start":1707446542258,"stop":1707446542258,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"assign_metro::0","time":{"start":1707446543120,"stop":1707446543120,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"create_fake_cart_superuser::0","time":{"start":1707446543121,"stop":1707446543335,"duration":214},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"create_fake_order_superuser::0","time":{"start":1707446543336,"stop":1707446543398,"duration":62},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"create_fake_facility::0","time":{"start":1707446543398,"stop":1707446543488,"duration":90},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"client::0","time":{"start":1707446612949,"stop":1707446612950,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.driver_process"},{"name":"suite","value":"test_driver_process"},{"name":"subSuite","value":"TestDriverMetroScan"},{"name":"host","value":"fv-az613-647"},{"name":"thread","value":"2312-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.driver_process.test_driver_process"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"user","value":"<User.SUPERUSER: 'superuser'>"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"47e65e524035aad4.json","parameterValues":["<User.SUPERUSER: 'superuser'>"]}