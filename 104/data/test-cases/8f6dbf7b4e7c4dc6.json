{"uid":"8f6dbf7b4e7c4dc6","name":"test_createCart_withMetroAndMetroConfigBelongingToDifferentFacility_returns400AndError[User.SUPERUSER]","fullName":"tests.metro.test_cart_build.TestCreateCart#test_createCart_withMetroAndMetroConfigBelongingToDifferentFacility_returns400AndError","historyId":"fe9a36d7b34109daf12f0ed61e6f1821","time":{"start":1692843557552,"stop":1692843558389,"duration":837},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'id'","statusTrace":"self = <test_cart_build.TestCreateCart object at 0x7f321a17b290>\nclient = <core.http_client.HTTPClient object at 0x7f3219c6fe90>\nuser = <User.SUPERUSER: 'superuser'>\nrequest = <FixtureRequest for <Function test_createCart_withMetroAndMetroConfigBelongingToDifferentFacility_returns400AndError[User.SUPERUSER]>>\n\n    @users(User.SUPERUSER)\n    def test_createCart_withMetroAndMetroConfigBelongingToDifferentFacility_returns400AndError(self, client, user, request):\n        # Arrange\n        metro_payload, metro_response, metro_model = request.getfixturevalue('create_fake_metro_superuser')()\n>       conf_payload, conf_response, conf_model = request.getfixturevalue('create_fake_metro_item_configuration_superuser')()\n\ntests/metro/test_cart_build.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nkwargs = {}\nfacility_payload = {'address_line1': '723 David Coves Suite 088\\nElizabethville, PR 08572', 'address_line2': 'Unit 7849 Box 3284\\nDPO AP 58002', 'city': 'Ashleyland', 'country': 'Peru', ...}\nfacility_response = <Response [201]>\nfacility_model = CreateFacilitySuccessResponse(status=True, message='Successfully', data=_Facility(id=4311, name='Kathryn Trujillo', ph...02', zip_code='29052', customers=[], threshold=7694.0, warning_threshold=468.0, critical_threshold=5161.0), error=None)\ncategory_payload = {'name': 'Michael Hart'}\ncategory_response = <Response [201]>\ncategory_model = CreateInventoryCategorySuccessResponse(status=True, message='Successfully', data=_InventoryCategory(id=2314, name='Mic...ated_by=_UserField(id=1, email='admin@disney.com'), updated_by=_UserField(id=1, email='admin@disney.com')), error=None)\ninventory_item_type_payload = {'category': 2314, 'description': 'Weight he southern employee general population act. Religious low argue their true moment American. Focus purpose modern important.', 'name': 'Ashley Avery'}\n\n    def _fixture(**kwargs):\n        # Setup\n        # Create facility\n        facility_payload = data.fake.model.facility()\n        facility_response, facility_model = FacilityAPI(client).create_facility(data=facility_payload)\n        nonlocal facility_id\n        facility_id = facility_model.data.id\n    \n        # Create inventory category\n        category_payload = data.fake.model.inventory_category()\n        category_response, category_model = InventoryCategoryAPI(client).create_category(data=category_payload)\n        nonlocal category_id\n        category_id = category_model.data.id\n    \n        # Create inventory item type\n        inventory_item_type_payload = data.fake.model.inventory_item_type(category_id=category_id)\n        inventory_item_type_response, inventory_item_type_model = InventoryItemTypeAPI(client).create_item_type(\n            data=inventory_item_type_payload\n        )\n        nonlocal inventory_item_type_id\n        inventory_item_type_id = inventory_item_type_model.data.id\n    \n        # Create facility item type\n        payload = data.fake.model.facility_item_type(item_type_id=inventory_item_type_id, facility_id=facility_id)\n        response, model = FacilityItemTypeAPI(client).create_item_type(data=payload)\n        nonlocal facility_item_type_id\n        facility_item_type_id = model.data.id\n    \n        # Create metro item configuration\n        payload = data.fake.model.metro_item_configuration(\n            facility_id=facility_id,\n            facility_item_type_ids=[facility_item_type_id],\n            **kwargs\n        )\n        response, model = MetroItemConfigurationAPI(client).create_config(data=payload)\n        nonlocal metro_item_config_id\n>       metro_item_config_id = model.data.id\nE       AttributeError: 'NoneType' object has no attribute 'id'\n\nfixtures/metro_item_configuration.py:55: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1692843392515,"stop":1692843392529,"duration":14},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0,"attachmentsCount":0},{"name":"client","time":{"start":1692843392529,"stop":1692843392529,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0,"attachmentsCount":0},{"name":"create_fake_metro_superuser","time":{"start":1692843557552,"stop":1692843557552,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0,"attachmentsCount":0},{"name":"create_fake_facility","time":{"start":1692843557552,"stop":1692843557552,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0,"attachmentsCount":0},{"name":"users","time":{"start":1692843557552,"stop":1692843557552,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0,"attachmentsCount":0},{"name":"create_fake_metro_item_configuration_superuser","time":{"start":1692843557891,"stop":1692843557891,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0,"attachmentsCount":0}],"afterStages":[{"name":"create_fake_metro_item_configuration_superuser::0","time":{"start":1692843558394,"stop":1692843558933,"duration":539},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0,"attachmentsCount":0},{"name":"create_fake_metro_superuser::0","time":{"start":1692843558933,"stop":1692843559053,"duration":120},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0,"attachmentsCount":0},{"name":"create_fake_facility::0","time":{"start":1692843559054,"stop":1692843559318,"duration":264},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0,"attachmentsCount":0},{"name":"client::0","time":{"start":1692843666241,"stop":1692843666241,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0,"attachmentsCount":0}],"labels":[{"name":"parentSuite","value":"tests.metro"},{"name":"suite","value":"test_cart_build"},{"name":"subSuite","value":"TestCreateCart"},{"name":"host","value":"fv-az792-819"},{"name":"thread","value":"2193-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.metro.test_cart_build"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"user","value":"<User.SUPERUSER: 'superuser'>"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"8f6dbf7b4e7c4dc6.json","parameterValues":["<User.SUPERUSER: 'superuser'>"]}