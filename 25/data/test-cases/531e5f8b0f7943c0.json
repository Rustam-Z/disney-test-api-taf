{"uid":"531e5f8b0f7943c0","name":"test_submitAction_withLongDisneyOrderID_returns400AndError[User.SUPERUSER]","fullName":"tests.staging.test_staging.TestSubmitAction#test_submitAction_withLongDisneyOrderID_returns400AndError","historyId":"06949b58073337402cf0c0d9bde5c945","time":{"start":1686020048760,"stop":1686020049696,"duration":936},"status":"broken","statusMessage":"pydantic.error_wrappers.ValidationError: 1 validation error for ErrorResponse\nmessage\n  message must be \"Error\" (type=value_error)","statusTrace":"self = <test_staging.TestSubmitAction object at 0x7f3976657390>\nclient = <core.http_client.HTTPClient object at 0x7f397839a6d0>\nuser = <User.SUPERUSER: 'superuser'>\nrequest = <FixtureRequest for <Function test_submitAction_withLongDisneyOrderID_returns400AndError[User.SUPERUSER]>>\n\n    @users(User.SUPERUSER)\n    def test_submitAction_withLongDisneyOrderID_returns400AndError(self, client, user, request):\n        # Arrange\n        setup = request.getfixturevalue('assign_metro')()\n        customer_id = setup.get('customer_id')\n        order_id = setup.get('order_id')\n        customer_response, customer_model = CustomerAPI(client).get_customer(customer_id)\n        customer_barcode = customer_model.data.barcode\n    \n        # Act\n        payload = {\n            \"order_id\": order_id,\n            \"disney_order_id\": data.fake.ean(),\n            \"customer_barcode\": customer_barcode\n        }\n>       response, model = StagingAPI(client).submit_action(payload)\n\ntests/staging/test_staging.py:300: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi/endpoints/staging/staging_api.py:105: in submit_action\n    response_payload = ErrorResponse(**response.json())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n>   ???\nE   pydantic.error_wrappers.ValidationError: 1 validation error for ErrorResponse\nE   message\nE     message must be \"Error\" (type=value_error)\n\npydantic/main.py:341: ValidationError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":3,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1686019973721,"stop":1686019973735,"duration":14},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"client","time":{"start":1686019973736,"stop":1686019973736,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"users","time":{"start":1686020048759,"stop":1686020048759,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"assign_metro","time":{"start":1686020048760,"stop":1686020048760,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"create_fake_order_superuser","time":{"start":1686020048760,"stop":1686020048760,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"create_fake_facility","time":{"start":1686020048760,"stop":1686020048760,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"create_fake_cart_superuser","time":{"start":1686020048760,"stop":1686020048760,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"afterStages":[{"name":"assign_metro::0","time":{"start":1686020049706,"stop":1686020049706,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"create_fake_cart_superuser::0","time":{"start":1686020049706,"stop":1686020049977,"duration":271},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"create_fake_order_superuser::0","time":{"start":1686020049977,"stop":1686020050093,"duration":116},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"create_fake_facility::0","time":{"start":1686020050094,"stop":1686020050258,"duration":164},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"client::0","time":{"start":1686020079985,"stop":1686020079986,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"parentSuite","value":"tests.staging"},{"name":"suite","value":"test_staging"},{"name":"subSuite","value":"TestSubmitAction"},{"name":"host","value":"fv-az248-795"},{"name":"thread","value":"2425-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.staging.test_staging"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"user","value":"<User.SUPERUSER: 'superuser'>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"706a58846e7abc69","status":"broken","statusDetails":"pydantic.error_wrappers.ValidationError: 1 validation error for ErrorResponse\nmessage\n  message must be \"Error\" (type=value_error)","time":{"start":1686020047289,"stop":1686020048264,"duration":975}},{"uid":"bea8d5549c2885cb","status":"broken","statusDetails":"pydantic.error_wrappers.ValidationError: 1 validation error for ErrorResponse\nmessage\n  message must be \"Error\" (type=value_error)","time":{"start":1686020045801,"stop":1686020046775,"duration":974}},{"uid":"4331d9c181c44303","status":"broken","statusDetails":"pydantic.error_wrappers.ValidationError: 1 validation error for ErrorResponse\nmessage\n  message must be \"Error\" (type=value_error)","time":{"start":1686020044368,"stop":1686020045314,"duration":946}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":3,"skipped":0,"passed":0,"unknown":0,"total":3},"items":[{"uid":"d46cb06c4177996b","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/97//#testresult/d46cb06c4177996b","status":"broken","statusDetails":"pydantic.error_wrappers.ValidationError: 1 validation error for ErrorResponse\nmessage\n  message must be \"Error\" (type=value_error)","time":{"start":1685974160399,"stop":1685974162069,"duration":1670}},{"uid":"be9c3751164090b4","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/96//#testresult/be9c3751164090b4","status":"broken","statusDetails":"pydantic.error_wrappers.ValidationError: 1 validation error for ErrorResponse\nmessage\n  message must be \"Error\" (type=value_error)","time":{"start":1685973822178,"stop":1685973823468,"duration":1290}}]},"tags":[]},"source":"531e5f8b0f7943c0.json","parameterValues":["<User.SUPERUSER: 'superuser'>"]}