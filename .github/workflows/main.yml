name: On Push Event Workflow - DEV environment

on:
  push:
    branches: [main]

env:
  TEST_EXECUTION_ENV: dev

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: 3.11

      - name: Install Poetry, install requirements, and activate venv.
        run: |
          echo "The job was triggered by: $GITHUB_ACTOR"
          python3 install_poetry.py
          poetry --version
          poetry install --no-root
          source `poetry env info --path`/bin/activate

      - name: Generate .config.yaml file.
        env:
          DEV_SUPERUSER_EMAIL: ${{ vars.DEV_SUPERUSER_EMAIL }}
          DEV_FACILITY_ADMIN_EMAIL: ${{ vars.DEV_FACILITY_ADMIN_EMAIL }}
          DEV_FACILITY_DRIVER_EMAIL: ${{ vars.DEV_FACILITY_DRIVER_EMAIL }}
          DEV_FACILITY_USER_EMAIL: ${{ vars.DEV_FACILITY_USER_EMAIL }}
          PASSWORD: ${{ vars.PASSWORD }}
        run: |
          poetry run python generate_config.py

      - name: Executing tests.
        run: |
          echo "Starting regression testing on "$TEST_EXECUTION_ENV" environment..."
          poetry run python -m pytest -s -v --reruns 3 --env=$TEST_EXECUTION_ENV --alluredir=allure-results tests/user/test_token.py
        continue-on-error: true

      - name: Get Allure history.
        uses: actions/checkout@v2
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      - name: Allure Report action from marketplace.
        uses: simple-elf/allure-report-action@master
        if: always()
        with:
          allure_results: allure-results
          allure_history: allure-history

      - name: Deploy report to Github Pages.
        if: always()
        uses: peaceiris/actions-gh-pages@v2
        env:
          PERSONAL_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PUBLISH_BRANCH: gh-pages
          PUBLISH_DIR: allure-history

      - name: Set current date as env variable.
        run: |
          echo "datetime=$(date +'%Y-%m-%dT%H:%M:%S')" >> $GITHUB_OUTPUT
          echo "event_name=$GITHUB_EVENT_NAME" >> $GITHUB_OUTPUT
          echo "workflow=$GITHUB_WORKFLOW" >> $GITHUB_OUTPUT
          echo "actor=$GITHUB_ACTOR" >> $GITHUB_OUTPUT
          echo "run_number=$GITHUB_RUN_NUMBER" >> $GITHUB_OUTPUT
        id: version

      - name: Send email notification.
        if: always()
        run: |
          poetry run python send_notification.py \
            --username=${{secrets.MAIL_USERNAME}} \
            --password=${{secrets.MAIL_PASSWORD}} \
            --env=$TEST_EXECUTION_ENV \
            --run_number=${{ steps.version.outputs.run_number }} \
            --event_name=${{ steps.version.outputs.event_name }} \
            --workflow=${{ steps.version.outputs.workflow }} \
            --actor=${{ steps.version.outputs.actor }} \
            --receivers=zokirovrustam202@gmail.com
