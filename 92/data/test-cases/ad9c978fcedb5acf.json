{"uid":"ad9c978fcedb5acf","name":"test_deleteMetroItemConfigBySuperuser_byValidID_returns204[User.SUPERUSER]","fullName":"tests.metro.test_metro_item_configuration.TestDeleteMetroItemTypeConfiguration#test_deleteMetroItemConfigBySuperuser_byValidID_returns204","historyId":"12ae7f849e0ffa95f100fe359bb37505","time":{"start":1691806652742,"stop":1691806653213,"duration":471},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'id'","statusTrace":"self = <test_metro_item_configuration.TestDeleteMetroItemTypeConfiguration object at 0x7f662b681890>\nclient = <core.http_client.HTTPClient object at 0x7f662b717e50>\nuser = <User.SUPERUSER: 'superuser'>\nrequest = <FixtureRequest for <Function test_deleteMetroItemConfigBySuperuser_byValidID_returns204[User.SUPERUSER]>>\n\n    @users(User.SUPERUSER)\n    def test_deleteMetroItemConfigBySuperuser_byValidID_returns204(self, client, user, request):\n        # Arrange\n>       payload, response, model = request.getfixturevalue('create_fake_metro_item_configuration_superuser')()\n\ntests/metro/test_metro_item_configuration.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nkwargs = {}\nfacility_payload = {'address_line1': '549 Graham Ridge Apt. 237\\nNorth Brianburgh, CT 42547', 'address_line2': '62319 Erika Island\\nPort Brianna, NJ 55551', 'city': 'New Lindsey', 'country': 'Macao', ...}\nfacility_response = <Response [201]>\nfacility_model = CreateFacilitySuccessResponse(status=True, message='Successfully', data=_Facility(id=2261, name='Katherine Ramsey', ph...1', zip_code='07055', customers=[], threshold=2106.0, warning_threshold=6531.0, critical_threshold=8671.0), error=None)\ncategory_payload = {'name': 'Brianna Dudley'}\ncategory_response = <Response [201]>\ncategory_model = CreateInventoryCategorySuccessResponse(status=True, message='Successfully', data=_InventoryCategory(id=1124, name='Bri...ated_by=_UserField(id=1, email='admin@disney.com'), updated_by=_UserField(id=1, email='admin@disney.com')), error=None)\ninventory_item_type_payload = {'category': 1124, 'description': 'Player continue stand then. Loss American information particularly write. Gas safe ...unt stock number drug.\\nThese from myself strategy record. Effect type information do others.', 'name': 'Julie Harper'}\n\n    def _fixture(**kwargs):\n        # Setup\n        # Create facility\n        facility_payload = data.fake.model.facility()\n        facility_response, facility_model = FacilityAPI(client).create_facility(data=facility_payload)\n        nonlocal facility_id\n        facility_id = facility_model.data.id\n    \n        # Create inventory category\n        category_payload = data.fake.model.inventory_category()\n        category_response, category_model = InventoryCategoryAPI(client).create_category(data=category_payload)\n        nonlocal category_id\n        category_id = category_model.data.id\n    \n        # Create inventory item type\n        inventory_item_type_payload = data.fake.model.inventory_item_type(category_id=category_id)\n        inventory_item_type_response, inventory_item_type_model = InventoryItemTypeAPI(client).create_item_type(\n            data=inventory_item_type_payload\n        )\n        nonlocal inventory_item_type_id\n        inventory_item_type_id = inventory_item_type_model.data.id\n    \n        # Create facility item type\n        payload = data.fake.model.facility_item_type(item_type_id=inventory_item_type_id, facility_id=facility_id)\n        response, model = FacilityItemTypeAPI(client).create_item_type(data=payload)\n        nonlocal facility_item_type_id\n        facility_item_type_id = model.data.id\n    \n        # Create metro item configuration\n        payload = data.fake.model.metro_item_configuration(\n            facility_id=facility_id,\n            facility_item_type_ids=[facility_item_type_id],\n            **kwargs\n        )\n        response, model = MetroItemConfigurationAPI(client).create_config(data=payload)\n        nonlocal metro_item_config_id\n>       metro_item_config_id = model.data.id\nE       AttributeError: 'NoneType' object has no attribute 'id'\n\nfixtures/metro_item_configuration.py:55: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":3,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1691806452113,"stop":1691806452134,"duration":21},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"client","time":{"start":1691806452134,"stop":1691806452134,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"users","time":{"start":1691806652742,"stop":1691806652742,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"create_fake_metro_item_configuration_superuser","time":{"start":1691806652743,"stop":1691806652743,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"afterStages":[{"name":"create_fake_metro_item_configuration_superuser::0","time":{"start":1691806653218,"stop":1691806653695,"duration":477},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"client::0","time":{"start":1691806735697,"stop":1691806735699,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"parentSuite","value":"tests.metro"},{"name":"suite","value":"test_metro_item_configuration"},{"name":"subSuite","value":"TestDeleteMetroItemTypeConfiguration"},{"name":"host","value":"fv-az1125-641"},{"name":"thread","value":"2261-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.metro.test_metro_item_configuration"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"user","value":"<User.SUPERUSER: 'superuser'>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"61f9f352727356bc","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'id'","time":{"start":1691806651779,"stop":1691806652244,"duration":465}},{"uid":"5437daf33e6ff206","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'id'","time":{"start":1691806650832,"stop":1691806651287,"duration":455}},{"uid":"346b23d21200da6c","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'id'","time":{"start":1691806649896,"stop":1691806650348,"duration":452}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":9,"skipped":0,"passed":69,"unknown":0,"total":78},"items":[{"uid":"225d395a2615c025","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/91//#testresult/225d395a2615c025","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'id'","time":{"start":1691720292070,"stop":1691720292397,"duration":327}},{"uid":"f742a9e4fcaa4c1f","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/90//#testresult/f742a9e4fcaa4c1f","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'id'","time":{"start":1691634873947,"stop":1691634874269,"duration":322}},{"uid":"71a569c928cc6dcb","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/89//#testresult/71a569c928cc6dcb","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'id'","time":{"start":1691548153713,"stop":1691548154008,"duration":295}},{"uid":"1b28f341eddac385","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/88//#testresult/1b28f341eddac385","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'id'","time":{"start":1691461729274,"stop":1691461729548,"duration":274}},{"uid":"226d66da5711be68","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/87//#testresult/226d66da5711be68","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'id'","time":{"start":1691375422194,"stop":1691375422509,"duration":315}},{"uid":"ecb231154804e0ce","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/86//#testresult/ecb231154804e0ce","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'id'","time":{"start":1691288620649,"stop":1691288621054,"duration":405}},{"uid":"cb5cbb3850d0743d","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/85//#testresult/cb5cbb3850d0743d","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'id'","time":{"start":1691202388144,"stop":1691202388434,"duration":290}},{"uid":"4aff38c16824f6ce","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/84//#testresult/4aff38c16824f6ce","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'id'","time":{"start":1691116145341,"stop":1691116145667,"duration":326}},{"uid":"f5c815d26937a35d","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/83//#testresult/f5c815d26937a35d","status":"passed","time":{"start":1691029630194,"stop":1691029630641,"duration":447}},{"uid":"368b6aecf9c738e9","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/82//#testresult/368b6aecf9c738e9","status":"passed","time":{"start":1690943187332,"stop":1690943188132,"duration":800}},{"uid":"311276fc60df89c8","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/81//#testresult/311276fc60df89c8","status":"passed","time":{"start":1690857407975,"stop":1690857408677,"duration":702}},{"uid":"35d31b822fdb0e32","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/80//#testresult/35d31b822fdb0e32","status":"passed","time":{"start":1690770698467,"stop":1690770699264,"duration":797}},{"uid":"f4a4a8aa65b2d2e6","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/79//#testresult/f4a4a8aa65b2d2e6","status":"passed","time":{"start":1690684086493,"stop":1690684087252,"duration":759}},{"uid":"15aa3f1f6b5c4d7","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/78//#testresult/15aa3f1f6b5c4d7","status":"passed","time":{"start":1690597523584,"stop":1690597524126,"duration":542}},{"uid":"3a42563e78489350","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/77//#testresult/3a42563e78489350","status":"passed","time":{"start":1690511309318,"stop":1690511309894,"duration":576}},{"uid":"99e56b8186f224e6","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/76//#testresult/99e56b8186f224e6","status":"passed","time":{"start":1690424781570,"stop":1690424782258,"duration":688}},{"uid":"c935e1267edd57eb","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/75//#testresult/c935e1267edd57eb","status":"passed","time":{"start":1690338979593,"stop":1690338980349,"duration":756}},{"uid":"ed8c3c980b27679d","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/74//#testresult/ed8c3c980b27679d","status":"passed","time":{"start":1690253116558,"stop":1690253116954,"duration":396}},{"uid":"3fc1dbfa6a9d5019","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/73//#testresult/3fc1dbfa6a9d5019","status":"passed","time":{"start":1690166023494,"stop":1690166023888,"duration":394}},{"uid":"e001d1efebb9105f","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/72//#testresult/e001d1efebb9105f","status":"passed","time":{"start":1690079822815,"stop":1690079823339,"duration":524}}]},"tags":[]},"source":"ad9c978fcedb5acf.json","parameterValues":["<User.SUPERUSER: 'superuser'>"]}