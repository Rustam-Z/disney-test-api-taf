{"uid":"4abf106fb5ef290c","name":"test_submitAction_withLongDisneyOrderID_returns400AndError[User.SUPERUSER]","fullName":"tests.staging.test_staging.TestSubmitAction#test_submitAction_withLongDisneyOrderID_returns400AndError","historyId":"06949b58073337402cf0c0d9bde5c945","time":{"start":1685168296464,"stop":1685168296955,"duration":491},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'id'","statusTrace":"self = <test_staging.TestSubmitAction object at 0x7f0662213910>\nclient = <core.http_client.HTTPClient object at 0x7f06622f8690>\nuser = <User.SUPERUSER: 'superuser'>\nrequest = <FixtureRequest for <Function test_submitAction_withLongDisneyOrderID_returns400AndError[User.SUPERUSER]>>\n\n    @users(User.SUPERUSER)\n    def test_submitAction_withLongDisneyOrderID_returns400AndError(self, client, user, request):\n        # Arrange\n>       setup = request.getfixturevalue('assign_metro')()\n\ntests/staging/test_staging.py:270: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nfixtures/staging.py:36: in _fixture\n    cart_payload, cart_response, cart_model = create_fake_cart_superuser(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nkwargs = {'facility_id': 4853}, facility_id = 4853\ncategory_payload = {'name': 'Courtney Rivera'}\ncategory_response = <Response [400]>\ncategory_model = ErrorResponse(status=False, message='Error', data=None, error={'name': ['inventory category with this name already exists.']})\n\n    def _fixture(**kwargs):\n        # Arrange\n    \n        # Create facility\n        if 'facility_id' not in kwargs:\n            facility_payload, facility_response, facility_model = create_fake_facility(no_of_customers=1)\n            kwargs['facility_id'] = facility_model.data.id\n        facility_id = kwargs['facility_id']\n    \n        # Create inventory category\n        category_payload = data.fake.model.inventory_category()\n        category_response, category_model = InventoryCategoryAPI(client).create_category(data=category_payload)\n        nonlocal category_id\n>       category_id = category_model.data.id\nE       AttributeError: 'NoneType' object has no attribute 'id'\n\nfixtures/cart_build.py:33: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":3,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1685168201914,"stop":1685168201928,"duration":14},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"client","time":{"start":1685168201928,"stop":1685168201928,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"create_fake_order_superuser","time":{"start":1685168296464,"stop":1685168296464,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"create_fake_facility","time":{"start":1685168296464,"stop":1685168296464,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"users","time":{"start":1685168296464,"stop":1685168296464,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"assign_metro","time":{"start":1685168296465,"stop":1685168296465,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"create_fake_cart_superuser","time":{"start":1685168296465,"stop":1685168296465,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"afterStages":[{"name":"assign_metro::0","time":{"start":1685168296964,"stop":1685168296964,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"create_fake_cart_superuser::0","time":{"start":1685168296965,"stop":1685168297527,"duration":562},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"create_fake_order_superuser::0","time":{"start":1685168297528,"stop":1685168297683,"duration":155},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"create_fake_facility::0","time":{"start":1685168297684,"stop":1685168298003,"duration":319},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"client::0","time":{"start":1685168324221,"stop":1685168324222,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"parentSuite","value":"tests.staging"},{"name":"suite","value":"test_staging"},{"name":"subSuite","value":"TestSubmitAction"},{"name":"host","value":"fv-az484-568"},{"name":"thread","value":"2359-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.staging.test_staging"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"user","value":"<User.SUPERUSER: 'superuser'>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"48542fc0b2d26eaf","status":"broken","statusDetails":"pydantic.error_wrappers.ValidationError: 1 validation error for ErrorResponse\nmessage\n  message must be \"Error\" (type=value_error)","time":{"start":1685168294199,"stop":1685168295726,"duration":1527}},{"uid":"4dd2c0f0b0cb6f12","status":"broken","statusDetails":"pydantic.error_wrappers.ValidationError: 1 validation error for ErrorResponse\nmessage\n  message must be \"Error\" (type=value_error)","time":{"start":1685168291919,"stop":1685168293493,"duration":1574}},{"uid":"ae239ea6e3fc1a4c","status":"broken","statusDetails":"pydantic.error_wrappers.ValidationError: 1 validation error for ErrorResponse\nmessage\n  message must be \"Error\" (type=value_error)","time":{"start":1685168289550,"stop":1685168291104,"duration":1554}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":35,"skipped":0,"passed":0,"unknown":0,"total":35},"items":[{"uid":"d90baebe33c53c8e","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/14//#testresult/d90baebe33c53c8e","status":"broken","statusDetails":"pydantic.error_wrappers.ValidationError: 1 validation error for ErrorResponse\nmessage\n  message must be \"Error\" (type=value_error)","time":{"start":1685081940840,"stop":1685081941746,"duration":906}},{"uid":"ddcdecdeb088cc76","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/13//#testresult/ddcdecdeb088cc76","status":"broken","statusDetails":"pydantic.error_wrappers.ValidationError: 1 validation error for ErrorResponse\nmessage\n  message must be \"Error\" (type=value_error)","time":{"start":1684995599219,"stop":1684995600851,"duration":1632}},{"uid":"86d91a272a2d8fb6","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/12//#testresult/86d91a272a2d8fb6","status":"broken","statusDetails":"pydantic.error_wrappers.ValidationError: 1 validation error for ErrorResponse\nmessage\n  message must be \"Error\" (type=value_error)","time":{"start":1684909119718,"stop":1684909120617,"duration":899}},{"uid":"abf896fb763d7234","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/11//#testresult/abf896fb763d7234","status":"broken","statusDetails":"pydantic.error_wrappers.ValidationError: 1 validation error for ErrorResponse\nmessage\n  message must be \"Error\" (type=value_error)","time":{"start":1684822801151,"stop":1684822803383,"duration":2232}},{"uid":"e76ee947aa0f1989","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/10//#testresult/e76ee947aa0f1989","status":"broken","statusDetails":"pydantic.error_wrappers.ValidationError: 1 validation error for ErrorResponse\nmessage\n  message must be \"Error\" (type=value_error)","time":{"start":1684736369168,"stop":1684736370179,"duration":1011}},{"uid":"e4b626294c6b2aa3","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/9//#testresult/e4b626294c6b2aa3","status":"broken","statusDetails":"pydantic.error_wrappers.ValidationError: 1 validation error for ErrorResponse\nmessage\n  message must be \"Error\" (type=value_error)","time":{"start":1684649903785,"stop":1684649905258,"duration":1473}},{"uid":"e1d48dc2e7248895","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/8//#testresult/e1d48dc2e7248895","status":"broken","statusDetails":"pydantic.error_wrappers.ValidationError: 1 validation error for ErrorResponse\nmessage\n  message must be \"Error\" (type=value_error)","time":{"start":1684563524886,"stop":1684563526573,"duration":1687}},{"uid":"de1c7fad5fbfb06b","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/7//#testresult/de1c7fad5fbfb06b","status":"broken","statusDetails":"pydantic.error_wrappers.ValidationError: 1 validation error for ErrorResponse\nmessage\n  message must be \"Error\" (type=value_error)","time":{"start":1684477140631,"stop":1684477141658,"duration":1027}},{"uid":"9f6f6fa6a51248ee","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/6//#testresult/9f6f6fa6a51248ee","status":"broken","statusDetails":"pydantic.error_wrappers.ValidationError: 1 validation error for ErrorResponse\nmessage\n  message must be \"Error\" (type=value_error)","time":{"start":1684390774214,"stop":1684390775109,"duration":895}},{"uid":"9a61aee57c22a9ea","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/5//#testresult/9a61aee57c22a9ea","status":"broken","statusDetails":"pydantic.error_wrappers.ValidationError: 1 validation error for ErrorResponse\nmessage\n  message must be \"Error\" (type=value_error)","time":{"start":1684304338854,"stop":1684304339840,"duration":986}},{"uid":"49af74debb3546d6","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/4//#testresult/49af74debb3546d6","status":"broken","statusDetails":"pydantic.error_wrappers.ValidationError: 1 validation error for ErrorResponse\nmessage\n  message must be \"Error\" (type=value_error)","time":{"start":1684217957096,"stop":1684217958303,"duration":1207}},{"uid":"1c3f337fe2b8de8f","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/3//#testresult/1c3f337fe2b8de8f","status":"broken","statusDetails":"pydantic.error_wrappers.ValidationError: 1 validation error for ErrorResponse\nmessage\n  message must be \"Error\" (type=value_error)","time":{"start":1684131650884,"stop":1684131652529,"duration":1645}},{"uid":"9bacd16a4d915a35","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/5//#testresult/9bacd16a4d915a35","status":"broken","statusDetails":"pydantic.error_wrappers.ValidationError: 1 validation error for ErrorResponse\nmessage\n  message must be \"Error\" (type=value_error)","time":{"start":1684121315980,"stop":1684121317632,"duration":1652}},{"uid":"e4a444325bc7cff","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/2//#testresult/e4a444325bc7cff","status":"broken","statusDetails":"pydantic.error_wrappers.ValidationError: 1 validation error for ErrorResponse\nmessage\n  message must be \"Error\" (type=value_error)","time":{"start":1684045070425,"stop":1684045071366,"duration":941}},{"uid":"8170499602d6f2e6","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/4//#testresult/8170499602d6f2e6","status":"broken","statusDetails":"pydantic.error_wrappers.ValidationError: 1 validation error for ErrorResponse\nmessage\n  message must be \"Error\" (type=value_error)","time":{"start":1683971599191,"stop":1683971600177,"duration":986}},{"uid":"1365978576f299c7","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/1//#testresult/1365978576f299c7","status":"broken","statusDetails":"pydantic.error_wrappers.ValidationError: 1 validation error for ErrorResponse\nmessage\n  message must be \"Error\" (type=value_error)","time":{"start":1683958673594,"stop":1683958674496,"duration":902}},{"uid":"faf3510347a20ddc","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/77//#testresult/faf3510347a20ddc","status":"broken","statusDetails":"pydantic.error_wrappers.ValidationError: 1 validation error for ErrorResponse\nmessage\n  message must be \"Error\" (type=value_error)","time":{"start":1683954802693,"stop":1683954804250,"duration":1557}},{"uid":"afd7cb83d59cc07c","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/76//#testresult/afd7cb83d59cc07c","status":"broken","statusDetails":"pydantic.error_wrappers.ValidationError: 1 validation error for ErrorResponse\nmessage\n  message must be \"Error\" (type=value_error)","time":{"start":1683954652870,"stop":1683954654161,"duration":1291}},{"uid":"c8cd965eb7de8c46","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/75//#testresult/c8cd965eb7de8c46","status":"broken","statusDetails":"pydantic.error_wrappers.ValidationError: 1 validation error for ErrorResponse\nmessage\n  message must be \"Error\" (type=value_error)","time":{"start":1683898426564,"stop":1683898427758,"duration":1194}},{"uid":"75d2f989a1349ff5","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/3//#testresult/75d2f989a1349ff5","status":"broken","statusDetails":"pydantic.error_wrappers.ValidationError: 1 validation error for ErrorResponse\nmessage\n  message must be \"Error\" (type=value_error)","time":{"start":1683897494585,"stop":1683897495813,"duration":1228}}]},"tags":[]},"source":"4abf106fb5ef290c.json","parameterValues":["<User.SUPERUSER: 'superuser'>"]}