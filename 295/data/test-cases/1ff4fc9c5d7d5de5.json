{"uid":"1ff4fc9c5d7d5de5","name":"test_updateFacility_byValidIDWithExistingName_returns400AndError[User.SUPERUSER]","fullName":"tests.facility.test_facility.TestUpdateFacility#test_updateFacility_byValidIDWithExistingName_returns400AndError","historyId":"f3c03cea6f5520bed566de4a81d4ae7f","time":{"start":1709348037401,"stop":1709348037451,"duration":50},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'id'","statusTrace":"self = <test_facility.TestUpdateFacility object at 0x7f6b7554c350>\nclient = <core.http_client.HTTPClient object at 0x7f6b75462f10>\nuser = <User.SUPERUSER: 'superuser'>\nrequest = <FixtureRequest for <Function test_updateFacility_byValidIDWithExistingName_returns400AndError[User.SUPERUSER]>>\n\n    @users(User.SUPERUSER)\n    def test_updateFacility_byValidIDWithExistingName_returns400AndError(self, client, user, request):\n        # Arrange\n>       facility1_payload, facility1_response, facility1_model = request.getfixturevalue('create_fake_facility')()\n\ntests/facility/test_facility.py:128: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nno_of_customers = 0, kwargs = {}\npayload = {'address_line1': '56133 Holmes Trafficway\\nStephenshire, AL 93923', 'address_line2': '1194 Ryan Ford Suite 678\\nRubenberg, ME 24654', 'city': 'North Crystalfurt', 'country': 'Hong Kong', ...}\nresponse = <Response [400]>\nmodel = ErrorResponse(status=False, message='Error', data=None, error={'name': ['facility with this name already exists.']})\n\n    def _fixture(no_of_customers: int = 0, **kwargs):\n        # Create customers\n        for _ in range(no_of_customers):\n            payload = data.fake.model.customer()  # Request body_str JSON\n            response, model = CustomerAPI(client).create_customer(data=payload)\n            customers.append(model.data.id)\n    \n        # Create facility\n        payload = data.fake.model.facility(customers=customers, **kwargs)  # Request body_str JSON\n        response, model = FacilityAPI(client).create_facility(data=payload)\n        nonlocal facility_id\n>       facility_id = model.data.id\nE       AttributeError: 'NoneType' object has no attribute 'id'\n\nfixtures/facility.py:24: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":3,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1709345745965,"stop":1709345745980,"duration":15},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"client","time":{"start":1709345745980,"stop":1709345745980,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"users","time":{"start":1709348037400,"stop":1709348037400,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"create_fake_facility","time":{"start":1709348037401,"stop":1709348037401,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"create_fake_facility::0","time":{"start":1709348037457,"stop":1709348037504,"duration":47},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"client::0","time":{"start":1709348099875,"stop":1709348099876,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.facility"},{"name":"suite","value":"test_facility"},{"name":"subSuite","value":"TestUpdateFacility"},{"name":"host","value":"fv-az1135-973"},{"name":"thread","value":"2188-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.facility.test_facility"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"user","value":"<User.SUPERUSER: 'superuser'>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"8114061e7c75c9c2","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'id'","time":{"start":1709348037186,"stop":1709348037297,"duration":111}},{"uid":"89b77531b88cd2d3","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'id'","time":{"start":1709348037077,"stop":1709348037126,"duration":49}},{"uid":"10d3a64765918d82","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'id'","time":{"start":1709348036972,"stop":1709348037023,"duration":51}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":3,"unknown":0,"total":4},"items":[{"uid":"c5a272a2a352790e","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/294//#testresult/c5a272a2a352790e","status":"passed","time":{"start":1709262065254,"stop":1709262065559,"duration":305}},{"uid":"7290a1aa5ed0d33e","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/293//#testresult/7290a1aa5ed0d33e","status":"passed","time":{"start":1709175058273,"stop":1709175058628,"duration":355}},{"uid":"70f1f7802310afc9","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/292//#testresult/70f1f7802310afc9","status":"passed","time":{"start":1709089239056,"stop":1709089239465,"duration":409}}]},"tags":[]},"source":"1ff4fc9c5d7d5de5.json","parameterValues":["<User.SUPERUSER: 'superuser'>"]}