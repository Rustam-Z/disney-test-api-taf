{"uid":"9bee3e199918c86f","name":"test_getAllCustomers_returns200AndData[User.SUPERUSER]","fullName":"tests.customer.test_customer.TestGetAllCustomers#test_getAllCustomers_returns200AndData","historyId":"913c7641ed2f67f0a44ba15365dd0813","time":{"start":1702780035077,"stop":1702780035165,"duration":88},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'id'","statusTrace":"self = <test_customer.TestGetAllCustomers object at 0x7f19aa378310>\nclient = <core.http_client.HTTPClient object at 0x7f19aa28fbd0>\nuser = <User.SUPERUSER: 'superuser'>\ncreate_fake_customer = <function create_fake_customer.<locals>._fixture at 0x7f19aa27c7c0>\n\n    @users(User.SUPERUSER)\n    def test_getAllCustomers_returns200AndData(self, client, user, create_fake_customer):\n        # Arrange\n>       create_fake_customer()\n\ntests/customer/test_customer.py:94: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nkwargs = {}\nrequest_payload = {'address_line1': '1136 Williams Cliff\\nSouth Francisco, ME 72927', 'address_line2': '60370 Watson Harbor\\nPort Dylan, OK 92766', 'barcode': '2633552175674', 'city': 'Lake Laura', ...}\nresponse = <Response [400]>\nmodel = ErrorResponse(status=False, message='Error', data=None, error={'name': ['customer with this name already exists.']})\n\n    def _fixture(**kwargs):\n        # Create customer\n        request_payload = data.fake.model.customer(**kwargs)\n        response, model = CustomerAPI(client).create_customer(data=request_payload)\n        nonlocal customer_id\n>       customer_id = model.data.id\nE       AttributeError: 'NoneType' object has no attribute 'id'\n\nfixtures/customer.py:27: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1702780031783,"stop":1702780031807,"duration":24},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"client","time":{"start":1702780031807,"stop":1702780031807,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"create_fake_customer","time":{"start":1702780035076,"stop":1702780035077,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"users","time":{"start":1702780035076,"stop":1702780035076,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"create_fake_customer::0","time":{"start":1702780035219,"stop":1702780035306,"duration":87},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"client::0","time":{"start":1702780977178,"stop":1702780977179,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.customer"},{"name":"suite","value":"test_customer"},{"name":"subSuite","value":"TestGetAllCustomers"},{"name":"host","value":"fv-az283-533"},{"name":"thread","value":"2377-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.customer.test_customer"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"user","value":"<User.SUPERUSER: 'superuser'>"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"9bee3e199918c86f.json","parameterValues":["<User.SUPERUSER: 'superuser'>"]}