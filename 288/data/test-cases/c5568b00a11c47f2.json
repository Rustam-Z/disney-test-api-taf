{"uid":"c5568b00a11c47f2","name":"test_deleteFacilityItemTypeBySuperuser_withValidID_returns204[User.SUPERUSER]","fullName":"tests.items.test_facility_item_type.TestDeleteFacilityItemType#test_deleteFacilityItemTypeBySuperuser_withValidID_returns204","historyId":"98a99bc73972f7834798c39423c08429","time":{"start":1708743465645,"stop":1708743465890,"duration":245},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'id'","statusTrace":"self = <test_facility_item_type.TestDeleteFacilityItemType object at 0x7f68ee9120d0>\nclient = <core.http_client.HTTPClient object at 0x7f68ee342e50>\nuser = <User.SUPERUSER: 'superuser'>\nrequest = <FixtureRequest for <Function test_deleteFacilityItemTypeBySuperuser_withValidID_returns204[User.SUPERUSER]>>\n\n    @users(User.SUPERUSER)\n    def test_deleteFacilityItemTypeBySuperuser_withValidID_returns204(self, client, user, request):\n        # Arrange\n>       payload, response, model = request.getfixturevalue('create_fake_facility_item_type_superuser')()\n\ntests/items/test_facility_item_type.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nfixtures/facility_item_type.py:17: in _fixture\n    facility_payload, facility_response, facility_model = create_fake_facility(no_of_customers=1)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nno_of_customers = 1, kwargs = {}, _ = 0\npayload = {'address_line1': 'PSC 0481, Box 9887\\nAPO AE 43011', 'address_line2': 'PSC 6472, Box 6967\\nAPO AP 45419', 'city': 'New Lindashire', 'country': 'Malta', ...}\nresponse = <Response [400]>\nmodel = ErrorResponse(status=False, message='Error', data=None, error={'name': ['facility with this name already exists.']})\n\n    def _fixture(no_of_customers: int = 0, **kwargs):\n        # Create customers\n        for _ in range(no_of_customers):\n            payload = data.fake.model.customer()  # Request body_str JSON\n            response, model = CustomerAPI(client).create_customer(data=payload)\n            customers.append(model.data.id)\n    \n        # Create facility\n        payload = data.fake.model.facility(customers=customers, **kwargs)  # Request body_str JSON\n        response, model = FacilityAPI(client).create_facility(data=payload)\n        nonlocal facility_id\n>       facility_id = model.data.id\nE       AttributeError: 'NoneType' object has no attribute 'id'\n\nfixtures/facility.py:24: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1708740912461,"stop":1708740912479,"duration":18},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"client","time":{"start":1708740912479,"stop":1708740912480,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"users","time":{"start":1708743465644,"stop":1708743465644,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"create_fake_inventory_category","time":{"start":1708743465645,"stop":1708743465646,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"create_fake_facility","time":{"start":1708743465645,"stop":1708743465645,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"create_fake_inventory_item_type","time":{"start":1708743465646,"stop":1708743465646,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"create_fake_facility_item_type_superuser","time":{"start":1708743465646,"stop":1708743465646,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false}],"afterStages":[{"name":"create_fake_facility_item_type_superuser::0","time":{"start":1708743465895,"stop":1708743466013,"duration":118},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"create_fake_inventory_item_type::0","time":{"start":1708743466013,"stop":1708743466127,"duration":114},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"create_fake_inventory_category::0","time":{"start":1708743466128,"stop":1708743466248,"duration":120},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"create_fake_facility::0","time":{"start":1708743466249,"stop":1708743466506,"duration":257},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"client::0","time":{"start":1708743562608,"stop":1708743562609,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false}],"labels":[{"name":"parentSuite","value":"tests.items"},{"name":"suite","value":"test_facility_item_type"},{"name":"subSuite","value":"TestDeleteFacilityItemType"},{"name":"host","value":"fv-az454-735"},{"name":"thread","value":"2192-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.items.test_facility_item_type"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"user","value":"<User.SUPERUSER: 'superuser'>"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"c5568b00a11c47f2.json","parameterValues":["<User.SUPERUSER: 'superuser'>"]}