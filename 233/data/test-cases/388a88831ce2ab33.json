{"uid":"388a88831ce2ab33","name":"test_createCart_withValidData_returns200AndData[User.SUPERUSER]","fullName":"tests.metro.test_cart_build.TestCreateCart#test_createCart_withValidData_returns200AndData","historyId":"43f550a97efb5f6ff6e21633afa61185","time":{"start":1703990498950,"stop":1703990499175,"duration":225},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'id'","statusTrace":"self = <test_cart_build.TestCreateCart object at 0x7f3389b34dd0>\nclient = <core.http_client.HTTPClient object at 0x7f3389b4dd50>\nuser = <User.SUPERUSER: 'superuser'>\nrequest = <FixtureRequest for <Function test_createCart_withValidData_returns200AndData[User.SUPERUSER]>>\n\n    @users(User.SUPERUSER)\n    def test_createCart_withValidData_returns200AndData(self, client, user, request):\n        # Act\n>       payload, response, model = request.getfixturevalue('create_fake_cart_superuser')()\n\ntests/metro/test_cart_build.py:14: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nkwargs = {'facility_id': 16491}\nfacility_payload = {'address_line1': '456 Debra Run Apt. 705\\nSouth Howardtown, ID 67335', 'address_line2': '2233 Shaw Lodge\\nCookview, NE 05448', 'city': 'Millerland', 'country': 'Myanmar', ...}\nfacility_response = <Response [201]>\nfacility_model = CreateFacilitySuccessResponse(status=True, message='Successfully', data=_Facility(id=16491, name='Matthew Cooper', pho...ip_code='49488', customers=[14867], threshold=9037.0, warning_threshold=5513.0, critical_threshold=9633.0), error=None)\nfacility_id = 16491, category_payload = {'name': 'Alexander Sanchez'}\ncategory_response = <Response [400]>\ncategory_model = ErrorResponse(status=False, message='Error', data=None, error={'name': ['inventory category with this name already exists.']})\n\n    def _fixture(**kwargs):\n        # Arrange\n    \n        # Create facility\n        if 'facility_id' not in kwargs:\n            facility_payload, facility_response, facility_model = create_fake_facility(no_of_customers=1)\n            kwargs['facility_id'] = facility_model.data.id\n        facility_id = kwargs['facility_id']\n    \n        # Create inventory category\n        category_payload = data.fake.model.inventory_category()\n        category_response, category_model = InventoryCategoryAPI(client).create_category(data=category_payload)\n        nonlocal category_id\n>       category_id = category_model.data.id\nE       AttributeError: 'NoneType' object has no attribute 'id'\n\nfixtures/cart_build.py:33: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":3,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1703989560696,"stop":1703989560711,"duration":15},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"client","time":{"start":1703989560711,"stop":1703989560711,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"users","time":{"start":1703990498949,"stop":1703990498949,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"create_fake_cart_superuser","time":{"start":1703990498950,"stop":1703990498950,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"create_fake_facility","time":{"start":1703990498950,"stop":1703990498950,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"create_fake_cart_superuser::0","time":{"start":1703990499181,"stop":1703990499463,"duration":282},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"create_fake_facility::0","time":{"start":1703990499463,"stop":1703990499666,"duration":203},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"client::0","time":{"start":1703990561952,"stop":1703990561953,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.metro"},{"name":"suite","value":"test_cart_build"},{"name":"subSuite","value":"TestCreateCart"},{"name":"host","value":"fv-az592-633"},{"name":"thread","value":"2187-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.metro.test_cart_build"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"user","value":"<User.SUPERUSER: 'superuser'>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"d66fdfe1ce40185f","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'id'","time":{"start":1703990498342,"stop":1703990498473,"duration":131}},{"uid":"e4b0a257aa633a0b","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'id'","time":{"start":1703990497574,"stop":1703990497812,"duration":238}},{"uid":"54a7d702cad62a61","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'id'","time":{"start":1703990496974,"stop":1703990497108,"duration":134}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"388a88831ce2ab33.json","parameterValues":["<User.SUPERUSER: 'superuser'>"]}