{"uid":"661e1fe15483547a","name":"test_submitAction_withValidData_returns200AndData[User.SUPERUSER]","fullName":"tests.staging.test_staging.TestSubmitAction#test_submitAction_withValidData_returns200AndData","historyId":"6041631ba85b0f5954ccfcb9d3e0eec3","time":{"start":1696991124194,"stop":1696991124928,"duration":734},"status":"failed","statusMessage":"AssertionError: Status code is different than expected. Actual: 400, expected: 200. Response payload: {\"status\": false, \"message\": \"Error\", \"data\": null, \"error\": {\"detail\": \"Disney ID violates a unique constraint\"}}","statusTrace":"self = <test_staging.TestSubmitAction object at 0x7f51fb4c6e50>\nclient = <core.http_client.HTTPClient object at 0x7f51fb58e510>\nuser = <User.SUPERUSER: 'superuser'>\nrequest = <FixtureRequest for <Function test_submitAction_withValidData_returns200AndData[User.SUPERUSER]>>\n\n    @users(User.SUPERUSER)\n    def test_submitAction_withValidData_returns200AndData(self, client, user, request):\n        # Arrange\n        setup = request.getfixturevalue('assign_metro')()\n        customer_id = setup.get('customer_id')\n        order_id = setup.get('order_id')\n        metro_id = setup.get('metro_id')\n        customer_response, customer_model = CustomerAPI(client).get_customer(customer_id)\n        customer_barcode = customer_model.data.barcode\n    \n        # Act\n        payload = {\n            \"order_id\": order_id,\n            \"disney_order_id\": data.fake.pyint(),\n            \"customer_barcode\": customer_barcode\n        }\n        response, model = StagingAPI(client).submit_action(payload)\n    \n        # Assert\n>       APIResponse(response).assert_status(200)\n\ntests/staging/test_staging.py:253: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <core.asserters.APIResponse object at 0x7f51fb2a4450>, status_code = 200\n\n    def assert_status(self, status_code: int):\n>       assert self.response.status_code == status_code, \\\n            f'{AssertionMessage.WRONG_STATUS_CODE.value} ' \\\n            f'Actual: {self.response.status_code}, ' \\\n            f'expected: {status_code}. ' \\\n            f'Response payload: {self.body_str()}'\nE       AssertionError: Status code is different than expected. Actual: 400, expected: 200. Response payload: {\"status\": false, \"message\": \"Error\", \"data\": null, \"error\": {\"detail\": \"Disney ID violates a unique constraint\"}}\n\ncore/asserters.py:25: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1696990725322,"stop":1696990725338,"duration":16},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"client","time":{"start":1696990725339,"stop":1696990725339,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"create_fake_cart_superuser","time":{"start":1696991124194,"stop":1696991124194,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"users","time":{"start":1696991124194,"stop":1696991124194,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"create_fake_order_superuser","time":{"start":1696991124194,"stop":1696991124194,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"create_fake_facility","time":{"start":1696991124194,"stop":1696991124194,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"assign_metro","time":{"start":1696991124194,"stop":1696991124195,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"afterStages":[{"name":"create_fake_cart_superuser::0","time":{"start":1696991124936,"stop":1696991125136,"duration":200},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"assign_metro::0","time":{"start":1696991124936,"stop":1696991124936,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"create_fake_order_superuser::0","time":{"start":1696991125137,"stop":1696991125187,"duration":50},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"create_fake_facility::0","time":{"start":1696991125188,"stop":1696991125318,"duration":130},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"client::0","time":{"start":1696991147520,"stop":1696991147521,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"parentSuite","value":"tests.staging"},{"name":"suite","value":"test_staging"},{"name":"subSuite","value":"TestSubmitAction"},{"name":"host","value":"fv-az1025-786"},{"name":"thread","value":"2233-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.staging.test_staging"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"user","value":"<User.SUPERUSER: 'superuser'>"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"661e1fe15483547a.json","parameterValues":["<User.SUPERUSER: 'superuser'>"]}