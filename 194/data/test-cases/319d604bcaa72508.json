{"uid":"319d604bcaa72508","name":"test_loginUser_withValidCredentials_returns200AndTokens[User.NONE-User.FACILITY_ADMIN]","fullName":"tests.user.test_token.TestLogin#test_loginUser_withValidCredentials_returns200AndTokens","historyId":"f5e7b0d481bb5b9132f3cd9bde090c73","time":{"start":1700620954381,"stop":1700620955001,"duration":620},"description":"\n        GIVEN valid email and valid password,\n        WHEN POST /user/token/ request is executed,\n        THEN response code should be 200,\n        AND response body should contain access and refresh tokens.\n        ","descriptionHtml":"<pre><code>    GIVEN valid email and valid password,\n    WHEN POST /user/token/ request is executed,\n    THEN response code should be 200,\n    AND response body should contain access and refresh tokens.\n</code></pre>\n","status":"failed","statusMessage":"AssertionError: Status code is different than expected. Actual: 401, expected: 200. Response payload: {\"status\":false,\"message\":\"Error\",\"data\":null,\"error\":{\"detail\":\"No active account found with the given credentials\"}}","statusTrace":"self = <test_token.TestLogin object at 0x7fc08c59fcd0>\nclient = <core.http_client.HTTPClient object at 0x7fc08c9c7ed0>\nuser = <User.NONE: None>, user_type = <User.FACILITY_ADMIN: 'facility_admin'>\n\n    @pytest.mark.parametrize('user_type', [User.FACILITY_ADMIN, User.SUPERUSER])\n    @users(User.NONE)\n    def test_loginUser_withValidCredentials_returns200AndTokens(self, client, user, user_type):\n        \"\"\"\n        GIVEN valid email and valid password,\n        WHEN POST /user/token/ request is executed,\n        THEN response code should be 200,\n        AND response body should contain access and refresh tokens.\n        \"\"\"\n        # Arrange\n        email, password = data.get_config_user(user_type)\n    \n        # Act\n        response, model = TokenAPI(client).login(email=email, password=password)\n    \n        # Assert\n>       APIResponse(response).assert_status(200)\n\ntests/user/test_token.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <core.asserters.APIResponse object at 0x7fc08bd765d0>, status_code = 200\n\n    def assert_status(self, status_code: int):\n>       assert self.response.status_code == status_code, \\\n            f'{AssertionMessage.WRONG_STATUS_CODE.value} ' \\\n            f'Actual: {self.response.status_code}, ' \\\n            f'expected: {status_code}. ' \\\n            f'Response payload: {self.body_str()}'\nE       AssertionError: Status code is different than expected. Actual: 401, expected: 200. Response payload: {\"status\":false,\"message\":\"Error\",\"data\":null,\"error\":{\"detail\":\"No active account found with the given credentials\"}}\n\ncore/asserters.py:25: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":3,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1700620097046,"stop":1700620097063,"duration":17},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"client","time":{"start":1700620097063,"stop":1700620097063,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"users","time":{"start":1700620954380,"stop":1700620954380,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"afterStages":[{"name":"client::0","time":{"start":1700620978536,"stop":1700620978537,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"parentSuite","value":"tests.user"},{"name":"suite","value":"test_token"},{"name":"subSuite","value":"TestLogin"},{"name":"host","value":"fv-az578-664"},{"name":"thread","value":"2402-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.user.test_token"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"user","value":"<User.NONE: None>"},{"name":"user_type","value":"<User.FACILITY_ADMIN: 'facility_admin'>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"76c9dffad38ff3e5","status":"failed","statusDetails":"AssertionError: Status code is different than expected. Actual: 401, expected: 200. Response payload: {\"status\":false,\"message\":\"Error\",\"data\":null,\"error\":{\"detail\":\"No active account found with the given credentials\"}}","time":{"start":1700620953812,"stop":1700620954372,"duration":560}},{"uid":"3623348b498186b3","status":"failed","statusDetails":"AssertionError: Status code is different than expected. Actual: 401, expected: 200. Response payload: {\"status\":false,\"message\":\"Error\",\"data\":null,\"error\":{\"detail\":\"No active account found with the given credentials\"}}","time":{"start":1700620953211,"stop":1700620953800,"duration":589}},{"uid":"a797dab228970da2","status":"failed","statusDetails":"AssertionError: Status code is different than expected. Actual: 401, expected: 200. Response payload: {\"status\":false,\"message\":\"Error\",\"data\":null,\"error\":{\"detail\":\"No active account found with the given credentials\"}}","time":{"start":1700620952634,"stop":1700620953201,"duration":567}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":1,"unknown":0,"total":2},"items":[{"uid":"b1d348a202085fb9","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/193//#testresult/b1d348a202085fb9","status":"passed","time":{"start":1700534452526,"stop":1700534453044,"duration":518}}]},"tags":[]},"source":"319d604bcaa72508.json","parameterValues":["<User.NONE: None>","<User.FACILITY_ADMIN: 'facility_admin'>"]}