{"uid":"c66e164feb91ccb","name":"test_getOrderHistory_withDeliveredOrder_returns200AndData[User.SUPERUSER]","fullName":"tests.dashboards.test_order_history.TestGetOrderHistory#test_getOrderHistory_withDeliveredOrder_returns200AndData","historyId":"166ad9c96de5b205d1e3901e5920b235","time":{"start":1700620809808,"stop":1700620809808,"duration":0},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'id'","statusTrace":"client = <core.http_client.HTTPClient object at 0x7fc08c9c7ed0>\nrequest = <SubRequest 'deliver_order' for <Function test_getOrderHistory_withDeliveredOrder_returns200AndData[User.SUPERUSER]>>\n\n    @pytest.fixture()\n    def deliver_order(client, request):\n>       setup = request.getfixturevalue('staging')\n\nfixtures/staging.py:87: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nfixtures/staging.py:68: in staging\n    setup = request.getfixturevalue('assign_metro')()\nfixtures/staging.py:20: in _fixture\n    facility_payload, facility_response, facility_model = create_fake_facility(no_of_customers=1)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nno_of_customers = 1, kwargs = {}, _ = 0\npayload = {'address_line1': '415 Mark Locks Apt. 272\\nPort Sandra, MI 27543', 'address_line2': '741 Nicholas Street\\nJulieburgh, IL 88872', 'barcode': '7802163420403', 'city': 'Erikafurt', ...}\nresponse = <Response [400]>\nmodel = ErrorResponse(status=False, message='Error', data=None, error={'name': ['customer with this name already exists.']})\n\n    def _fixture(no_of_customers: int = 0, **kwargs):\n        # Create customers\n        for _ in range(no_of_customers):\n            payload = data.fake.model.customer()  # Request body_str JSON\n            response, model = CustomerAPI(client).create_customer(data=payload)\n>           customers.append(model.data.id)\nE           AttributeError: 'NoneType' object has no attribute 'id'\n\nfixtures/facility.py:18: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1700620097046,"stop":1700620097063,"duration":17},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"client","time":{"start":1700620097063,"stop":1700620097063,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"deliver_order","time":{"start":1700620809809,"stop":1700620809927,"duration":118},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'id'\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/disney-test-api-taf-A9L5E0vM-py3.11/lib/python3.11/site-packages/pluggy/_callers.py\", line 39, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/disney-test-api-taf-A9L5E0vM-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1130, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/disney-test-api-taf-A9L5E0vM-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py\", line 909, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/disney-test-api-taf/disney-test-api-taf/fixtures/staging.py\", line 87, in deliver_order\n    setup = request.getfixturevalue('staging')\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/disney-test-api-taf-A9L5E0vM-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py\", line 570, in getfixturevalue\n    fixturedef = self._get_active_fixturedef(argname)\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/disney-test-api-taf-A9L5E0vM-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py\", line 592, in _get_active_fixturedef\n    self._compute_fixture_value(fixturedef)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/disney-test-api-taf-A9L5E0vM-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py\", line 678, in _compute_fixture_value\n    fixturedef.execute(request=subrequest)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/disney-test-api-taf-A9L5E0vM-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1076, in execute\n    result = ihook.pytest_fixture_setup(fixturedef=self, request=request)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/disney-test-api-taf-A9L5E0vM-py3.11/lib/python3.11/site-packages/pluggy/_hooks.py\", line 265, in __call__\n    return self._hookexec(self.name, self.get_hookimpls(), kwargs, firstresult)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/disney-test-api-taf-A9L5E0vM-py3.11/lib/python3.11/site-packages/pluggy/_manager.py\", line 80, in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/disney-test-api-taf-A9L5E0vM-py3.11/lib/python3.11/site-packages/pluggy/_callers.py\", line 60, in _multicall\n    return outcome.get_result()\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/disney-test-api-taf-A9L5E0vM-py3.11/lib/python3.11/site-packages/pluggy/_result.py\", line 60, in get_result\n    raise ex[1].with_traceback(ex[2])\n  File \"/home/runner/.cache/pypoetry/virtualenvs/disney-test-api-taf-A9L5E0vM-py3.11/lib/python3.11/site-packages/pluggy/_callers.py\", line 39, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/disney-test-api-taf-A9L5E0vM-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1130, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/disney-test-api-taf-A9L5E0vM-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py\", line 909, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/disney-test-api-taf/disney-test-api-taf/fixtures/staging.py\", line 68, in staging\n    setup = request.getfixturevalue('assign_metro')()\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/disney-test-api-taf/disney-test-api-taf/fixtures/staging.py\", line 20, in _fixture\n    facility_payload, facility_response, facility_model = create_fake_facility(no_of_customers=1)\n                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/disney-test-api-taf/disney-test-api-taf/fixtures/facility.py\", line 18, in _fixture\n    customers.append(model.data.id)\n                     ^^^^^^^^^^^^^\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true},{"name":"users","time":{"start":1700620809809,"stop":1700620809809,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"create_fake_order_superuser","time":{"start":1700620809809,"stop":1700620809809,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"create_fake_cart_superuser","time":{"start":1700620809809,"stop":1700620809810,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"create_fake_facility","time":{"start":1700620809809,"stop":1700620809809,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"assign_metro","time":{"start":1700620809810,"stop":1700620809810,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"afterStages":[{"name":"assign_metro::0","time":{"start":1700620809938,"stop":1700620809938,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"create_fake_cart_superuser::0","time":{"start":1700620809938,"stop":1700620810514,"duration":576},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"create_fake_order_superuser::0","time":{"start":1700620810515,"stop":1700620810631,"duration":116},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"create_fake_facility::0","time":{"start":1700620810632,"stop":1700620810746,"duration":114},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"client::0","time":{"start":1700620978536,"stop":1700620978537,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"parentSuite","value":"tests.dashboards"},{"name":"suite","value":"test_order_history"},{"name":"subSuite","value":"TestGetOrderHistory"},{"name":"host","value":"fv-az578-664"},{"name":"thread","value":"2402-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.dashboards.test_order_history"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"user","value":"<User.SUPERUSER: 'superuser'>"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"c66e164feb91ccb.json","parameterValues":["<User.SUPERUSER: 'superuser'>"]}