{"uid":"b6d9d110dd93fa97","name":"test_createCart_withValidData_returns200AndData[User.SUPERUSER]","fullName":"tests.metro.test_cart_build.TestCreateCart#test_createCart_withValidData_returns200AndData","historyId":"43f550a97efb5f6ff6e21633afa61185","time":{"start":1691634848336,"stop":1691634848735,"duration":399},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'id'","statusTrace":"self = <test_cart_build.TestCreateCart object at 0x7ff5b5a9e190>\nclient = <core.http_client.HTTPClient object at 0x7ff5b5ad6290>\nuser = <User.SUPERUSER: 'superuser'>\nrequest = <FixtureRequest for <Function test_createCart_withValidData_returns200AndData[User.SUPERUSER]>>\n\n    @users(User.SUPERUSER)\n    def test_createCart_withValidData_returns200AndData(self, client, user, request):\n        # Act\n>       payload, response, model = request.getfixturevalue('create_fake_cart_superuser')()\n\ntests/metro/test_cart_build.py:14: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nkwargs = {'facility_id': 1883}\nfacility_payload = {'address_line1': '604 Boyer Hills\\nChristopherbury, DC 50252', 'address_line2': 'PSC 2946, Box 6927\\nAPO AA 59447', 'city': 'Port Jesus', 'country': 'Guam', ...}\nfacility_response = <Response [201]>\nfacility_model = CreateFacilitySuccessResponse(status=True, message='Successfully', data=_Facility(id=1883, name='Sherri Gillespie', ph...zip_code='39581', customers=[1603], threshold=5858.0, warning_threshold=3653.0, critical_threshold=9432.0), error=None)\nfacility_id = 1883, category_payload = {'name': 'Ryan Jones'}\ncategory_response = <Response [201]>\ncategory_model = CreateInventoryCategorySuccessResponse(status=True, message='Successfully', data=_InventoryCategory(id=897, name='Ryan...ated_by=_UserField(id=1, email='admin@disney.com'), updated_by=_UserField(id=1, email='admin@disney.com')), error=None)\n\n    def _fixture(**kwargs):\n        # Arrange\n    \n        # Create facility\n        if 'facility_id' not in kwargs:\n            facility_payload, facility_response, facility_model = create_fake_facility(no_of_customers=1)\n            kwargs['facility_id'] = facility_model.data.id\n        facility_id = kwargs['facility_id']\n    \n        # Create inventory category\n        category_payload = data.fake.model.inventory_category()\n        category_response, category_model = InventoryCategoryAPI(client).create_category(data=category_payload)\n        nonlocal category_id\n        category_id = category_model.data.id\n    \n        # Create inventory item type\n        inventory_item_type_payload = data.fake.model.inventory_item_type(category_id=category_id)\n        inventory_item_type_response, inventory_item_type_model = InventoryItemTypeAPI(client).create_item_type(\n            data=inventory_item_type_payload\n        )\n        nonlocal inventory_item_type_id\n        inventory_item_type_id = inventory_item_type_model.data.id\n    \n        # Create facility item type\n        payload = data.fake.model.facility_item_type(item_type_id=inventory_item_type_id, facility_id=facility_id)\n        response, model = FacilityItemTypeAPI(client).create_item_type(data=payload)\n        nonlocal facility_item_type_id\n        facility_item_type_id = model.data.id\n    \n        # Create metro item configuration\n        payload = data.fake.model.metro_item_configuration(\n            facility_id=facility_id,\n            facility_item_type_ids=[facility_item_type_id],\n        )\n        response, conf_model = MetroItemConfigurationAPI(client).create_config(data=payload)\n        nonlocal metro_item_config_id\n>       metro_item_config_id = conf_model.data.id\nE       AttributeError: 'NoneType' object has no attribute 'id'\n\nfixtures/cart_build.py:56: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1691634709159,"stop":1691634709176,"duration":17},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"client","time":{"start":1691634709176,"stop":1691634709177,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"users","time":{"start":1691634848335,"stop":1691634848335,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"create_fake_facility","time":{"start":1691634848336,"stop":1691634848336,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"create_fake_cart_superuser","time":{"start":1691634848336,"stop":1691634848336,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"afterStages":[{"name":"create_fake_cart_superuser::0","time":{"start":1691634848743,"stop":1691634849064,"duration":321},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"create_fake_facility::0","time":{"start":1691634849065,"stop":1691634849263,"duration":198},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"client::0","time":{"start":1691634940095,"stop":1691634940096,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"parentSuite","value":"tests.metro"},{"name":"suite","value":"test_cart_build"},{"name":"subSuite","value":"TestCreateCart"},{"name":"host","value":"fv-az560-63"},{"name":"thread","value":"2254-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.metro.test_cart_build"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"user","value":"<User.SUPERUSER: 'superuser'>"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"b6d9d110dd93fa97.json","parameterValues":["<User.SUPERUSER: 'superuser'>"]}