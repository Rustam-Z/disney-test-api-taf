{"uid":"5a2b094908731b0b","name":"test_updateFacility_byValidIDWithExistingName_returns400AndError[User.SUPERUSER]","fullName":"tests.facility.test_facility.TestUpdateFacility#test_updateFacility_byValidIDWithExistingName_returns400AndError","historyId":"f3c03cea6f5520bed566de4a81d4ae7f","time":{"start":1705632991651,"stop":1705632991869,"duration":218},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'id'","statusTrace":"self = <test_facility.TestUpdateFacility object at 0x7faccb631850>\nclient = <core.http_client.HTTPClient object at 0x7faccb642090>\nuser = <User.SUPERUSER: 'superuser'>\nrequest = <FixtureRequest for <Function test_updateFacility_byValidIDWithExistingName_returns400AndError[User.SUPERUSER]>>\n\n    @users(User.SUPERUSER)\n    def test_updateFacility_byValidIDWithExistingName_returns400AndError(self, client, user, request):\n        # Arrange\n        facility1_payload, facility1_response, facility1_model = request.getfixturevalue('create_fake_facility')()\n>       facility2_payload, facility2_response, facility2_model = request.getfixturevalue('create_fake_facility')()\n\ntests/facility/test_facility.py:129: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nno_of_customers = 0, kwargs = {}\npayload = {'address_line1': '031 Michael Lakes Apt. 944\\nFergusonland, CA 99827', 'address_line2': '92239 Donaldson Lodge\\nNew Melindastad, VT 11391', 'city': 'Woodton', 'country': 'Fiji', ...}\nresponse = <Response [400]>\nmodel = ErrorResponse(status=False, message='Error', data=None, error={'name': ['facility with this name already exists.']})\n\n    def _fixture(no_of_customers: int = 0, **kwargs):\n        # Create customers\n        for _ in range(no_of_customers):\n            payload = data.fake.model.customer()  # Request body_str JSON\n            response, model = CustomerAPI(client).create_customer(data=payload)\n            customers.append(model.data.id)\n    \n        # Create facility\n        payload = data.fake.model.facility(customers=customers, **kwargs)  # Request body_str JSON\n        response, model = FacilityAPI(client).create_facility(data=payload)\n        nonlocal facility_id\n>       facility_id = model.data.id\nE       AttributeError: 'NoneType' object has no attribute 'id'\n\nfixtures/facility.py:24: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1705631314310,"stop":1705631314323,"duration":13},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"client","time":{"start":1705631314324,"stop":1705631314324,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"create_fake_facility","time":{"start":1705632991651,"stop":1705632991651,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"users","time":{"start":1705632991651,"stop":1705632991651,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"create_fake_facility::0","time":{"start":1705632991876,"stop":1705632992026,"duration":150},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"client::0","time":{"start":1705633092664,"stop":1705633092665,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.facility"},{"name":"suite","value":"test_facility"},{"name":"subSuite","value":"TestUpdateFacility"},{"name":"host","value":"fv-az674-662"},{"name":"thread","value":"2152-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.facility.test_facility"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"user","value":"<User.SUPERUSER: 'superuser'>"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"5a2b094908731b0b.json","parameterValues":["<User.SUPERUSER: 'superuser'>"]}