{"uid":"52c1aa067f66b006","name":"test_getCustomer_withValidID_returns200AndData[User.SUPERUSER]","fullName":"tests.customer.test_customer.TestGetCustomer#test_getCustomer_withValidID_returns200AndData","historyId":"02ad2684e0bc116610edb1047a7d6b4c","time":{"start":1684390712561,"stop":1684390712647,"duration":86},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'id'","statusTrace":"self = <test_customer.TestGetCustomer object at 0x7f6f8d89bc10>\nclient = <core.http_client.HTTPClient object at 0x7f6f8db27c50>\nuser = <User.SUPERUSER: 'superuser'>\nrequest = <FixtureRequest for <Function test_getCustomer_withValidID_returns200AndData[User.SUPERUSER]>>\n\n    @users(User.SUPERUSER)\n    def test_getCustomer_withValidID_returns200AndData(self, client, user, request):\n        # Arrange\n>       payload, response, model = request.getfixturevalue('create_fake_customer')()\n\ntests/customer/test_customer.py:84: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nkwargs = {}\npayload = {'address_line1': '2797 David Islands Apt. 976\\nWadeton, MH 60065', 'address_line2': '9027 Derek Canyon\\nMathisport, GA 43637', 'barcode': '9829976741226', 'city': 'Millertown', ...}\nresponse = <Response [400]>\nmodel = ErrorResponse(status=False, message='Error', data=None, error={'name': ['customer with this name already exists.']})\n\n    def _fixture(**kwargs):\n        # Create customer\n        payload = data.fake.model.customer(**kwargs)\n        response, model = CustomerAPI(client).create_customer(data=payload)\n        nonlocal customer_id\n>       customer_id = model.data.id\nE       AttributeError: 'NoneType' object has no attribute 'id'\n\nfixtures/customer.py:23: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1684390710957,"stop":1684390710971,"duration":14},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"client","time":{"start":1684390710971,"stop":1684390710971,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"users","time":{"start":1684390712561,"stop":1684390712561,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"create_fake_customer","time":{"start":1684390712562,"stop":1684390712562,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"afterStages":[{"name":"create_fake_customer::0","time":{"start":1684390712690,"stop":1684390712758,"duration":68},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"client::0","time":{"start":1684390796352,"stop":1684390796353,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"parentSuite","value":"tests.customer"},{"name":"suite","value":"test_customer"},{"name":"subSuite","value":"TestGetCustomer"},{"name":"host","value":"fv-az173-550"},{"name":"thread","value":"2394-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.customer.test_customer"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"user","value":"<User.SUPERUSER: 'superuser'>"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"52c1aa067f66b006.json","parameterValues":["<User.SUPERUSER: 'superuser'>"]}