{"uid":"4a49ac7414939ec9","name":"test_createTruck_withValidData_returns201AndData[User.SUPERUSER]","fullName":"tests.facility.test_truck.TestCreateTruck#test_createTruck_withValidData_returns201AndData","historyId":"f4473e1fba61b7e6af436fffd26cd359","time":{"start":1707619589384,"stop":1707619589631,"duration":247},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'id'","statusTrace":"self = <test_truck.TestCreateTruck object at 0x7f55d3245610>\nclient = <core.http_client.HTTPClient object at 0x7f55d1fdc3d0>\nuser = <User.SUPERUSER: 'superuser'>\nrequest = <FixtureRequest for <Function test_createTruck_withValidData_returns201AndData[User.SUPERUSER]>>\n\n    @users(User.SUPERUSER)\n    def test_createTruck_withValidData_returns201AndData(self, client, user, request):\n        # Act\n>       payload, response, model = request.getfixturevalue('create_fake_truck_superuser')()\n\ntests/facility/test_truck.py:15: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nfixtures/truck.py:14: in _fixture\n    facility_payload, facility_response, facility_model = create_fake_facility(no_of_customers=1)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nno_of_customers = 1, kwargs = {}, _ = 0\npayload = {'address_line1': '7840 Spencer Causeway\\nGregorychester, WV 31534', 'address_line2': '32424 Valdez Squares\\nSouth Jesseberg, CA 10833', 'city': 'Fostermouth', 'country': 'British Virgin Islands', ...}\nresponse = <Response [400]>\nmodel = ErrorResponse(status=False, message='Error', data=None, error={'name': ['facility with this name already exists.']})\n\n    def _fixture(no_of_customers: int = 0, **kwargs):\n        # Create customers\n        for _ in range(no_of_customers):\n            payload = data.fake.model.customer()  # Request body_str JSON\n            response, model = CustomerAPI(client).create_customer(data=payload)\n            customers.append(model.data.id)\n    \n        # Create facility\n        payload = data.fake.model.facility(customers=customers, **kwargs)  # Request body_str JSON\n        response, model = FacilityAPI(client).create_facility(data=payload)\n        nonlocal facility_id\n>       facility_id = model.data.id\nE       AttributeError: 'NoneType' object has no attribute 'id'\n\nfixtures/facility.py:24: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":3,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1707618038755,"stop":1707618038775,"duration":20},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"client","time":{"start":1707618038776,"stop":1707618038776,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"users","time":{"start":1707619589383,"stop":1707619589384,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"create_fake_facility","time":{"start":1707619589384,"stop":1707619589384,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"create_fake_truck_superuser","time":{"start":1707619589384,"stop":1707619589384,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"create_fake_truck_superuser::0","time":{"start":1707619589636,"stop":1707619589750,"duration":114},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"create_fake_facility::0","time":{"start":1707619589750,"stop":1707619590012,"duration":262},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"client::0","time":{"start":1707619692047,"stop":1707619692049,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.facility"},{"name":"suite","value":"test_truck"},{"name":"subSuite","value":"TestCreateTruck"},{"name":"host","value":"fv-az574-221"},{"name":"thread","value":"2270-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.facility.test_truck"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"user","value":"<User.SUPERUSER: 'superuser'>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"e96ebc0a131d1597","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'id'","time":{"start":1707619588771,"stop":1707619589014,"duration":243}},{"uid":"7ebeb7f6506a7b16","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'id'","time":{"start":1707619588425,"stop":1707619588541,"duration":116}},{"uid":"ac19877e2534b4d1","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'id'","time":{"start":1707619588068,"stop":1707619588184,"duration":116}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":2,"unknown":0,"total":3},"items":[{"uid":"f539a94bd1c6b5b6","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/274//#testresult/f539a94bd1c6b5b6","status":"passed","time":{"start":1707533081949,"stop":1707533082153,"duration":204}},{"uid":"6b65b11437cdcdd5","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/273//#testresult/6b65b11437cdcdd5","status":"passed","time":{"start":1707446549899,"stop":1707446550095,"duration":196}}]},"tags":[]},"source":"4a49ac7414939ec9.json","parameterValues":["<User.SUPERUSER: 'superuser'>"]}