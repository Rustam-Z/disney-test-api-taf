{"uid":"dcea2c50a9cce195","name":"test_createMetroItemConfigBySuperuser_withValidData_returns201AndData[User.SUPERUSER]","fullName":"tests.metro.test_metro_item_configuration.TestCreateDeleteMetroItemTypeConfiguration#test_createMetroItemConfigBySuperuser_withValidData_returns201AndData","historyId":"002a179b9fbc82fbe072a282283382a1","time":{"start":1691893118579,"stop":1691893118923,"duration":344},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'id'","statusTrace":"self = <test_metro_item_configuration.TestCreateDeleteMetroItemTypeConfiguration object at 0x7f15ab93f690>\nclient = <core.http_client.HTTPClient object at 0x7f15a9eb2750>\nuser = <User.SUPERUSER: 'superuser'>\nrequest = <FixtureRequest for <Function test_createMetroItemConfigBySuperuser_withValidData_returns201AndData[User.SUPERUSER]>>\n\n    @users(User.SUPERUSER)\n    def test_createMetroItemConfigBySuperuser_withValidData_returns201AndData(self, client, user, request):\n        # Act\n>       payload, response, model = request.getfixturevalue('create_fake_metro_item_configuration_superuser')()\n\ntests/metro/test_metro_item_configuration.py:13: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nkwargs = {}\nfacility_payload = {'address_line1': 'Unit 7435 Box 9531\\nDPO AP 07604', 'address_line2': '411 Monroe Creek Suite 137\\nJulieshire, WV 72376', 'city': 'East Shanemouth', 'country': 'South Africa', ...}\nfacility_response = <Response [201]>\nfacility_model = CreateFacilitySuccessResponse(status=True, message='Successfully', data=_Facility(id=2430, name='Brian Conner', phone_...6', zip_code='43620', customers=[], threshold=5242.0, warning_threshold=4865.0, critical_threshold=4923.0), error=None)\ncategory_payload = {'name': 'Danielle Davis'}\ncategory_response = <Response [201]>\ncategory_model = CreateInventoryCategorySuccessResponse(status=True, message='Successfully', data=_InventoryCategory(id=1220, name='Dan...ated_by=_UserField(id=1, email='admin@disney.com'), updated_by=_UserField(id=1, email='admin@disney.com')), error=None)\ninventory_item_type_payload = {'category': 1220, 'description': 'Today red wear. Help thus admit. City second election.\\nWhether crime owner agent address popular. Notice election yourself let no money do. Writer occur information against.', 'name': 'Julia Shah'}\n\n    def _fixture(**kwargs):\n        # Setup\n        # Create facility\n        facility_payload = data.fake.model.facility()\n        facility_response, facility_model = FacilityAPI(client).create_facility(data=facility_payload)\n        nonlocal facility_id\n        facility_id = facility_model.data.id\n    \n        # Create inventory category\n        category_payload = data.fake.model.inventory_category()\n        category_response, category_model = InventoryCategoryAPI(client).create_category(data=category_payload)\n        nonlocal category_id\n        category_id = category_model.data.id\n    \n        # Create inventory item type\n        inventory_item_type_payload = data.fake.model.inventory_item_type(category_id=category_id)\n        inventory_item_type_response, inventory_item_type_model = InventoryItemTypeAPI(client).create_item_type(\n            data=inventory_item_type_payload\n        )\n        nonlocal inventory_item_type_id\n        inventory_item_type_id = inventory_item_type_model.data.id\n    \n        # Create facility item type\n        payload = data.fake.model.facility_item_type(item_type_id=inventory_item_type_id, facility_id=facility_id)\n        response, model = FacilityItemTypeAPI(client).create_item_type(data=payload)\n        nonlocal facility_item_type_id\n        facility_item_type_id = model.data.id\n    \n        # Create metro item configuration\n        payload = data.fake.model.metro_item_configuration(\n            facility_id=facility_id,\n            facility_item_type_ids=[facility_item_type_id],\n            **kwargs\n        )\n        response, model = MetroItemConfigurationAPI(client).create_config(data=payload)\n        nonlocal metro_item_config_id\n>       metro_item_config_id = model.data.id\nE       AttributeError: 'NoneType' object has no attribute 'id'\n\nfixtures/metro_item_configuration.py:55: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1691892957066,"stop":1691892957079,"duration":13},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"client","time":{"start":1691892957080,"stop":1691892957080,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"create_fake_metro_item_configuration_superuser","time":{"start":1691893118579,"stop":1691893118579,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"users","time":{"start":1691893118579,"stop":1691893118579,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"afterStages":[{"name":"create_fake_metro_item_configuration_superuser::0","time":{"start":1691893118927,"stop":1691893119282,"duration":355},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"client::0","time":{"start":1691893187870,"stop":1691893187871,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"parentSuite","value":"tests.metro"},{"name":"suite","value":"test_metro_item_configuration"},{"name":"subSuite","value":"TestCreateDeleteMetroItemTypeConfiguration"},{"name":"host","value":"fv-az309-191"},{"name":"thread","value":"2259-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.metro.test_metro_item_configuration"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"user","value":"<User.SUPERUSER: 'superuser'>"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"dcea2c50a9cce195.json","parameterValues":["<User.SUPERUSER: 'superuser'>"]}