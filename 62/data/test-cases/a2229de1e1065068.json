{"uid":"a2229de1e1065068","name":"test_getCustomer_withValidID_returns200AndData[User.SUPERUSER]","fullName":"tests.customer.test_customer.TestGetCustomer#test_getCustomer_withValidID_returns200AndData","historyId":"02ad2684e0bc116610edb1047a7d6b4c","time":{"start":1683891023796,"stop":1683891023918,"duration":122},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'id'","statusTrace":"self = <test_customer.TestGetCustomer object at 0x7f993f286690>\nclient = <core.http_client.HTTPClient object at 0x7f993f19fed0>\nuser = <User.SUPERUSER: 'superuser'>\nrequest = <FixtureRequest for <Function test_getCustomer_withValidID_returns200AndData[User.SUPERUSER]>>\n\n    @users(User.SUPERUSER)\n    def test_getCustomer_withValidID_returns200AndData(self, client, user, request):\n        # Arrange\n>       payload, response, model = request.getfixturevalue('create_fake_customer')()\n\ntests/customer/test_customer.py:84: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nkwargs = {}\npayload = {'address_line1': '929 Dawn Crossroad\\nLake Jennifer, ND 69605', 'address_line2': '43257 West Point Suite 603\\nPort Oscarchester, MT 64821', 'barcode': '2341198963875', 'city': 'North Andreatown', ...}\nresponse = <Response [400]>\nmodel = ErrorResponse(status=False, message='Error', data=None, error={'name': ['customer with this name already exists.']})\n\n    def _fixture(**kwargs):\n        # Create customer\n        payload = data.fake.model.customer(**kwargs)\n        response, model = CustomerAPI(client).create_customer(data=payload)\n        nonlocal customer_id\n>       customer_id = model.data.id\nE       AttributeError: 'NoneType' object has no attribute 'id'\n\nfixtures/customer.py:23: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1683891021756,"stop":1683891021773,"duration":17},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"client","time":{"start":1683891021773,"stop":1683891021773,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"users","time":{"start":1683891023796,"stop":1683891023796,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"create_fake_customer","time":{"start":1683891023796,"stop":1683891023796,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"afterStages":[{"name":"create_fake_customer::0","time":{"start":1683891023967,"stop":1683891024067,"duration":100},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"client::0","time":{"start":1683891126931,"stop":1683891126932,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"parentSuite","value":"tests.customer"},{"name":"suite","value":"test_customer"},{"name":"subSuite","value":"TestGetCustomer"},{"name":"host","value":"fv-az298-252"},{"name":"thread","value":"2379-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.customer.test_customer"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"user","value":"<User.SUPERUSER: 'superuser'>"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"a2229de1e1065068.json","parameterValues":["<User.SUPERUSER: 'superuser'>"]}