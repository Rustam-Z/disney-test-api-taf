{"uid":"9636ce05a35fbe56","name":"test_createFacility_withValidData_returns201AndData[User.SUPERUSER]","fullName":"tests.facility.test_facility.TestCreateFacility#test_createFacility_withValidData_returns201AndData","historyId":"66389b59a964c63183c4b62ccf35bcda","time":{"start":1705892106494,"stop":1705892106575,"duration":81},"status":"failed","statusMessage":"AssertionError: Status code is different than expected. Actual: 400, expected: 201. Response payload: {\"status\":false,\"message\":\"Error\",\"data\":null,\"error\":{\"name\":[\"facility with this name already exists.\"]}}","statusTrace":"self = <test_facility.TestCreateFacility object at 0x7f6cbabb6790>\nclient = <core.http_client.HTTPClient object at 0x7f6cbabb43d0>\nuser = <User.SUPERUSER: 'superuser'>\n\n    @users(User.SUPERUSER)\n    def test_createFacility_withValidData_returns201AndData(self, client, user):\n        # Arrange\n        payload = data.fake.model.facility()\n    \n        # Act\n        response, model = FacilityAPI(client).create_facility(data=payload)\n    \n        # Assert\n>       APIResponse(response).assert_status(201)\n\ntests/facility/test_facility.py:27: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <core.asserters.APIResponse object at 0x7f6cba64a550>, status_code = 201\n\n    def assert_status(self, status_code: int):\n>       assert self.response.status_code == status_code, \\\n            f'{AssertionMessage.WRONG_STATUS_CODE.value} ' \\\n            f'Actual: {self.response.status_code}, ' \\\n            f'expected: {status_code}. ' \\\n            f'Response payload: {self.body_str()}'\nE       AssertionError: Status code is different than expected. Actual: 400, expected: 201. Response payload: {\"status\":false,\"message\":\"Error\",\"data\":null,\"error\":{\"name\":[\"facility with this name already exists.\"]}}\n\ncore/asserters.py:25: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1705890656844,"stop":1705890656859,"duration":15},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"client","time":{"start":1705890656859,"stop":1705890656859,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"users","time":{"start":1705892106494,"stop":1705892106494,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"client::0","time":{"start":1705892191525,"stop":1705892191526,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.facility"},{"name":"suite","value":"test_facility"},{"name":"subSuite","value":"TestCreateFacility"},{"name":"host","value":"fv-az166-687"},{"name":"thread","value":"2152-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.facility.test_facility"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"user","value":"<User.SUPERUSER: 'superuser'>"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"9636ce05a35fbe56.json","parameterValues":["<User.SUPERUSER: 'superuser'>"]}