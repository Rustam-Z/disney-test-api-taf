{"uid":"5b113c1b7ae4f002","name":"test_createCart_withMetroAndMetroConfigBelongingToDifferentFacility_returns400AndError[User.SUPERUSER]","fullName":"tests.metro.test_cart_build.TestCreateCart#test_createCart_withMetroAndMetroConfigBelongingToDifferentFacility_returns400AndError","historyId":"fe9a36d7b34109daf12f0ed61e6f1821","time":{"start":1691461710734,"stop":1691461711246,"duration":512},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'id'","statusTrace":"self = <test_cart_build.TestCreateCart object at 0x7f29c44e8e50>\nclient = <core.http_client.HTTPClient object at 0x7f29c4511d10>\nuser = <User.SUPERUSER: 'superuser'>\nrequest = <FixtureRequest for <Function test_createCart_withMetroAndMetroConfigBelongingToDifferentFacility_returns400AndError[User.SUPERUSER]>>\n\n    @users(User.SUPERUSER)\n    def test_createCart_withMetroAndMetroConfigBelongingToDifferentFacility_returns400AndError(self, client, user, request):\n        # Arrange\n        metro_payload, metro_response, metro_model = request.getfixturevalue('create_fake_metro_superuser')()\n>       conf_payload, conf_response, conf_model = request.getfixturevalue('create_fake_metro_item_configuration_superuser')()\n\ntests/metro/test_cart_build.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nkwargs = {}\nfacility_payload = {'address_line1': '3199 Jacqueline Islands\\nStephanieburgh, CT 81913', 'address_line2': '56779 Barron Common Suite 990\\nSouth Chaseland, OR 52190', 'city': 'South Shaun', 'country': 'Saudi Arabia', ...}\nfacility_response = <Response [201]>\nfacility_model = CreateFacilitySuccessResponse(status=True, message='Successfully', data=_Facility(id=1545, name='Jessica Keith', phone...0', zip_code='64506', customers=[], threshold=1040.0, warning_threshold=5944.0, critical_threshold=4646.0), error=None)\ncategory_payload = {'name': 'Tony Young'}, category_response = <Response [201]>\ncategory_model = CreateInventoryCategorySuccessResponse(status=True, message='Successfully', data=_InventoryCategory(id=699, name='Tony...ated_by=_UserField(id=1, email='admin@disney.com'), updated_by=_UserField(id=1, email='admin@disney.com')), error=None)\ninventory_item_type_payload = {'category': 699, 'description': 'International set top suddenly industry five owner green. Itself contain government trip school. Degree charge pressure ability continue may area.', 'name': 'John Miller'}\n\n    def _fixture(**kwargs):\n        # Setup\n        # Create facility\n        facility_payload = data.fake.model.facility()\n        facility_response, facility_model = FacilityAPI(client).create_facility(data=facility_payload)\n        nonlocal facility_id\n        facility_id = facility_model.data.id\n    \n        # Create inventory category\n        category_payload = data.fake.model.inventory_category()\n        category_response, category_model = InventoryCategoryAPI(client).create_category(data=category_payload)\n        nonlocal category_id\n        category_id = category_model.data.id\n    \n        # Create inventory item type\n        inventory_item_type_payload = data.fake.model.inventory_item_type(category_id=category_id)\n        inventory_item_type_response, inventory_item_type_model = InventoryItemTypeAPI(client).create_item_type(\n            data=inventory_item_type_payload\n        )\n        nonlocal inventory_item_type_id\n        inventory_item_type_id = inventory_item_type_model.data.id\n    \n        # Create facility item type\n        payload = data.fake.model.facility_item_type(item_type_id=inventory_item_type_id, facility_id=facility_id)\n        response, model = FacilityItemTypeAPI(client).create_item_type(data=payload)\n        nonlocal facility_item_type_id\n        facility_item_type_id = model.data.id\n    \n        # Create metro item configuration\n        payload = data.fake.model.metro_item_configuration(\n            facility_id=facility_id,\n            facility_item_type_ids=[facility_item_type_id],\n            **kwargs\n        )\n        response, model = MetroItemConfigurationAPI(client).create_config(data=payload)\n        nonlocal metro_item_config_id\n>       metro_item_config_id = model.data.id\nE       AttributeError: 'NoneType' object has no attribute 'id'\n\nfixtures/metro_item_configuration.py:55: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":3,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1691461573967,"stop":1691461573981,"duration":14},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"client","time":{"start":1691461573981,"stop":1691461573981,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"users","time":{"start":1691461710733,"stop":1691461710733,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"create_fake_facility","time":{"start":1691461710734,"stop":1691461710734,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"create_fake_metro_superuser","time":{"start":1691461710734,"stop":1691461710734,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"create_fake_metro_item_configuration_superuser","time":{"start":1691461710942,"stop":1691461710942,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"afterStages":[{"name":"create_fake_metro_item_configuration_superuser::0","time":{"start":1691461711252,"stop":1691461711575,"duration":323},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"create_fake_metro_superuser::0","time":{"start":1691461711576,"stop":1691461711660,"duration":84},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"create_fake_facility::0","time":{"start":1691461711660,"stop":1691461711851,"duration":191},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"client::0","time":{"start":1691461792272,"stop":1691461792273,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"parentSuite","value":"tests.metro"},{"name":"suite","value":"test_cart_build"},{"name":"subSuite","value":"TestCreateCart"},{"name":"host","value":"fv-az440-174"},{"name":"thread","value":"2329-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.metro.test_cart_build"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"user","value":"<User.SUPERUSER: 'superuser'>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"d670493fc0ab85ce","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'id'","time":{"start":1691461709656,"stop":1691461710146,"duration":490}},{"uid":"5cd352b271a56a8d","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'id'","time":{"start":1691461708886,"stop":1691461709143,"duration":257}},{"uid":"6c23502d2062ce65","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'id'","time":{"start":1691461707801,"stop":1691461708302,"duration":501}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":5,"skipped":0,"passed":69,"unknown":0,"total":74},"items":[{"uid":"2b361588ebd1ea5d","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/87//#testresult/2b361588ebd1ea5d","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'id'","time":{"start":1691375402556,"stop":1691375403114,"duration":558}},{"uid":"7972c137049b06a1","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/86//#testresult/7972c137049b06a1","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'id'","time":{"start":1691288596689,"stop":1691288597336,"duration":647}},{"uid":"c721fca441751309","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/85//#testresult/c721fca441751309","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'id'","time":{"start":1691202369041,"stop":1691202369630,"duration":589}},{"uid":"9ca0345aecb21de","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/84//#testresult/9ca0345aecb21de","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'id'","time":{"start":1691116125936,"stop":1691116126529,"duration":593}},{"uid":"a787e53699aa8e75","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/83//#testresult/a787e53699aa8e75","status":"passed","time":{"start":1691029619200,"stop":1691029619856,"duration":656}},{"uid":"e3d1fc7cf05b8737","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/82//#testresult/e3d1fc7cf05b8737","status":"passed","time":{"start":1690943167100,"stop":1690943168305,"duration":1205}},{"uid":"9be0e961f4019087","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/81//#testresult/9be0e961f4019087","status":"passed","time":{"start":1690857391289,"stop":1690857392308,"duration":1019}},{"uid":"12913b29918f7570","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/80//#testresult/12913b29918f7570","status":"passed","time":{"start":1690770679074,"stop":1690770680260,"duration":1186}},{"uid":"3f0bf8de5e1a9804","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/79//#testresult/3f0bf8de5e1a9804","status":"passed","time":{"start":1690684067619,"stop":1690684068782,"duration":1163}},{"uid":"ed353156c25aa7","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/78//#testresult/ed353156c25aa7","status":"passed","time":{"start":1690597510467,"stop":1690597511263,"duration":796}},{"uid":"6c656ad952d2c1d4","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/77//#testresult/6c656ad952d2c1d4","status":"passed","time":{"start":1690511295172,"stop":1690511296046,"duration":874}},{"uid":"6666e8ea34b33f6e","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/76//#testresult/6666e8ea34b33f6e","status":"passed","time":{"start":1690424763904,"stop":1690424765050,"duration":1146}},{"uid":"ec579157f82ef575","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/75//#testresult/ec579157f82ef575","status":"passed","time":{"start":1690338960109,"stop":1690338961233,"duration":1124}},{"uid":"ca347706ba7eaa","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/74//#testresult/ca347706ba7eaa","status":"passed","time":{"start":1690253105572,"stop":1690253106184,"duration":612}},{"uid":"e321557b16377a64","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/73//#testresult/e321557b16377a64","status":"passed","time":{"start":1690166012998,"stop":1690166013550,"duration":552}},{"uid":"fe2a60bff0d1ed86","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/72//#testresult/fe2a60bff0d1ed86","status":"passed","time":{"start":1690079809170,"stop":1690079810013,"duration":843}},{"uid":"7e6574131fccb05a","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/71//#testresult/7e6574131fccb05a","status":"passed","time":{"start":1689993053749,"stop":1689993054861,"duration":1112}},{"uid":"9f4936370fd04ce","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/70//#testresult/9f4936370fd04ce","status":"passed","time":{"start":1689907147881,"stop":1689907148547,"duration":666}},{"uid":"9ce40b06d6bd48bc","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/69//#testresult/9ce40b06d6bd48bc","status":"passed","time":{"start":1689820607792,"stop":1689820608391,"duration":599}},{"uid":"3df3b323e649840","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/68//#testresult/3df3b323e649840","status":"passed","time":{"start":1689738511281,"stop":1689738512136,"duration":855}}]},"tags":[]},"source":"5b113c1b7ae4f002.json","parameterValues":["<User.SUPERUSER: 'superuser'>"]}