{"uid":"3c8c081288af24bb","name":"test_updateFacility_byValidID_returns200AndData[User.SUPERUSER]","fullName":"tests.facility.test_facility.TestUpdateFacility#test_updateFacility_byValidID_returns200AndData","historyId":"c1cacc030d5bdfd9375d4d83a065da9f","time":{"start":1695262929381,"stop":1695262929524,"duration":143},"status":"failed","statusMessage":"AssertionError: Status code is different than expected. Actual: 400, expected: 200. Response payload: {\"status\":false,\"message\":\"Error\",\"data\":null,\"error\":{\"name\":[\"facility with this name already exists.\"]}}","statusTrace":"self = <test_facility.TestUpdateFacility object at 0x7f5728b67b90>\nclient = <core.http_client.HTTPClient object at 0x7f5729e12210>\nuser = <User.SUPERUSER: 'superuser'>\nrequest = <FixtureRequest for <Function test_updateFacility_byValidID_returns200AndData[User.SUPERUSER]>>\n\n    @users(User.SUPERUSER)\n    def test_updateFacility_byValidID_returns200AndData(self, client, user, request):\n        # Arrange\n        payload, response, model = request.getfixturevalue('create_fake_facility')()\n        existing_facility_id = model.data.id\n    \n        # Act\n        payload = data.fake.model.facility()\n        response, model = FacilityAPI(client).update_facility(id=existing_facility_id, data=payload)\n    \n        # Assert\n>       APIResponse(response).assert_status(200)\n\ntests/facility/test_facility.py:106: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <core.asserters.APIResponse object at 0x7f5729945210>, status_code = 200\n\n    def assert_status(self, status_code: int):\n>       assert self.response.status_code == status_code, \\\n            f'{AssertionMessage.WRONG_STATUS_CODE.value} ' \\\n            f'Actual: {self.response.status_code}, ' \\\n            f'expected: {status_code}. ' \\\n            f'Response payload: {self.body_str()}'\nE       AssertionError: Status code is different than expected. Actual: 400, expected: 200. Response payload: {\"status\":false,\"message\":\"Error\",\"data\":null,\"error\":{\"name\":[\"facility with this name already exists.\"]}}\n\ncore/asserters.py:25: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1695262667510,"stop":1695262667526,"duration":16},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false},{"name":"client","time":{"start":1695262667526,"stop":1695262667527,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false},{"name":"users","time":{"start":1695262929380,"stop":1695262929381,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false},{"name":"create_fake_facility","time":{"start":1695262929381,"stop":1695262929381,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false}],"afterStages":[{"name":"create_fake_facility::0","time":{"start":1695262929564,"stop":1695262929651,"duration":87},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false},{"name":"client::0","time":{"start":1695262987460,"stop":1695262987461,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false}],"labels":[{"name":"parentSuite","value":"tests.facility"},{"name":"suite","value":"test_facility"},{"name":"subSuite","value":"TestUpdateFacility"},{"name":"host","value":"fv-az248-325"},{"name":"thread","value":"2261-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.facility.test_facility"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"user","value":"<User.SUPERUSER: 'superuser'>"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"3c8c081288af24bb.json","parameterValues":["<User.SUPERUSER: 'superuser'>"]}