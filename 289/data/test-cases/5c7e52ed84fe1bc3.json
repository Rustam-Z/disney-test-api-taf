{"uid":"5c7e52ed84fe1bc3","name":"test_getTruck_withValidID_returns200AndData[User.SUPERUSER]","fullName":"tests.facility.test_truck.TestGetTruck#test_getTruck_withValidID_returns200AndData","historyId":"825089b9f552678925d4b63dabda5c1e","time":{"start":1708829645329,"stop":1708829645430,"duration":101},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'id'","statusTrace":"self = <test_truck.TestGetTruck object at 0x7f8882f3a610>\nclient = <core.http_client.HTTPClient object at 0x7f8882eda510>\nuser = <User.SUPERUSER: 'superuser'>\nrequest = <FixtureRequest for <Function test_getTruck_withValidID_returns200AndData[User.SUPERUSER]>>\n\n    @users(User.SUPERUSER)\n    def test_getTruck_withValidID_returns200AndData(self, client, user, request):\n        # Arrange\n>       payload, response, model = request.getfixturevalue('create_fake_truck_superuser')()\n\ntests/facility/test_truck.py:36: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nfixtures/truck.py:14: in _fixture\n    facility_payload, facility_response, facility_model = create_fake_facility(no_of_customers=1)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nno_of_customers = 1, kwargs = {}, _ = 0\npayload = {'address_line1': '9271 Rachel Ville Apt. 428\\nEast Jocelyn, WY 51467', 'address_line2': '86577 Sanchez Course Apt. 612\\nSouth Patrickchester, GU 70685', 'city': 'Lauratown', 'country': 'North Macedonia', ...}\nresponse = <Response [400]>\nmodel = ErrorResponse(status=False, message='Error', data=None, error={'name': ['facility with this name already exists.']})\n\n    def _fixture(no_of_customers: int = 0, **kwargs):\n        # Create customers\n        for _ in range(no_of_customers):\n            payload = data.fake.model.customer()  # Request body_str JSON\n            response, model = CustomerAPI(client).create_customer(data=payload)\n            customers.append(model.data.id)\n    \n        # Create facility\n        payload = data.fake.model.facility(customers=customers, **kwargs)  # Request body_str JSON\n        response, model = FacilityAPI(client).create_facility(data=payload)\n        nonlocal facility_id\n>       facility_id = model.data.id\nE       AttributeError: 'NoneType' object has no attribute 'id'\n\nfixtures/facility.py:24: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":3,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1708827617820,"stop":1708827617834,"duration":14},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"client","time":{"start":1708827617835,"stop":1708827617835,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"users","time":{"start":1708829645329,"stop":1708829645329,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"create_fake_facility","time":{"start":1708829645329,"stop":1708829645329,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"create_fake_truck_superuser","time":{"start":1708829645329,"stop":1708829645329,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"create_fake_truck_superuser::0","time":{"start":1708829645435,"stop":1708829645478,"duration":43},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"create_fake_facility::0","time":{"start":1708829645478,"stop":1708829645623,"duration":145},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"client::0","time":{"start":1708829706122,"stop":1708829706123,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.facility"},{"name":"suite","value":"test_truck"},{"name":"subSuite","value":"TestGetTruck"},{"name":"host","value":"fv-az173-292"},{"name":"thread","value":"2232-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.facility.test_truck"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"user","value":"<User.SUPERUSER: 'superuser'>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"ad4ddc4f08ed580","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'id'","time":{"start":1708829645187,"stop":1708829645231,"duration":44}},{"uid":"4f49806297319e56","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'id'","time":{"start":1708829644986,"stop":1708829645063,"duration":77}},{"uid":"a6c15cf3089692e4","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'id'","time":{"start":1708829644647,"stop":1708829644753,"duration":106}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":2,"unknown":0,"total":3},"items":[{"uid":"3aa22d1e3d654575","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/288//#testresult/3aa22d1e3d654575","status":"passed","time":{"start":1708743455195,"stop":1708743455708,"duration":513}},{"uid":"e56422ba5adffd41","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/287//#testresult/e56422ba5adffd41","status":"passed","time":{"start":1708656699486,"stop":1708656699728,"duration":242}}]},"tags":[]},"source":"5c7e52ed84fe1bc3.json","parameterValues":["<User.SUPERUSER: 'superuser'>"]}