{"uid":"9bb43d0009236111","name":"test_cartRebuild_withValidData_returns200AndData[User.SUPERUSER]","fullName":"tests.metro.test_cart_build.TestCreateCart#test_cartRebuild_withValidData_returns200AndData","historyId":"1ae16304988cdac5c19aee221d9b58b2","time":{"start":1691202372981,"stop":1691202373362,"duration":381},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'id'","statusTrace":"self = <test_cart_build.TestCreateCart object at 0x7f2d05735990>\nclient = <core.http_client.HTTPClient object at 0x7f2d04538150>\nuser = <User.SUPERUSER: 'superuser'>\nrequest = <FixtureRequest for <Function test_cartRebuild_withValidData_returns200AndData[User.SUPERUSER]>>\n\n    @users(User.SUPERUSER)\n    def test_cartRebuild_withValidData_returns200AndData(self, client, user, request):\n        # Arrange\n>       payload, response, model = request.getfixturevalue('create_fake_cart_superuser')()\n\ntests/metro/test_cart_build.py:46: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nkwargs = {'facility_id': 1011}\nfacility_payload = {'address_line1': '20141 Howard Square Apt. 949\\nLaurenland, MA 39738', 'address_line2': '76706 Galloway Street Apt. 788\\nBoyerchester, AK 44926', 'city': 'Lynchmouth', 'country': 'Russian Federation', ...}\nfacility_response = <Response [201]>\nfacility_model = CreateFacilitySuccessResponse(status=True, message='Successfully', data=_Facility(id=1011, name='Greg Mercer', phone_n... zip_code='28113', customers=[872], threshold=2625.0, warning_threshold=5645.0, critical_threshold=1640.0), error=None)\nfacility_id = 1011, category_payload = {'name': 'Spencer Warren'}\ncategory_response = <Response [201]>\ncategory_model = CreateInventoryCategorySuccessResponse(status=True, message='Successfully', data=_InventoryCategory(id=399, name='Spen...ated_by=_UserField(id=1, email='admin@disney.com'), updated_by=_UserField(id=1, email='admin@disney.com')), error=None)\n\n    def _fixture(**kwargs):\n        # Arrange\n    \n        # Create facility\n        if 'facility_id' not in kwargs:\n            facility_payload, facility_response, facility_model = create_fake_facility(no_of_customers=1)\n            kwargs['facility_id'] = facility_model.data.id\n        facility_id = kwargs['facility_id']\n    \n        # Create inventory category\n        category_payload = data.fake.model.inventory_category()\n        category_response, category_model = InventoryCategoryAPI(client).create_category(data=category_payload)\n        nonlocal category_id\n        category_id = category_model.data.id\n    \n        # Create inventory item type\n        inventory_item_type_payload = data.fake.model.inventory_item_type(category_id=category_id)\n        inventory_item_type_response, inventory_item_type_model = InventoryItemTypeAPI(client).create_item_type(\n            data=inventory_item_type_payload\n        )\n        nonlocal inventory_item_type_id\n        inventory_item_type_id = inventory_item_type_model.data.id\n    \n        # Create facility item type\n        payload = data.fake.model.facility_item_type(item_type_id=inventory_item_type_id, facility_id=facility_id)\n        response, model = FacilityItemTypeAPI(client).create_item_type(data=payload)\n        nonlocal facility_item_type_id\n        facility_item_type_id = model.data.id\n    \n        # Create metro item configuration\n        payload = data.fake.model.metro_item_configuration(\n            facility_id=facility_id,\n            facility_item_type_ids=[facility_item_type_id],\n        )\n        response, conf_model = MetroItemConfigurationAPI(client).create_config(data=payload)\n        nonlocal metro_item_config_id\n>       metro_item_config_id = conf_model.data.id\nE       AttributeError: 'NoneType' object has no attribute 'id'\n\nfixtures/cart_build.py:56: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":3,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1691202228275,"stop":1691202228289,"duration":14},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"client","time":{"start":1691202228289,"stop":1691202228289,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"users","time":{"start":1691202372980,"stop":1691202372981,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"create_fake_cart_superuser","time":{"start":1691202372981,"stop":1691202372981,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"create_fake_facility","time":{"start":1691202372981,"stop":1691202372981,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"afterStages":[{"name":"create_fake_cart_superuser::0","time":{"start":1691202373368,"stop":1691202373665,"duration":297},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"create_fake_facility::0","time":{"start":1691202373666,"stop":1691202373850,"duration":184},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"client::0","time":{"start":1691202462489,"stop":1691202462491,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"parentSuite","value":"tests.metro"},{"name":"suite","value":"test_cart_build"},{"name":"subSuite","value":"TestCreateCart"},{"name":"host","value":"fv-az593-762"},{"name":"thread","value":"2226-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.metro.test_cart_build"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"user","value":"<User.SUPERUSER: 'superuser'>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"ebb790b106640ec9","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'id'","time":{"start":1691202372057,"stop":1691202372446,"duration":389}},{"uid":"88915413f512ac4d","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'id'","time":{"start":1691202371200,"stop":1691202371562,"duration":362}},{"uid":"9705b559261af280","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'id'","time":{"start":1691202370298,"stop":1691202370666,"duration":368}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":3,"skipped":0,"passed":68,"unknown":0,"total":71},"items":[{"uid":"29eb359185f4569c","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/84//#testresult/29eb359185f4569c","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'id'","time":{"start":1691116129885,"stop":1691116130257,"duration":372}},{"uid":"f1a48c81ca645b9d","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/83//#testresult/f1a48c81ca645b9d","status":"passed","time":{"start":1691029620318,"stop":1691029620928,"duration":610}},{"uid":"ab3892730957f529","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/82//#testresult/ab3892730957f529","status":"passed","time":{"start":1690943169046,"stop":1690943170224,"duration":1178}},{"uid":"f975eb3247ab84a0","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/81//#testresult/f975eb3247ab84a0","status":"passed","time":{"start":1690857392947,"stop":1690857393973,"duration":1026}},{"uid":"c36ec2621f251fe4","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/80//#testresult/c36ec2621f251fe4","status":"passed","time":{"start":1690770680979,"stop":1690770682143,"duration":1164}},{"uid":"d2bc1b921182cb88","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/79//#testresult/d2bc1b921182cb88","status":"passed","time":{"start":1690684069524,"stop":1690684070687,"duration":1163}},{"uid":"53e0380faca2470c","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/78//#testresult/53e0380faca2470c","status":"passed","time":{"start":1690597511765,"stop":1690597512550,"duration":785}},{"uid":"5debbce3fa2652e3","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/77//#testresult/5debbce3fa2652e3","status":"passed","time":{"start":1690511296610,"stop":1690511297509,"duration":899}},{"uid":"2d19b4f40345f218","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/76//#testresult/2d19b4f40345f218","status":"passed","time":{"start":1690424765688,"stop":1690424766729,"duration":1041}},{"uid":"49aa8a696bfafba9","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/75//#testresult/49aa8a696bfafba9","status":"passed","time":{"start":1690338961940,"stop":1690338963124,"duration":1184}},{"uid":"632bb47291661e60","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/74//#testresult/632bb47291661e60","status":"passed","time":{"start":1690253106591,"stop":1690253107215,"duration":624}},{"uid":"f4a28f98fb9d2cf","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/73//#testresult/f4a28f98fb9d2cf","status":"passed","time":{"start":1690166013963,"stop":1690166014541,"duration":578}},{"uid":"7ee7bb02f6a21b72","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/72//#testresult/7ee7bb02f6a21b72","status":"passed","time":{"start":1690079810533,"stop":1690079811345,"duration":812}},{"uid":"12e12f204757b149","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/71//#testresult/12e12f204757b149","status":"passed","time":{"start":1689993055563,"stop":1689993056690,"duration":1127}},{"uid":"14d9f981a21c2e1f","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/70//#testresult/14d9f981a21c2e1f","status":"passed","time":{"start":1689907148983,"stop":1689907149630,"duration":647}},{"uid":"23169b17de267d49","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/69//#testresult/23169b17de267d49","status":"passed","time":{"start":1689820608811,"stop":1689820609440,"duration":629}},{"uid":"d6c43fed8fa1828a","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/68//#testresult/d6c43fed8fa1828a","status":"passed","time":{"start":1689738512743,"stop":1689738513586,"duration":843}},{"uid":"25bf75588287d634","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/67//#testresult/25bf75588287d634","status":"passed","time":{"start":1689649451370,"stop":1689649452233,"duration":863}},{"uid":"844c08fb6c55c2f","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/66//#testresult/844c08fb6c55c2f","status":"passed","time":{"start":1689563242273,"stop":1689563243049,"duration":776}},{"uid":"93a90b495702e599","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/65//#testresult/93a90b495702e599","status":"passed","time":{"start":1689477184931,"stop":1689477185503,"duration":572}}]},"tags":[]},"source":"9bb43d0009236111.json","parameterValues":["<User.SUPERUSER: 'superuser'>"]}