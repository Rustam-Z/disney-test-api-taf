{"uid":"24c0fb45e4d5ffc4","name":"test_createMetroItemConfigBySuperuser_withValidData_returns201AndData[User.SUPERUSER]","fullName":"tests.metro.test_metro_item_configuration.TestCreateDeleteMetroItemTypeConfiguration#test_createMetroItemConfigBySuperuser_withValidData_returns201AndData","historyId":"002a179b9fbc82fbe072a282283382a1","time":{"start":1691202385569,"stop":1691202385910,"duration":341},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'id'","statusTrace":"self = <test_metro_item_configuration.TestCreateDeleteMetroItemTypeConfiguration object at 0x7f2d04525c50>\nclient = <core.http_client.HTTPClient object at 0x7f2d04538150>\nuser = <User.SUPERUSER: 'superuser'>\nrequest = <FixtureRequest for <Function test_createMetroItemConfigBySuperuser_withValidData_returns201AndData[User.SUPERUSER]>>\n\n    @users(User.SUPERUSER)\n    def test_createMetroItemConfigBySuperuser_withValidData_returns201AndData(self, client, user, request):\n        # Act\n>       payload, response, model = request.getfixturevalue('create_fake_metro_item_configuration_superuser')()\n\ntests/metro/test_metro_item_configuration.py:13: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nkwargs = {}\nfacility_payload = {'address_line1': 'Unit 4477 Box 4929\\nDPO AP 82239', 'address_line2': '647 Stacy Points Suite 570\\nLake Antonioland, GA 69246', 'city': 'Julieview', 'country': 'Korea', ...}\nfacility_response = <Response [201]>\nfacility_model = CreateFacilitySuccessResponse(status=True, message='Successfully', data=_Facility(id=1026, name='Cameron Carey', phone...46', zip_code='74000', customers=[], threshold=270.0, warning_threshold=3770.0, critical_threshold=8090.0), error=None)\ncategory_payload = {'name': 'Martin Smith'}\ncategory_response = <Response [201]>\ncategory_model = CreateInventoryCategorySuccessResponse(status=True, message='Successfully', data=_InventoryCategory(id=411, name='Mart...ated_by=_UserField(id=1, email='admin@disney.com'), updated_by=_UserField(id=1, email='admin@disney.com')), error=None)\ninventory_item_type_payload = {'category': 411, 'description': 'Imagine career hotel traditional north so. Much buy someone environmental language. Term inside free close song happen.', 'name': 'Michael Taylor'}\n\n    def _fixture(**kwargs):\n        # Setup\n        # Create facility\n        facility_payload = data.fake.model.facility()\n        facility_response, facility_model = FacilityAPI(client).create_facility(data=facility_payload)\n        nonlocal facility_id\n        facility_id = facility_model.data.id\n    \n        # Create inventory category\n        category_payload = data.fake.model.inventory_category()\n        category_response, category_model = InventoryCategoryAPI(client).create_category(data=category_payload)\n        nonlocal category_id\n        category_id = category_model.data.id\n    \n        # Create inventory item type\n        inventory_item_type_payload = data.fake.model.inventory_item_type(category_id=category_id)\n        inventory_item_type_response, inventory_item_type_model = InventoryItemTypeAPI(client).create_item_type(\n            data=inventory_item_type_payload\n        )\n        nonlocal inventory_item_type_id\n        inventory_item_type_id = inventory_item_type_model.data.id\n    \n        # Create facility item type\n        payload = data.fake.model.facility_item_type(item_type_id=inventory_item_type_id, facility_id=facility_id)\n        response, model = FacilityItemTypeAPI(client).create_item_type(data=payload)\n        nonlocal facility_item_type_id\n        facility_item_type_id = model.data.id\n    \n        # Create metro item configuration\n        payload = data.fake.model.metro_item_configuration(\n            facility_id=facility_id,\n            facility_item_type_ids=[facility_item_type_id],\n            **kwargs\n        )\n        response, model = MetroItemConfigurationAPI(client).create_config(data=payload)\n        nonlocal metro_item_config_id\n>       metro_item_config_id = model.data.id\nE       AttributeError: 'NoneType' object has no attribute 'id'\n\nfixtures/metro_item_configuration.py:55: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":3,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1691202228275,"stop":1691202228289,"duration":14},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"client","time":{"start":1691202228289,"stop":1691202228289,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"users","time":{"start":1691202385569,"stop":1691202385569,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"create_fake_metro_item_configuration_superuser","time":{"start":1691202385570,"stop":1691202385570,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"afterStages":[{"name":"create_fake_metro_item_configuration_superuser::0","time":{"start":1691202385915,"stop":1691202386244,"duration":329},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"client::0","time":{"start":1691202462489,"stop":1691202462491,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"parentSuite","value":"tests.metro"},{"name":"suite","value":"test_metro_item_configuration"},{"name":"subSuite","value":"TestCreateDeleteMetroItemTypeConfiguration"},{"name":"host","value":"fv-az593-762"},{"name":"thread","value":"2226-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.metro.test_metro_item_configuration"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"user","value":"<User.SUPERUSER: 'superuser'>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"617c3c035d1cfcc9","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'id'","time":{"start":1691202384933,"stop":1691202385231,"duration":298}},{"uid":"435095e290ca8b94","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'id'","time":{"start":1691202384279,"stop":1691202384579,"duration":300}},{"uid":"172ba649739bb36c","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'id'","time":{"start":1691202383612,"stop":1691202383914,"duration":302}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":69,"unknown":0,"total":71},"items":[{"uid":"f2b1362ebad4129a","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/84//#testresult/f2b1362ebad4129a","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'id'","time":{"start":1691116142654,"stop":1691116142969,"duration":315}},{"uid":"4f0a9dff49ee5f3e","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/83//#testresult/4f0a9dff49ee5f3e","status":"passed","time":{"start":1691029629639,"stop":1691029630041,"duration":402}},{"uid":"16e5bf1f5fb5f6b","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/82//#testresult/16e5bf1f5fb5f6b","status":"passed","time":{"start":1690943185477,"stop":1690943186151,"duration":674}},{"uid":"3347fc73be8911bf","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/81//#testresult/3347fc73be8911bf","status":"passed","time":{"start":1690857407172,"stop":1690857407762,"duration":590}},{"uid":"d7c185ea52b65862","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/80//#testresult/d7c185ea52b65862","status":"passed","time":{"start":1690770697529,"stop":1690770698198,"duration":669}},{"uid":"5bb17ef174dc8925","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/79//#testresult/5bb17ef174dc8925","status":"passed","time":{"start":1690684085586,"stop":1690684086235,"duration":649}},{"uid":"2831ed275f4fa8a1","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/78//#testresult/2831ed275f4fa8a1","status":"passed","time":{"start":1690597522973,"stop":1690597523409,"duration":436}},{"uid":"529132a9286e9224","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/77//#testresult/529132a9286e9224","status":"passed","time":{"start":1690511308655,"stop":1690511309127,"duration":472}},{"uid":"e8e470f5eee8ae57","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/76//#testresult/e8e470f5eee8ae57","status":"passed","time":{"start":1690424780722,"stop":1690424781328,"duration":606}},{"uid":"177c98ea0f73ef3d","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/75//#testresult/177c98ea0f73ef3d","status":"passed","time":{"start":1690338978654,"stop":1690338979339,"duration":685}},{"uid":"7fd925e6ed8b0d2a","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/74//#testresult/7fd925e6ed8b0d2a","status":"passed","time":{"start":1690253116076,"stop":1690253116415,"duration":339}},{"uid":"b2dc2aed7205485e","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/73//#testresult/b2dc2aed7205485e","status":"passed","time":{"start":1690166023042,"stop":1690166023360,"duration":318}},{"uid":"b2dd24f7ef9b74c8","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/72//#testresult/b2dd24f7ef9b74c8","status":"passed","time":{"start":1690079822168,"stop":1690079822622,"duration":454}},{"uid":"3ebf5e2f324d761c","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/71//#testresult/3ebf5e2f324d761c","status":"passed","time":{"start":1689993071886,"stop":1689993072522,"duration":636}},{"uid":"267c3b2650f89d16","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/70//#testresult/267c3b2650f89d16","status":"passed","time":{"start":1689907157567,"stop":1689907157945,"duration":378}},{"uid":"c2386121edae878d","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/69//#testresult/c2386121edae878d","status":"passed","time":{"start":1689820616853,"stop":1689820617163,"duration":310}},{"uid":"bd1639e6c9edad7d","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/68//#testresult/bd1639e6c9edad7d","status":"passed","time":{"start":1689738524942,"stop":1689738525426,"duration":484}},{"uid":"2dc16492ef0566cd","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/67//#testresult/2dc16492ef0566cd","status":"passed","time":{"start":1689649463724,"stop":1689649464220,"duration":496}},{"uid":"27d5bef49b190ce5","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/66//#testresult/27d5bef49b190ce5","status":"passed","time":{"start":1689563253282,"stop":1689563253701,"duration":419}},{"uid":"3f24914f8a13258b","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/65//#testresult/3f24914f8a13258b","status":"passed","time":{"start":1689477193595,"stop":1689477193913,"duration":318}}]},"tags":[]},"source":"24c0fb45e4d5ffc4.json","parameterValues":["<User.SUPERUSER: 'superuser'>"]}