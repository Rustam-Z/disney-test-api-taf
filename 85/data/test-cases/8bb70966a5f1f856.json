{"uid":"8bb70966a5f1f856","name":"test_createCart_withValidData_returns200AndData[User.SUPERUSER]","fullName":"tests.metro.test_cart_build.TestCreateCart#test_createCart_withValidData_returns200AndData","historyId":"43f550a97efb5f6ff6e21633afa61185","time":{"start":1691202364528,"stop":1691202364910,"duration":382},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'id'","statusTrace":"self = <test_cart_build.TestCreateCart object at 0x7f2d05735f50>\nclient = <core.http_client.HTTPClient object at 0x7f2d04538150>\nuser = <User.SUPERUSER: 'superuser'>\nrequest = <FixtureRequest for <Function test_createCart_withValidData_returns200AndData[User.SUPERUSER]>>\n\n    @users(User.SUPERUSER)\n    def test_createCart_withValidData_returns200AndData(self, client, user, request):\n        # Act\n>       payload, response, model = request.getfixturevalue('create_fake_cart_superuser')()\n\ntests/metro/test_cart_build.py:14: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nkwargs = {'facility_id': 999}\nfacility_payload = {'address_line1': '64804 Derrick Circles Apt. 211\\nSullivanland, LA 61878', 'address_line2': '8784 Morton Ports Apt. 349\\nPeterfort, MA 65548', 'city': 'West Dylan', 'country': 'United States Minor Outlying Islands', ...}\nfacility_response = <Response [201]>\nfacility_model = CreateFacilitySuccessResponse(status=True, message='Successfully', data=_Facility(id=999, name='David Garcia', phone_n... zip_code='35526', customers=[864], threshold=3631.0, warning_threshold=7527.0, critical_threshold=1128.0), error=None)\nfacility_id = 999, category_payload = {'name': 'Samuel Williamson'}\ncategory_response = <Response [201]>\ncategory_model = CreateInventoryCategorySuccessResponse(status=True, message='Successfully', data=_InventoryCategory(id=391, name='Samu...ated_by=_UserField(id=1, email='admin@disney.com'), updated_by=_UserField(id=1, email='admin@disney.com')), error=None)\n\n    def _fixture(**kwargs):\n        # Arrange\n    \n        # Create facility\n        if 'facility_id' not in kwargs:\n            facility_payload, facility_response, facility_model = create_fake_facility(no_of_customers=1)\n            kwargs['facility_id'] = facility_model.data.id\n        facility_id = kwargs['facility_id']\n    \n        # Create inventory category\n        category_payload = data.fake.model.inventory_category()\n        category_response, category_model = InventoryCategoryAPI(client).create_category(data=category_payload)\n        nonlocal category_id\n        category_id = category_model.data.id\n    \n        # Create inventory item type\n        inventory_item_type_payload = data.fake.model.inventory_item_type(category_id=category_id)\n        inventory_item_type_response, inventory_item_type_model = InventoryItemTypeAPI(client).create_item_type(\n            data=inventory_item_type_payload\n        )\n        nonlocal inventory_item_type_id\n        inventory_item_type_id = inventory_item_type_model.data.id\n    \n        # Create facility item type\n        payload = data.fake.model.facility_item_type(item_type_id=inventory_item_type_id, facility_id=facility_id)\n        response, model = FacilityItemTypeAPI(client).create_item_type(data=payload)\n        nonlocal facility_item_type_id\n        facility_item_type_id = model.data.id\n    \n        # Create metro item configuration\n        payload = data.fake.model.metro_item_configuration(\n            facility_id=facility_id,\n            facility_item_type_ids=[facility_item_type_id],\n        )\n        response, conf_model = MetroItemConfigurationAPI(client).create_config(data=payload)\n        nonlocal metro_item_config_id\n>       metro_item_config_id = conf_model.data.id\nE       AttributeError: 'NoneType' object has no attribute 'id'\n\nfixtures/cart_build.py:56: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":3,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1691202228275,"stop":1691202228289,"duration":14},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"client","time":{"start":1691202228289,"stop":1691202228289,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"users","time":{"start":1691202364527,"stop":1691202364527,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"create_fake_cart_superuser","time":{"start":1691202364528,"stop":1691202364528,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"create_fake_facility","time":{"start":1691202364528,"stop":1691202364528,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"afterStages":[{"name":"create_fake_cart_superuser::0","time":{"start":1691202364916,"stop":1691202365202,"duration":286},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"create_fake_facility::0","time":{"start":1691202365204,"stop":1691202365392,"duration":188},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"client::0","time":{"start":1691202462489,"stop":1691202462491,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"parentSuite","value":"tests.metro"},{"name":"suite","value":"test_cart_build"},{"name":"subSuite","value":"TestCreateCart"},{"name":"host","value":"fv-az593-762"},{"name":"thread","value":"2226-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.metro.test_cart_build"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"user","value":"<User.SUPERUSER: 'superuser'>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"12d0229026fa15d6","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'id'","time":{"start":1691202363673,"stop":1691202364040,"duration":367}},{"uid":"68c4c04a8c4a24a8","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'id'","time":{"start":1691202362818,"stop":1691202363192,"duration":374}},{"uid":"6751c24c274a7594","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'id'","time":{"start":1691202361940,"stop":1691202362332,"duration":392}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":69,"unknown":0,"total":71},"items":[{"uid":"5f7c798d21d59a57","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/84//#testresult/5f7c798d21d59a57","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'id'","time":{"start":1691116121330,"stop":1691116121707,"duration":377}},{"uid":"f073ea425ba2840f","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/83//#testresult/f073ea425ba2840f","status":"passed","time":{"start":1691029618224,"stop":1691029618869,"duration":645}},{"uid":"73f6e4f2958312dd","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/82//#testresult/73f6e4f2958312dd","status":"passed","time":{"start":1690943165379,"stop":1690943166545,"duration":1166}},{"uid":"3976824b48864e72","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/81//#testresult/3976824b48864e72","status":"passed","time":{"start":1690857389729,"stop":1690857390784,"duration":1055}},{"uid":"a6bc4fd0e3a2f051","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/80//#testresult/a6bc4fd0e3a2f051","status":"passed","time":{"start":1690770677276,"stop":1690770678479,"duration":1203}},{"uid":"bdc720ae9db9895b","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/79//#testresult/bdc720ae9db9895b","status":"passed","time":{"start":1690684065885,"stop":1690684067055,"duration":1170}},{"uid":"41b55881d69ede1e","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/78//#testresult/41b55881d69ede1e","status":"passed","time":{"start":1690597509223,"stop":1690597510024,"duration":801}},{"uid":"ae0ea6388e7d3dc2","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/77//#testresult/ae0ea6388e7d3dc2","status":"passed","time":{"start":1690511293853,"stop":1690511294715,"duration":862}},{"uid":"dd04b806ce0e6397","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/76//#testresult/dd04b806ce0e6397","status":"passed","time":{"start":1690424762366,"stop":1690424763382,"duration":1016}},{"uid":"9fca1fdcd2947ce","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/75//#testresult/9fca1fdcd2947ce","status":"passed","time":{"start":1690338958422,"stop":1690338959555,"duration":1133}},{"uid":"c03ea31e70e8a63a","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/74//#testresult/c03ea31e70e8a63a","status":"passed","time":{"start":1690253104680,"stop":1690253105265,"duration":585}},{"uid":"8a79880e8a2a0104","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/73//#testresult/8a79880e8a2a0104","status":"passed","time":{"start":1690166012078,"stop":1690166012687,"duration":609}},{"uid":"96089cffa80e44f7","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/72//#testresult/96089cffa80e44f7","status":"passed","time":{"start":1690079807640,"stop":1690079808738,"duration":1098}},{"uid":"e4283f1ee32bdd90","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/71//#testresult/e4283f1ee32bdd90","status":"passed","time":{"start":1689993052046,"stop":1689993053182,"duration":1136}},{"uid":"dad1055078d83cac","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/70//#testresult/dad1055078d83cac","status":"passed","time":{"start":1689907146912,"stop":1689907147565,"duration":653}},{"uid":"51aa669b9dc20480","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/69//#testresult/51aa669b9dc20480","status":"passed","time":{"start":1689820606826,"stop":1689820607457,"duration":631}},{"uid":"57652bd3868ee809","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/68//#testresult/57652bd3868ee809","status":"passed","time":{"start":1689738509983,"stop":1689738510864,"duration":881}},{"uid":"853be3394c0995da","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/67//#testresult/853be3394c0995da","status":"passed","time":{"start":1689649448178,"stop":1689649449058,"duration":880}},{"uid":"7e639e8d048c3ef","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/66//#testresult/7e639e8d048c3ef","status":"passed","time":{"start":1689563239828,"stop":1689563240603,"duration":775}},{"uid":"70fcb34ce5ac79d9","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/65//#testresult/70fcb34ce5ac79d9","status":"passed","time":{"start":1689477183095,"stop":1689477183676,"duration":581}}]},"tags":[]},"source":"8bb70966a5f1f856.json","parameterValues":["<User.SUPERUSER: 'superuser'>"]}