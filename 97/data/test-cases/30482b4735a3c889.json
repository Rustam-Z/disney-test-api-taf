{"uid":"30482b4735a3c889","name":"test_createCart_withMetroAndMetroConfigBelongingToDifferentFacility_returns400AndError[User.SUPERUSER]","fullName":"tests.metro.test_cart_build.TestCreateCart#test_createCart_withMetroAndMetroConfigBelongingToDifferentFacility_returns400AndError","historyId":"fe9a36d7b34109daf12f0ed61e6f1821","time":{"start":1692238646176,"stop":1692238646865,"duration":689},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'id'","statusTrace":"self = <test_cart_build.TestCreateCart object at 0x7f0908d5aa10>\nclient = <core.http_client.HTTPClient object at 0x7f0908d7ad10>\nuser = <User.SUPERUSER: 'superuser'>\nrequest = <FixtureRequest for <Function test_createCart_withMetroAndMetroConfigBelongingToDifferentFacility_returns400AndError[User.SUPERUSER]>>\n\n    @users(User.SUPERUSER)\n    def test_createCart_withMetroAndMetroConfigBelongingToDifferentFacility_returns400AndError(self, client, user, request):\n        # Arrange\n        metro_payload, metro_response, metro_model = request.getfixturevalue('create_fake_metro_superuser')()\n>       conf_payload, conf_response, conf_model = request.getfixturevalue('create_fake_metro_item_configuration_superuser')()\n\ntests/metro/test_cart_build.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nkwargs = {}\nfacility_payload = {'address_line1': 'Unit 5160 Box 1964\\nDPO AE 54743', 'address_line2': '09657 Jaime Flat\\nNorth Lisa, ID 56282', 'city': 'New Kathyview', 'country': 'India', ...}\nfacility_response = <Response [201]>\nfacility_model = CreateFacilitySuccessResponse(status=True, message='Successfully', data=_Facility(id=3107, name='John Branch', phone_n...2', zip_code='06355', customers=[], threshold=6304.0, warning_threshold=5021.0, critical_threshold=6209.0), error=None)\ncategory_payload = {'name': 'Donna Smith'}, category_response = <Response [201]>\ncategory_model = CreateInventoryCategorySuccessResponse(status=True, message='Successfully', data=_InventoryCategory(id=1612, name='Don...ated_by=_UserField(id=1, email='admin@disney.com'), updated_by=_UserField(id=1, email='admin@disney.com')), error=None)\ninventory_item_type_payload = {'category': 1612, 'description': 'Voice impact tend doctor television. Center left none child large. Lead address measure hard somebody discussion those.', 'name': 'Kristy Roth'}\n\n    def _fixture(**kwargs):\n        # Setup\n        # Create facility\n        facility_payload = data.fake.model.facility()\n        facility_response, facility_model = FacilityAPI(client).create_facility(data=facility_payload)\n        nonlocal facility_id\n        facility_id = facility_model.data.id\n    \n        # Create inventory category\n        category_payload = data.fake.model.inventory_category()\n        category_response, category_model = InventoryCategoryAPI(client).create_category(data=category_payload)\n        nonlocal category_id\n        category_id = category_model.data.id\n    \n        # Create inventory item type\n        inventory_item_type_payload = data.fake.model.inventory_item_type(category_id=category_id)\n        inventory_item_type_response, inventory_item_type_model = InventoryItemTypeAPI(client).create_item_type(\n            data=inventory_item_type_payload\n        )\n        nonlocal inventory_item_type_id\n        inventory_item_type_id = inventory_item_type_model.data.id\n    \n        # Create facility item type\n        payload = data.fake.model.facility_item_type(item_type_id=inventory_item_type_id, facility_id=facility_id)\n        response, model = FacilityItemTypeAPI(client).create_item_type(data=payload)\n        nonlocal facility_item_type_id\n        facility_item_type_id = model.data.id\n    \n        # Create metro item configuration\n        payload = data.fake.model.metro_item_configuration(\n            facility_id=facility_id,\n            facility_item_type_ids=[facility_item_type_id],\n            **kwargs\n        )\n        response, model = MetroItemConfigurationAPI(client).create_config(data=payload)\n        nonlocal metro_item_config_id\n>       metro_item_config_id = model.data.id\nE       AttributeError: 'NoneType' object has no attribute 'id'\n\nfixtures/metro_item_configuration.py:55: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":3,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1692238496140,"stop":1692238496157,"duration":17},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"client","time":{"start":1692238496157,"stop":1692238496157,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"users","time":{"start":1692238646175,"stop":1692238646175,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"create_fake_facility","time":{"start":1692238646176,"stop":1692238646176,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"create_fake_metro_superuser","time":{"start":1692238646176,"stop":1692238646176,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"create_fake_metro_item_configuration_superuser","time":{"start":1692238646461,"stop":1692238646461,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"afterStages":[{"name":"create_fake_metro_item_configuration_superuser::0","time":{"start":1692238646874,"stop":1692238647325,"duration":451},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"create_fake_metro_superuser::0","time":{"start":1692238647326,"stop":1692238647434,"duration":108},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"create_fake_facility::0","time":{"start":1692238647435,"stop":1692238647658,"duration":223},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"client::0","time":{"start":1692238738611,"stop":1692238738612,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"parentSuite","value":"tests.metro"},{"name":"suite","value":"test_cart_build"},{"name":"subSuite","value":"TestCreateCart"},{"name":"host","value":"fv-az247-528"},{"name":"thread","value":"2269-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.metro.test_cart_build"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"user","value":"<User.SUPERUSER: 'superuser'>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"f4de8924f4620e9","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'id'","time":{"start":1692238644667,"stop":1692238645374,"duration":707}},{"uid":"48b6f8ae5954ce","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'id'","time":{"start":1692238643160,"stop":1692238643869,"duration":709}},{"uid":"6a1dbe096ff8a699","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'id'","time":{"start":1692238641622,"stop":1692238642359,"duration":737}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":14,"skipped":0,"passed":69,"unknown":0,"total":83},"items":[{"uid":"33ad7f3633d94d71","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/96//#testresult/33ad7f3633d94d71","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'id'","time":{"start":1692152341428,"stop":1692152342175,"duration":747}},{"uid":"fcf8cee6d1de0f4b","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/95//#testresult/fcf8cee6d1de0f4b","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'id'","time":{"start":1692065939786,"stop":1692065940583,"duration":797}},{"uid":"b1d02a116b059624","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/94//#testresult/b1d02a116b059624","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'id'","time":{"start":1691979530146,"stop":1691979530650,"duration":504}},{"uid":"74e657398c907011","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/93//#testresult/74e657398c907011","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'id'","time":{"start":1691893102138,"stop":1691893102679,"duration":541}},{"uid":"ca88eb89ea4dd645","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/92//#testresult/ca88eb89ea4dd645","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'id'","time":{"start":1691806625079,"stop":1691806625838,"duration":759}},{"uid":"65e9d1e7e69b3135","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/91//#testresult/65e9d1e7e69b3135","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'id'","time":{"start":1691720272439,"stop":1691720273032,"duration":593}},{"uid":"bea09c5ba2f1e238","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/90//#testresult/bea09c5ba2f1e238","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'id'","time":{"start":1691634854049,"stop":1691634854595,"duration":546}},{"uid":"702795a54b8f2a52","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/89//#testresult/702795a54b8f2a52","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'id'","time":{"start":1691548134633,"stop":1691548135315,"duration":682}},{"uid":"5b113c1b7ae4f002","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/88//#testresult/5b113c1b7ae4f002","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'id'","time":{"start":1691461710734,"stop":1691461711246,"duration":512}},{"uid":"2b361588ebd1ea5d","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/87//#testresult/2b361588ebd1ea5d","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'id'","time":{"start":1691375402556,"stop":1691375403114,"duration":558}},{"uid":"7972c137049b06a1","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/86//#testresult/7972c137049b06a1","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'id'","time":{"start":1691288596689,"stop":1691288597336,"duration":647}},{"uid":"c721fca441751309","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/85//#testresult/c721fca441751309","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'id'","time":{"start":1691202369041,"stop":1691202369630,"duration":589}},{"uid":"9ca0345aecb21de","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/84//#testresult/9ca0345aecb21de","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'id'","time":{"start":1691116125936,"stop":1691116126529,"duration":593}},{"uid":"a787e53699aa8e75","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/83//#testresult/a787e53699aa8e75","status":"passed","time":{"start":1691029619200,"stop":1691029619856,"duration":656}},{"uid":"e3d1fc7cf05b8737","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/82//#testresult/e3d1fc7cf05b8737","status":"passed","time":{"start":1690943167100,"stop":1690943168305,"duration":1205}},{"uid":"9be0e961f4019087","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/81//#testresult/9be0e961f4019087","status":"passed","time":{"start":1690857391289,"stop":1690857392308,"duration":1019}},{"uid":"12913b29918f7570","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/80//#testresult/12913b29918f7570","status":"passed","time":{"start":1690770679074,"stop":1690770680260,"duration":1186}},{"uid":"3f0bf8de5e1a9804","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/79//#testresult/3f0bf8de5e1a9804","status":"passed","time":{"start":1690684067619,"stop":1690684068782,"duration":1163}},{"uid":"ed353156c25aa7","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/78//#testresult/ed353156c25aa7","status":"passed","time":{"start":1690597510467,"stop":1690597511263,"duration":796}},{"uid":"6c656ad952d2c1d4","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/77//#testresult/6c656ad952d2c1d4","status":"passed","time":{"start":1690511295172,"stop":1690511296046,"duration":874}}]},"tags":[]},"source":"30482b4735a3c889.json","parameterValues":["<User.SUPERUSER: 'superuser'>"]}