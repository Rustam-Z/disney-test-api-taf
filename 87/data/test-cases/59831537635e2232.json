{"uid":"59831537635e2232","name":"test_getOrderItemTypes_withValidData_returns200AndData[User.SUPERUSER]","fullName":"tests.dashboards.test_order_history.TestGetOrderItemTypes#test_getOrderItemTypes_withValidData_returns200AndData","historyId":"7ca7329ede9a6ad576f8dadbfa7a55ad","time":{"start":1691375360718,"stop":1691375361190,"duration":472},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'id'","statusTrace":"self = <test_order_history.TestGetOrderItemTypes object at 0x7fd2f1b68ed0>\nclient = <core.http_client.HTTPClient object at 0x7fd2f2f36b50>\nuser = <User.SUPERUSER: 'superuser'>\nassign_metro = <function assign_metro.<locals>._fixture at 0x7fd2f2ad4e00>\n\n    @users(User.SUPERUSER)\n    def test_getOrderItemTypes_withValidData_returns200AndData(self, client, user, assign_metro):\n        # Arrange\n>       setup = assign_metro()\n\ntests/dashboards/test_order_history.py:93: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nfixtures/staging.py:37: in _fixture\n    cart_payload, cart_response, cart_model = create_fake_cart_superuser(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nkwargs = {'facility_id': 1315}, facility_id = 1315\ncategory_payload = {'name': 'Richard Coleman'}\ncategory_response = <Response [201]>\ncategory_model = CreateInventoryCategorySuccessResponse(status=True, message='Successfully', data=_InventoryCategory(id=568, name='Rich...ated_by=_UserField(id=1, email='admin@disney.com'), updated_by=_UserField(id=1, email='admin@disney.com')), error=None)\n\n    def _fixture(**kwargs):\n        # Arrange\n    \n        # Create facility\n        if 'facility_id' not in kwargs:\n            facility_payload, facility_response, facility_model = create_fake_facility(no_of_customers=1)\n            kwargs['facility_id'] = facility_model.data.id\n        facility_id = kwargs['facility_id']\n    \n        # Create inventory category\n        category_payload = data.fake.model.inventory_category()\n        category_response, category_model = InventoryCategoryAPI(client).create_category(data=category_payload)\n        nonlocal category_id\n        category_id = category_model.data.id\n    \n        # Create inventory item type\n        inventory_item_type_payload = data.fake.model.inventory_item_type(category_id=category_id)\n        inventory_item_type_response, inventory_item_type_model = InventoryItemTypeAPI(client).create_item_type(\n            data=inventory_item_type_payload\n        )\n        nonlocal inventory_item_type_id\n        inventory_item_type_id = inventory_item_type_model.data.id\n    \n        # Create facility item type\n        payload = data.fake.model.facility_item_type(item_type_id=inventory_item_type_id, facility_id=facility_id)\n        response, model = FacilityItemTypeAPI(client).create_item_type(data=payload)\n        nonlocal facility_item_type_id\n        facility_item_type_id = model.data.id\n    \n        # Create metro item configuration\n        payload = data.fake.model.metro_item_configuration(\n            facility_id=facility_id,\n            facility_item_type_ids=[facility_item_type_id],\n        )\n        response, conf_model = MetroItemConfigurationAPI(client).create_config(data=payload)\n        nonlocal metro_item_config_id\n>       metro_item_config_id = conf_model.data.id\nE       AttributeError: 'NoneType' object has no attribute 'id'\n\nfixtures/cart_build.py:56: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":3,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1691375258625,"stop":1691375258639,"duration":14},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"client","time":{"start":1691375258639,"stop":1691375258639,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"users","time":{"start":1691375360717,"stop":1691375360717,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"create_fake_facility","time":{"start":1691375360718,"stop":1691375360718,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"create_fake_order_superuser","time":{"start":1691375360718,"stop":1691375360718,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"create_fake_cart_superuser","time":{"start":1691375360718,"stop":1691375360718,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"assign_metro","time":{"start":1691375360718,"stop":1691375360718,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"afterStages":[{"name":"create_fake_cart_superuser::0","time":{"start":1691375361197,"stop":1691375361526,"duration":329},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"assign_metro::0","time":{"start":1691375361197,"stop":1691375361197,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"create_fake_order_superuser::0","time":{"start":1691375361526,"stop":1691375361631,"duration":105},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"create_fake_facility::0","time":{"start":1691375361632,"stop":1691375361828,"duration":196},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"client::0","time":{"start":1691375497337,"stop":1691375497338,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"parentSuite","value":"tests.dashboards"},{"name":"suite","value":"test_order_history"},{"name":"subSuite","value":"TestGetOrderItemTypes"},{"name":"host","value":"fv-az812-605"},{"name":"thread","value":"2251-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.dashboards.test_order_history"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"user","value":"<User.SUPERUSER: 'superuser'>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"de8ff5bde66daa0d","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'id'","time":{"start":1691375359625,"stop":1691375360095,"duration":470}},{"uid":"1b299fd97caaf46a","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'id'","time":{"start":1691375358526,"stop":1691375359010,"duration":484}},{"uid":"aa3b4480ddf527e4","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'id'","time":{"start":1691375357447,"stop":1691375357913,"duration":466}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":6,"skipped":0,"passed":59,"unknown":0,"total":65},"items":[{"uid":"71795be172af1f31","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/86//#testresult/71795be172af1f31","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'id'","time":{"start":1691288545136,"stop":1691288545739,"duration":603}},{"uid":"ff80dcb3111b9779","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/85//#testresult/ff80dcb3111b9779","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'id'","time":{"start":1691202329211,"stop":1691202329631,"duration":420}},{"uid":"fa7b7746ca08ae48","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/84//#testresult/fa7b7746ca08ae48","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'id'","time":{"start":1691116085519,"stop":1691116085954,"duration":435}},{"uid":"d710d04dbe9763d9","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/83//#testresult/d710d04dbe9763d9","status":"passed","time":{"start":1691029596978,"stop":1691029597800,"duration":822}},{"uid":"dc001f7ac2a159da","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/82//#testresult/dc001f7ac2a159da","status":"passed","time":{"start":1690943128343,"stop":1690943129790,"duration":1447}},{"uid":"22a8bc7621e439ab","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/81//#testresult/22a8bc7621e439ab","status":"passed","time":{"start":1690857356716,"stop":1690857357977,"duration":1261}},{"uid":"9c859200af1bf391","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/80//#testresult/9c859200af1bf391","status":"passed","time":{"start":1690770640022,"stop":1690770641479,"duration":1457}},{"uid":"d1fc4fe6891208de","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/79//#testresult/d1fc4fe6891208de","status":"passed","time":{"start":1690684028929,"stop":1690684030404,"duration":1475}},{"uid":"9bf95a903d1f2c11","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/78//#testresult/9bf95a903d1f2c11","status":"passed","time":{"start":1690597483465,"stop":1690597484439,"duration":974}},{"uid":"5d385f5633b82c0d","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/77//#testresult/5d385f5633b82c0d","status":"passed","time":{"start":1690511265842,"stop":1690511266902,"duration":1060}},{"uid":"ed96c0a20c399736","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/76//#testresult/ed96c0a20c399736","status":"passed","time":{"start":1690424729703,"stop":1690424731002,"duration":1299}},{"uid":"163b0a7e65fe35ad","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/75//#testresult/163b0a7e65fe35ad","status":"passed","time":{"start":1690338922092,"stop":1690338923527,"duration":1435}},{"uid":"e6c80dfb81f6658a","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/74//#testresult/e6c80dfb81f6658a","status":"passed","time":{"start":1690253084205,"stop":1690253084954,"duration":749}},{"uid":"80992cbfadaf94a8","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/73//#testresult/80992cbfadaf94a8","status":"passed","time":{"start":1690165992634,"stop":1690165993352,"duration":718}},{"uid":"21c642f42ac779ba","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/72//#testresult/21c642f42ac779ba","status":"passed","time":{"start":1690079781228,"stop":1690079782194,"duration":966}},{"uid":"2dcd527cd1e7a231","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/71//#testresult/2dcd527cd1e7a231","status":"passed","time":{"start":1689993016454,"stop":1689993017847,"duration":1393}},{"uid":"fd4bb6da8265495f","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/70//#testresult/fd4bb6da8265495f","status":"passed","time":{"start":1689907124777,"stop":1689907125554,"duration":777}},{"uid":"e9a94447b0f62652","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/69//#testresult/e9a94447b0f62652","status":"passed","time":{"start":1689820586193,"stop":1689820586912,"duration":719}},{"uid":"2b9459636131d8da","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/68//#testresult/2b9459636131d8da","status":"passed","time":{"start":1689738480227,"stop":1689738481281,"duration":1054}},{"uid":"280d2559e2093fed","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/67//#testresult/280d2559e2093fed","status":"passed","time":{"start":1689649418946,"stop":1689649420017,"duration":1071}}]},"tags":[]},"source":"59831537635e2232.json","parameterValues":["<User.SUPERUSER: 'superuser'>"]}