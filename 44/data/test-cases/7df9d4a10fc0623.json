{"uid":"7df9d4a10fc0623","name":"test_deleteMetroBySuperuser_withWrongID_returns404[User.SUPERUSER]","fullName":"tests.metro.test_metro.TestDeleteMetro#test_deleteMetroBySuperuser_withWrongID_returns404","historyId":"a509c9fd8d33a22f4ce68a473db8236e","time":{"start":1687662794915,"stop":1687662795073,"duration":158},"status":"failed","statusMessage":"AssertionError: Status code is different than expected. Actual: 204, expected: 404. Response payload:","statusTrace":"self = <test_metro.TestDeleteMetro object at 0x7f6975984b90>\nclient = <core.http_client.HTTPClient object at 0x7f697582a090>\nuser = <User.SUPERUSER: 'superuser'>\n\n    @users(User.SUPERUSER)\n    def test_deleteMetroBySuperuser_withWrongID_returns404(self, client, user):\n        # Arrange\n        not_existing_id = data.fake.pyint()\n    \n        # Act\n        response, model = MetroAPI(client).delete_metro(id=not_existing_id)\n    \n        # Assert\n>       APIResponse(response).assert_status(404)\n\ntests/metro/test_metro.py:52: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <core.asserters.APIResponse object at 0x7f697575d990>, status_code = 404\n\n    def assert_status(self, status_code: int):\n>       assert self.response.status_code == status_code, \\\n            f'{AssertionMessage.WRONG_STATUS_CODE.value} ' \\\n            f'Actual: {self.response.status_code}, ' \\\n            f'expected: {status_code}. ' \\\n            f'Response payload: {self.body_str()}'\nE       AssertionError: Status code is different than expected. Actual: 204, expected: 404. Response payload:\n\ncore/asserters.py:25: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1687662575132,"stop":1687662575150,"duration":18},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"client","time":{"start":1687662575150,"stop":1687662575150,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"users","time":{"start":1687662794914,"stop":1687662794915,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"afterStages":[{"name":"client::0","time":{"start":1687662867630,"stop":1687662867632,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"parentSuite","value":"tests.metro"},{"name":"suite","value":"test_metro"},{"name":"subSuite","value":"TestDeleteMetro"},{"name":"host","value":"fv-az502-753"},{"name":"thread","value":"2434-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.metro.test_metro"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"user","value":"<User.SUPERUSER: 'superuser'>"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"7df9d4a10fc0623.json","parameterValues":["<User.SUPERUSER: 'superuser'>"]}