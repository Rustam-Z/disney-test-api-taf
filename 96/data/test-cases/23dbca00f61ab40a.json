{"uid":"23dbca00f61ab40a","name":"test_updateCustomer_withExistingNameAndBarcode_returns400AndError[User.SUPERUSER]","fullName":"tests.customer.test_customer.TestUpdateCustomer#test_updateCustomer_withExistingNameAndBarcode_returns400AndError","historyId":"a1507f03d5f40c2b4e2ba425fac34adc","time":{"start":1685973735772,"stop":1685973735864,"duration":92},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'id'","statusTrace":"self = <test_customer.TestUpdateCustomer object at 0x7f0cff8fed10>\nclient = <core.http_client.HTTPClient object at 0x7f0d008f4e10>\nuser = <User.SUPERUSER: 'superuser'>\nrequest = <FixtureRequest for <Function test_updateCustomer_withExistingNameAndBarcode_returns400AndError[User.SUPERUSER]>>\n\n    @users(User.SUPERUSER)\n    def test_updateCustomer_withExistingNameAndBarcode_returns400AndError(self, client, user, request):\n        # Arrange\n>       payload, response, model_1 = request.getfixturevalue('create_fake_customer')()\n\ntests/customer/test_customer.py:114: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nkwargs = {}\npayload = {'address_line1': '779 Stewart Parkways Apt. 922\\nPort Brenda, VT 81518', 'address_line2': '272 Melissa Villages\\nFosterton, FM 62220', 'barcode': '0223291556975', 'city': 'Williamberg', ...}\nresponse = <Response [400]>\nmodel = ErrorResponse(status=False, message='Error', data=None, error={'name': ['customer with this name already exists.']})\n\n    def _fixture(**kwargs):\n        # Create customer\n        payload = data.fake.model.customer(**kwargs)\n        response, model = CustomerAPI(client).create_customer(data=payload)\n        nonlocal customer_id\n>       customer_id = model.data.id\nE       AttributeError: 'NoneType' object has no attribute 'id'\n\nfixtures/customer.py:23: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1685973732854,"stop":1685973732870,"duration":16},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"client","time":{"start":1685973732871,"stop":1685973732871,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"users","time":{"start":1685973735771,"stop":1685973735772,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"create_fake_customer","time":{"start":1685973735772,"stop":1685973735772,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"afterStages":[{"name":"create_fake_customer::0","time":{"start":1685973735917,"stop":1685973735999,"duration":82},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"client::0","time":{"start":1685973849867,"stop":1685973849868,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"parentSuite","value":"tests.customer"},{"name":"suite","value":"test_customer"},{"name":"subSuite","value":"TestUpdateCustomer"},{"name":"host","value":"fv-az301-284"},{"name":"thread","value":"2419-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.customer.test_customer"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"user","value":"<User.SUPERUSER: 'superuser'>"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"23dbca00f61ab40a.json","parameterValues":["<User.SUPERUSER: 'superuser'>"]}