{"uid":"cb8f831cda808de9","name":"test_createCustomer_withExistingNameAndBarcode_returns400AndError[User.SUPERUSER-existing_data1-error1]","fullName":"tests.customer.test_customer.TestCreateCustomer#test_createCustomer_withExistingNameAndBarcode_returns400AndError","historyId":"2bbf236b4a2b7dd786ef27677ee0e788","time":{"start":1704248643694,"stop":1704248643807,"duration":113},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'id'","statusTrace":"self = <test_customer.TestCreateCustomer object at 0x7f8065588790>\nclient = <core.http_client.HTTPClient object at 0x7f806558c3d0>\nuser = <User.SUPERUSER: 'superuser'>, existing_data = {'name': 'John Brown'}\nerror = {'name': ['customer with this name already exists.']}\ncreate_fake_customer = <function create_fake_customer.<locals>._fixture at 0x7f8065465a80>\n\n    @pytest.mark.parametrize('existing_data, error', [\n        ({'name': data.fake.name(), 'barcode': data.fake.ean13()}, {\n            'name': ['customer with this name already exists.'],\n            'barcode': ['customer with this barcode already exists.']\n        }),\n        ({'name': data.fake.name()}, {\n            'name': ['customer with this name already exists.']\n        }),\n        ({'barcode': data.fake.ean13()}, {\n            'barcode': ['customer with this barcode already exists.']\n        }),\n    ])\n    @users(User.SUPERUSER)\n    def test_createCustomer_withExistingNameAndBarcode_returns400AndError(\n        self, client, user, existing_data, error, create_fake_customer\n    ):\n        # Arrange\n>       create_fake_customer(**existing_data)\n\ntests/customer/test_customer.py:69: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nkwargs = {'name': 'John Brown'}\nrequest_payload = {'address_line1': '4737 Julie Falls\\nJonathanhaven, TX 86803', 'address_line2': '07528 Bell Plain\\nGreenville, CT 71484', 'barcode': '6718738829360', 'city': 'Gregoryfort', ...}\nresponse = <Response [400]>\nmodel = ErrorResponse(status=False, message='Error', data=None, error={'name': ['customer with this name already exists.']})\n\n    def _fixture(**kwargs):\n        # Create customer\n        request_payload = data.fake.model.customer(**kwargs)\n        response, model = CustomerAPI(client).create_customer(data=request_payload)\n        nonlocal customer_id\n>       customer_id = model.data.id\nE       AttributeError: 'NoneType' object has no attribute 'id'\n\nfixtures/customer.py:27: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":3,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1704248641432,"stop":1704248641446,"duration":14},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"client","time":{"start":1704248641446,"stop":1704248641447,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"users","time":{"start":1704248643694,"stop":1704248643694,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"create_fake_customer","time":{"start":1704248643694,"stop":1704248643694,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"create_fake_customer::0","time":{"start":1704248643814,"stop":1704248643919,"duration":105},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"client::0","time":{"start":1704249691244,"stop":1704249691245,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.customer"},{"name":"suite","value":"test_customer"},{"name":"subSuite","value":"TestCreateCustomer"},{"name":"host","value":"fv-az478-246"},{"name":"thread","value":"2149-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.customer.test_customer"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"error","value":"{'name': ['customer with this name already exists.']}"},{"name":"existing_data","value":"{'name': 'John Brown'}"},{"name":"user","value":"<User.SUPERUSER: 'superuser'>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"5a215bbd7a0ee4f","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'id'","time":{"start":1704248643475,"stop":1704248643583,"duration":108}},{"uid":"d54b6f54048c823e","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'id'","time":{"start":1704248643246,"stop":1704248643353,"duration":107}},{"uid":"26fc49b1f2d2bec9","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'id'","time":{"start":1704248642992,"stop":1704248643096,"duration":104}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"cb8f831cda808de9.json","parameterValues":["{'name': ['customer with this name already exists.']}","{'name': 'John Brown'}","<User.SUPERUSER: 'superuser'>"]}