{"uid":"100c1f04ee5cc2e9","name":"test_createInventoryLocation_withValidData_returns201AndData[User.SUPERUSER-clear_metro]","fullName":"tests.inventory.test_inventory_location.TestCreateInventoryLocation#test_createInventoryLocation_withValidData_returns201AndData","historyId":"ed62a335b20480b779f96a09f6453ad2","time":{"start":1707965528885,"stop":1707965528975,"duration":90},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'id'","statusTrace":"self = <test_inventory_location.TestCreateInventoryLocation object at 0x7fdae31038d0>\nclient = <core.http_client.HTTPClient object at 0x7fdae2b35550>\nuser = <User.SUPERUSER: 'superuser'>\nrequest = <FixtureRequest for <Function test_createInventoryLocation_withValidData_returns201AndData[User.SUPERUSER-clear_metro]>>\nlocation_type = 'clear_metro'\n\n    @pytest.mark.parametrize('location_type', ['exit', 'clear_metro', 'enter'])\n    @users(User.SUPERUSER)\n    def test_createInventoryLocation_withValidData_returns201AndData(self, client, user, request, location_type):\n        # Act\n>       payload, response, model = request.getfixturevalue('create_fake_inventory_location_superuser')(\n            location_type=location_type\n        )\n\ntests/inventory/test_inventory_location.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nfixtures/inventory_location.py:14: in _fixture\n    facility_payload, facility_response, facility_model = create_fake_facility(no_of_customers=1)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nno_of_customers = 1, kwargs = {}, _ = 0\npayload = {'address_line1': '71104 Williams Ford\\nNorth Christine, NY 26146', 'address_line2': '95698 Chris Walk\\nMitchellfort, WY 79492', 'barcode': '7757714514455', 'city': 'Alicialand', ...}\nresponse = <Response [400]>\nmodel = ErrorResponse(status=False, message='Error', data=None, error={'name': ['customer with this name already exists.']})\n\n    def _fixture(no_of_customers: int = 0, **kwargs):\n        # Create customers\n        for _ in range(no_of_customers):\n            payload = data.fake.model.customer()  # Request body_str JSON\n            response, model = CustomerAPI(client).create_customer(data=payload)\n>           customers.append(model.data.id)\nE           AttributeError: 'NoneType' object has no attribute 'id'\n\nfixtures/facility.py:18: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1707963505045,"stop":1707963505059,"duration":14},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"client","time":{"start":1707963505060,"stop":1707963505060,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"users","time":{"start":1707965528884,"stop":1707965528884,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"create_fake_facility","time":{"start":1707965528885,"stop":1707965528885,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"create_fake_inventory_location_superuser","time":{"start":1707965528885,"stop":1707965528885,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"create_fake_inventory_location_superuser::0","time":{"start":1707965528979,"stop":1707965529063,"duration":84},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"create_fake_facility::0","time":{"start":1707965529064,"stop":1707965529150,"duration":86},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"client::0","time":{"start":1707965612529,"stop":1707965612530,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.inventory"},{"name":"suite","value":"test_inventory_location"},{"name":"subSuite","value":"TestCreateInventoryLocation"},{"name":"host","value":"fv-az713-344"},{"name":"thread","value":"2178-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.inventory.test_inventory_location"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"location_type","value":"'clear_metro'"},{"name":"user","value":"<User.SUPERUSER: 'superuser'>"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"100c1f04ee5cc2e9.json","parameterValues":["'clear_metro'","<User.SUPERUSER: 'superuser'>"]}