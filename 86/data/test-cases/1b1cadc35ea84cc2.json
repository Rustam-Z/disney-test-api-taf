{"uid":"1b1cadc35ea84cc2","name":"test_getMetroList_withExistingOrderAndWithMetros_returns200AndData[User.SUPERUSER]","fullName":"tests.staging.test_staging.TestGetMetroList#test_getMetroList_withExistingOrderAndWithMetros_returns200AndData","historyId":"3894fcce3f68e5e69c0bee633c9d8a86","time":{"start":1691288656811,"stop":1691288657380,"duration":569},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'id'","statusTrace":"self = <test_staging.TestGetMetroList object at 0x7f6b621539d0>\nclient = <core.http_client.HTTPClient object at 0x7f6b620b52d0>\nuser = <User.SUPERUSER: 'superuser'>\nrequest = <FixtureRequest for <Function test_getMetroList_withExistingOrderAndWithMetros_returns200AndData[User.SUPERUSER]>>\n\n    @users(User.SUPERUSER)\n    def test_getMetroList_withExistingOrderAndWithMetros_returns200AndData(self, client, user, request):\n        # Arrange: create order, assign metros\n>       setup = request.getfixturevalue('assign_metro')()\n\ntests/staging/test_staging.py:201: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nfixtures/staging.py:37: in _fixture\n    cart_payload, cart_response, cart_model = create_fake_cart_superuser(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nkwargs = {'facility_id': 1237}, facility_id = 1237\ncategory_payload = {'name': 'Nicholas White'}\ncategory_response = <Response [201]>\ncategory_model = CreateInventoryCategorySuccessResponse(status=True, message='Successfully', data=_InventoryCategory(id=528, name='Nich...ated_by=_UserField(id=1, email='admin@disney.com'), updated_by=_UserField(id=1, email='admin@disney.com')), error=None)\n\n    def _fixture(**kwargs):\n        # Arrange\n    \n        # Create facility\n        if 'facility_id' not in kwargs:\n            facility_payload, facility_response, facility_model = create_fake_facility(no_of_customers=1)\n            kwargs['facility_id'] = facility_model.data.id\n        facility_id = kwargs['facility_id']\n    \n        # Create inventory category\n        category_payload = data.fake.model.inventory_category()\n        category_response, category_model = InventoryCategoryAPI(client).create_category(data=category_payload)\n        nonlocal category_id\n        category_id = category_model.data.id\n    \n        # Create inventory item type\n        inventory_item_type_payload = data.fake.model.inventory_item_type(category_id=category_id)\n        inventory_item_type_response, inventory_item_type_model = InventoryItemTypeAPI(client).create_item_type(\n            data=inventory_item_type_payload\n        )\n        nonlocal inventory_item_type_id\n        inventory_item_type_id = inventory_item_type_model.data.id\n    \n        # Create facility item type\n        payload = data.fake.model.facility_item_type(item_type_id=inventory_item_type_id, facility_id=facility_id)\n        response, model = FacilityItemTypeAPI(client).create_item_type(data=payload)\n        nonlocal facility_item_type_id\n        facility_item_type_id = model.data.id\n    \n        # Create metro item configuration\n        payload = data.fake.model.metro_item_configuration(\n            facility_id=facility_id,\n            facility_item_type_ids=[facility_item_type_id],\n        )\n        response, conf_model = MetroItemConfigurationAPI(client).create_config(data=payload)\n        nonlocal metro_item_config_id\n>       metro_item_config_id = conf_model.data.id\nE       AttributeError: 'NoneType' object has no attribute 'id'\n\nfixtures/cart_build.py:56: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":3,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1691288432147,"stop":1691288432160,"duration":13},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0},{"name":"client","time":{"start":1691288432160,"stop":1691288432161,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0},{"name":"create_fake_facility","time":{"start":1691288656811,"stop":1691288656812,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0},{"name":"users","time":{"start":1691288656811,"stop":1691288656811,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0},{"name":"create_fake_cart_superuser","time":{"start":1691288656812,"stop":1691288656812,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0},{"name":"assign_metro","time":{"start":1691288656812,"stop":1691288656812,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0},{"name":"create_fake_order_superuser","time":{"start":1691288656812,"stop":1691288656812,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0}],"afterStages":[{"name":"assign_metro::0","time":{"start":1691288657411,"stop":1691288657411,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0},{"name":"create_fake_cart_superuser::0","time":{"start":1691288657412,"stop":1691288657778,"duration":366},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0},{"name":"create_fake_order_superuser::0","time":{"start":1691288657778,"stop":1691288657893,"duration":115},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0},{"name":"create_fake_facility::0","time":{"start":1691288657893,"stop":1691288658121,"duration":228},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0},{"name":"client::0","time":{"start":1691288709802,"stop":1691288709803,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0}],"labels":[{"name":"parentSuite","value":"tests.staging"},{"name":"suite","value":"test_staging"},{"name":"subSuite","value":"TestGetMetroList"},{"name":"host","value":"fv-az450-495"},{"name":"thread","value":"2260-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.staging.test_staging"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"user","value":"<User.SUPERUSER: 'superuser'>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"ac550f62f9f7c81d","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'id'","time":{"start":1691288655512,"stop":1691288656080,"duration":568}},{"uid":"42327664e6e560a9","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'id'","time":{"start":1691288654186,"stop":1691288654783,"duration":597}},{"uid":"df8e2620680eff09","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'id'","time":{"start":1691288653389,"stop":1691288653557,"duration":168}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":3,"skipped":0,"passed":69,"unknown":0,"total":72},"items":[{"uid":"4cfd96eda8564ca2","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/85//#testresult/4cfd96eda8564ca2","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'id'","time":{"start":1691202417657,"stop":1691202418096,"duration":439}},{"uid":"c1c69af9edfd0dbc","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/84//#testresult/c1c69af9edfd0dbc","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'id'","time":{"start":1691116175089,"stop":1691116175540,"duration":451}},{"uid":"f689893d51878044","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/83//#testresult/f689893d51878044","status":"passed","time":{"start":1691029651408,"stop":1691029652226,"duration":818}},{"uid":"4de26922f2c1725f","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/82//#testresult/4de26922f2c1725f","status":"passed","time":{"start":1690943218974,"stop":1690943220442,"duration":1468}},{"uid":"8b0865cdd364c19","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/81//#testresult/8b0865cdd364c19","status":"passed","time":{"start":1690857436369,"stop":1690857437624,"duration":1255}},{"uid":"fef79795eb5d2ab7","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/80//#testresult/fef79795eb5d2ab7","status":"passed","time":{"start":1690770730346,"stop":1690770731864,"duration":1518}},{"uid":"a77cea242169c00d","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/79//#testresult/a77cea242169c00d","status":"passed","time":{"start":1690684117605,"stop":1690684119021,"duration":1416}},{"uid":"6f09d385313eb283","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/78//#testresult/6f09d385313eb283","status":"passed","time":{"start":1690597546669,"stop":1690597547635,"duration":966}},{"uid":"281e9068538e519d","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/77//#testresult/281e9068538e519d","status":"passed","time":{"start":1690511333827,"stop":1690511334893,"duration":1066}},{"uid":"df1b1154fad4c2c","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/76//#testresult/df1b1154fad4c2c","status":"passed","time":{"start":1690424810372,"stop":1690424811667,"duration":1295}},{"uid":"20ee3a5cc658817d","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/75//#testresult/20ee3a5cc658817d","status":"passed","time":{"start":1690339010248,"stop":1690339011650,"duration":1402}},{"uid":"4081058b7dfac77f","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/74//#testresult/4081058b7dfac77f","status":"passed","time":{"start":1690253135593,"stop":1690253136363,"duration":770}},{"uid":"74e6c608b7856c2e","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/73//#testresult/74e6c608b7856c2e","status":"passed","time":{"start":1690166041896,"stop":1690166042632,"duration":736}},{"uid":"421324ea44167e2c","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/72//#testresult/421324ea44167e2c","status":"passed","time":{"start":1690079846383,"stop":1690079847386,"duration":1003}},{"uid":"ff4f853dd4ecb88b","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/71//#testresult/ff4f853dd4ecb88b","status":"passed","time":{"start":1689993102929,"stop":1689993104316,"duration":1387}},{"uid":"19f3a683272e8752","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/70//#testresult/19f3a683272e8752","status":"passed","time":{"start":1689907177603,"stop":1689907178408,"duration":805}},{"uid":"8fac47807d6484ea","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/69//#testresult/8fac47807d6484ea","status":"passed","time":{"start":1689820636895,"stop":1689820637631,"duration":736}},{"uid":"bf379c81f2e701f7","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/68//#testresult/bf379c81f2e701f7","status":"passed","time":{"start":1689738550397,"stop":1689738551428,"duration":1031}},{"uid":"b502e8c1c5d11c6a","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/67//#testresult/b502e8c1c5d11c6a","status":"passed","time":{"start":1689649489253,"stop":1689649490345,"duration":1092}},{"uid":"23b9f3c791395780","reportUrl":"https://Rustam-Z.github.io/disney-test-api-taf/66//#testresult/23b9f3c791395780","status":"passed","time":{"start":1689563277660,"stop":1689563278626,"duration":966}}]},"tags":[]},"source":"1b1cadc35ea84cc2.json","parameterValues":["<User.SUPERUSER: 'superuser'>"]}