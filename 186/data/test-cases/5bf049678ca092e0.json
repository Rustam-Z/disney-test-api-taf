{"uid":"5bf049678ca092e0","name":"test_createCustomer_withExistingNameAndBarcode_returns400AndError[User.SUPERUSER-existing_data2-error2]","fullName":"tests.customer.test_customer.TestCreateCustomer#test_createCustomer_withExistingNameAndBarcode_returns400AndError","historyId":"45f4e5c38f2ea80b9447eed9eb971067","time":{"start":1699928538119,"stop":1699928538208,"duration":89},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'id'","statusTrace":"self = <test_customer.TestCreateCustomer object at 0x7f98f9188210>\nclient = <core.http_client.HTTPClient object at 0x7f98f836c890>\nuser = <User.SUPERUSER: 'superuser'>\nexisting_data = {'barcode': '1883939474871'}\nerror = {'barcode': ['customer with this barcode already exists.']}\ncreate_fake_customer = <function create_fake_customer.<locals>._fixture at 0x7f98f8bba980>\n\n    @pytest.mark.parametrize('existing_data, error', [\n        ({'name': data.fake.name(), 'barcode': data.fake.ean13()}, {\n            'name': ['customer with this name already exists.'],\n            'barcode': ['customer with this barcode already exists.']\n        }),\n        ({'name': data.fake.name()}, {\n            'name': ['customer with this name already exists.']\n        }),\n        ({'barcode': data.fake.ean13()}, {\n            'barcode': ['customer with this barcode already exists.']\n        }),\n    ])\n    @users(User.SUPERUSER)\n    def test_createCustomer_withExistingNameAndBarcode_returns400AndError(\n        self, client, user, existing_data, error, create_fake_customer\n    ):\n        # Arrange\n>       create_fake_customer(**existing_data)\n\ntests/customer/test_customer.py:69: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nkwargs = {'barcode': '1883939474871'}\nrequest_payload = {'address_line1': '5836 Richard Glens Apt. 856\\nKimberlyfurt, OK 15102', 'address_line2': 'PSC 5300, Box 0140\\nAPO AA 50660', 'barcode': '1883939474871', 'city': 'Port Susanshire', ...}\nresponse = <Response [400]>\nmodel = ErrorResponse(status=False, message='Error', data=None, error={'name': ['customer with this name already exists.']})\n\n    def _fixture(**kwargs):\n        # Create customer\n        request_payload = data.fake.model.customer(**kwargs)\n        response, model = CustomerAPI(client).create_customer(data=request_payload)\n        nonlocal customer_id\n>       customer_id = model.data.id\nE       AttributeError: 'NoneType' object has no attribute 'id'\n\nfixtures/customer.py:27: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1699928536457,"stop":1699928536471,"duration":14},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"client","time":{"start":1699928536472,"stop":1699928536472,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"users","time":{"start":1699928538118,"stop":1699928538118,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"create_fake_customer","time":{"start":1699928538119,"stop":1699928538119,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"afterStages":[{"name":"create_fake_customer::0","time":{"start":1699928538253,"stop":1699928538345,"duration":92},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"client::0","time":{"start":1699929256713,"stop":1699929256714,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"parentSuite","value":"tests.customer"},{"name":"suite","value":"test_customer"},{"name":"subSuite","value":"TestCreateCustomer"},{"name":"host","value":"fv-az877-107"},{"name":"thread","value":"2250-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.customer.test_customer"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"error","value":"{'barcode': ['customer with this barcode already exists.']}"},{"name":"existing_data","value":"{'barcode': '1883939474871'}"},{"name":"user","value":"<User.SUPERUSER: 'superuser'>"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"5bf049678ca092e0.json","parameterValues":["{'barcode': ['customer with this barcode already exists.']}","{'barcode': '1883939474871'}","<User.SUPERUSER: 'superuser'>"]}